<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Un bit de informacion cada día</title>
        <link>https://unbitdeinformacioncadadia.netlify.app/posts/</link>
        <description>Recent content in Posts on Un bit de informacion cada día</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Thu, 19 Nov 2020 18:51:45 +0100</lastBuildDate>
        <atom:link href="https://unbitdeinformacioncadadia.netlify.app/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Crear Autoridad Certificadora y Certificado autofirmado</title>
            <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/crear-autoridad-certificadora-y-certificado-autofirmado/</link>
            <pubDate>Thu, 19 Nov 2020 18:51:45 +0100</pubDate>
            
            <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/crear-autoridad-certificadora-y-certificado-autofirmado/</guid>
            <description>HTTPS / SSL Tarea 1: Certificado autofirmado PARTE 1 OBJETIVO:
Crear su autoridad certificadora (generar el certificado digital de la CA). Mostrar el fichero de configuración de la AC.
Conocimientos previos:
OpenSSL permite con una serie de comandos crear una autoridad de certificación o CA en la que los servidores y clientes internos confien. Las funciones de la CA incluyen crear certificados a partir de las solicitudes de los certificados para los servidores y también la revocación y renovación de certificados.</description>
            <content type="html"><![CDATA[<h1 id="https--ssl">HTTPS / SSL</h1>
<h2 id="tarea-1-certificado-autofirmado">Tarea 1: Certificado autofirmado</h2>
<h2 id="parte-1">PARTE 1</h2>
<p><strong>OBJETIVO:</strong></p>
<p>Crear su autoridad certificadora (generar el certificado digital de la CA). Mostrar el fichero de configuración de la AC.</p>
<p>Conocimientos previos:</p>
<p><strong>OpenSSL</strong> permite con una serie de comandos crear una autoridad de certificación o CA en la que los servidores y clientes internos confien. Las funciones de la CA incluyen crear certificados a partir de las solicitudes de los certificados para los servidores y también la revocación y renovación de certificados.</p>
<p>Para usar el protocolo HTTPS en un servidor web es necesario al menos generar un certificado autofirmado que incluya el dominio del sitio web. Ese certificado proporciona comunicaciones seguras entre el servidor y el cliente pero los clientes no lo consideran de confianza de modo que han de omitir la validación del certificado, un entorno de desarrollo o pruebas es suficiente pero en un escenario de producción para añadir más seguridad donde hay varios servidores que además requieren y validan también el certificado del cliente es necesario utilizar certificados generados por una entidad en la que se confíe, esta es la autoridad de certificación.</p>
<p>La autoridad de certificación o CA es una entidad en la que se confía, si una CA ha firmado digitalmente un certificado esta asegura que el certificado pertenece a quien dice pertenecer. Las funciones de una CA son firmar los certificados que se le envían, de revocar los certificados cuando han sido comprometidos o de renovarlos cuando su validez expira.</p>
<h4 id="crear-el-directorio-donde-vamos-a-alojar-los-ficheros-de-la-ca-y-le-damos-los-permisos-necesarios">Crear el directorio donde vamos a alojar los ficheros de la CA y le damos los permisos necesarios</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">DIR_CA=<span style="color:#e6db74">&#34;/root/ca&#34;</span>
mkdir /root/ca
cd /root/ca
mkdir certs csr crl newcerts private
chmod 700 private
touch index.txt
touch index.txt.attr
echo 1000 &gt; serial
</code></pre></div><h4 id="crear-las-variables-de-entorno-que-definiran-nuestra-ca-para-el-fichero-de-configuración">Crear las variables de entorno que definiran nuestra CA para el fichero de configuración</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">countryName_default=<span style="color:#e6db74">&#34;ES&#34;</span>
stateOrProvinceName_default=<span style="color:#e6db74">&#34;Sevilla&#34;</span>
localityName_default=<span style="color:#e6db74">&#34;Los Palacios&#34;</span>
organizationName_default=<span style="color:#e6db74">&#34;Celia&#34;</span>
organizationalUnitName_default=<span style="color:#e6db74">&#34;cgm&#34;</span>
emailAddress_default=<span style="color:#e6db74">&#34;cgarmai95@gmail.com&#34;</span>
</code></pre></div><h4 id="creamos-el-fichero-de-configuración">Creamos el fichero de configuración</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">DIR_CA=<span style="color:#e6db74">&#34;./&#34;</span>
cat &lt;&lt;EOF&gt;$DIR_CA/openssl.conf
[ ca ]
<span style="color:#75715e"># man ca</span>
default_ca = CA_default

[ CA_default ]
<span style="color:#75715e"># Directory and file locations.</span>
dir               = ${DIR_CA}
certs             = ${DIR_CA}certs
crl_dir           = ${DIR_CA}crl
new_certs_dir     = ${DIR_CA}newcerts
database          = ${DIR_CA}index.txt
serial            = ${DIR_CA}serial
RANDFILE          = ${DIR_CA}private/.rand

<span style="color:#75715e"># The root key and root certificate.</span>
private_key       = ${DIR_CA}private/ca.key.pem
certificate       = ${DIR_CA}certs/ca.cert.pem

<span style="color:#75715e"># For certificate revocation lists.</span>
crlnumber         = ${DIR_CA}crlnumber
crl               = ${DIR_CA}crl/ca.crl.pem
crl_extensions    = crl_ext
default_crl_days  = 30

<span style="color:#75715e"># SHA-1 is deprecated, so use SHA-2 instead.</span>
default_md        = sha256

name_opt          = ca_default
cert_opt          = ca_default
default_days      = 375
preserve          = no
policy            = policy_strict

[ policy_strict ]
<span style="color:#75715e"># The root CA should only sign intermediate certificates that match.</span>
<span style="color:#75715e"># See the POLICY FORMAT section of man ca.</span>
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ policy_loose ]
<span style="color:#75715e"># Allow the intermediate CA to sign a more diverse range of certificates.</span>
<span style="color:#75715e"># See the POLICY FORMAT section of the ca man page.</span>
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ req ]
<span style="color:#75715e"># Options for the req tool (man req).</span>
default_bits        = 2048
distinguished_name  = req_distinguished_name
string_mask         = utf8only
<span style="color:#75715e"># SHA-1 is deprecated, so use SHA-2 instead.</span>
default_md          = sha256
<span style="color:#75715e"># Extension to add when the -x509 option is used.</span>
x509_extensions     = v3_ca
<span style="color:#75715e"># Extension for SANs</span>
req_extensions      = v3_req

[ v3_req ]
<span style="color:#75715e"># Extensions to add to a certificate request</span>
<span style="color:#75715e"># Before invoke openssl use: export SAN=DNS:value1,DNS:value2</span>
basicConstraints = CA<span style="color:#960050;background-color:#1e0010">:</span>FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
xxxsubjectAltNamexxx =

[ req_distinguished_name ]
<span style="color:#75715e"># See &lt;https://en.wikipedia.org/wiki/Certificate_signing_request&gt;.</span>
countryName                     = Country Name (2 letter code)
stateOrProvinceName             = State or Province Name
localityName                    = Locality Name
0.organizationName              = Organization Name
organizationalUnitName          = Organizational Unit Name
commonName                      = Common Name
emailAddress                    = Email Address

<span style="color:#75715e"># Optionally, specify some defaults.</span>
countryName_default             = $countryName_default
stateOrProvinceName_default     = $stateOrProvinceName_default
localityName_default            = $localityName_default
0.organizationName_default      = $organizationName_default
organizationalUnitName_default  = $organizationalUnitName_default
emailAddress_default            = $emailAddress_default

[ v3_ca ]
<span style="color:#75715e"># Extensions for a typical CA (man x509v3_config).</span>
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid<span style="color:#960050;background-color:#1e0010">:</span>always,issuer
basicConstraints = critical, CA<span style="color:#960050;background-color:#1e0010">:</span>true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ v3_intermediate_ca ]
<span style="color:#75715e"># Extensions for a typical intermediate CA (man x509v3_config).</span>
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid<span style="color:#960050;background-color:#1e0010">:</span>always,issuer
basicConstraints = critical, CA<span style="color:#960050;background-color:#1e0010">:</span>true, pathlen<span style="color:#960050;background-color:#1e0010">:</span>0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ usr_cert ]
<span style="color:#75715e"># Extensions for client certificates (man x509v3_config).</span>
basicConstraints = CA<span style="color:#960050;background-color:#1e0010">:</span>FALSE
nsCertType = client, email
nsComment = <span style="color:#e6db74">&#34;OpenSSL Generated Client Certificate&#34;</span>
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection

[ server_cert ]
<span style="color:#75715e"># Extensions for server certificates (man x509v3_config).</span>
basicConstraints = CA<span style="color:#960050;background-color:#1e0010">:</span>FALSE
nsCertType = server
nsComment = <span style="color:#e6db74">&#34;OpenSSL Generated Server Certificate&#34;</span>
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer<span style="color:#960050;background-color:#1e0010">:</span>always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth

[ crl_ext ]
<span style="color:#75715e"># Extension for CRLs (man x509v3_config).</span>
authorityKeyIdentifier=keyid<span style="color:#960050;background-color:#1e0010">:</span>always

[ ocsp ]
<span style="color:#75715e"># Extension for OCSP signing certificates (man ocsp).</span>
basicConstraints = CA<span style="color:#960050;background-color:#1e0010">:</span>FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning
EOF
sed -i <span style="color:#e6db74">&#39;s|xxxsubjectAltNamexxx =|subjectAltName = ${ENV::SAN}|g&#39;</span> openssl.conf
</code></pre></div><h4 id="creamos-la-clave-y-certificado-de-la-autoridad-de-certificación">Creamos la clave y certificado de la autoridad de certificación</h4>
<p>Crear clave:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">openssl genrsa -aes256 -out private/ca.key.pem 4096
chmod 400 private/ca.key.pem
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">URL=celiagarcia.iesgn.org
export SAN=DNS<span style="color:#960050;background-color:#1e0010">:</span>$URL
</code></pre></div><p>Crear certificado</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">openssl req -config openssl.conf -key private/ca.key.pem -new -x509 -days 7300 -sha256 -extensions v3_ca -out certs/ca.cert.pem
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">root@debian-https<span style="color:#960050;background-color:#1e0010">:</span>~/ca<span style="color:#75715e"># openssl req -config openssl.conf -key private/ca.key.pem -new -x509 -days 7300 -sha256 -extensions v3_ca -out certs/ca.cert.pem</span>
Enter pass phrase <span style="color:#66d9ef">for</span> private/ca.key.pem<span style="color:#960050;background-color:#1e0010">:</span>
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
<span style="color:#66d9ef">For</span> some fields there will be a <span style="color:#66d9ef">default</span> value,
<span style="color:#66d9ef">If</span> you enter <span style="color:#e6db74">&#39;.&#39;</span>, the field will be left blank.
-----
Country Name (2 letter code) <span style="color:#66d9ef">[ES]</span><span style="color:#960050;background-color:#1e0010">:</span>
State or Province Name <span style="color:#66d9ef">[Sevilla]</span><span style="color:#960050;background-color:#1e0010">:</span>
Locality Name <span style="color:#66d9ef">[Los Palacios]</span><span style="color:#960050;background-color:#1e0010">:</span>
Organization Name <span style="color:#66d9ef">[Celia]</span><span style="color:#960050;background-color:#1e0010">:</span>
Organizational Unit Name <span style="color:#66d9ef">[cgm]</span><span style="color:#960050;background-color:#1e0010">:</span>
Common Name []<span style="color:#960050;background-color:#1e0010">:</span>
Email Address [cgarmai95@gmail.com]<span style="color:#960050;background-color:#1e0010">:</span>

</code></pre></div><p>Le damos los permisos necesarios.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">chmod 444 certs/ca.cert.pem
</code></pre></div><h3 id="estructura-de-directorios">Estructura de directorios</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">root@debian-https<span style="color:#960050;background-color:#1e0010">:</span>~/ca<span style="color:#75715e"># tree</span>
.
<span style="color:#960050;background-color:#1e0010">├──</span> certs
<span style="color:#960050;background-color:#1e0010">│</span>   <span style="color:#960050;background-color:#1e0010">└──</span> ca.cert.pem
<span style="color:#960050;background-color:#1e0010">├──</span> crl
<span style="color:#960050;background-color:#1e0010">├──</span> csr
<span style="color:#960050;background-color:#1e0010">│</span>   <span style="color:#960050;background-color:#1e0010">├──</span> celia.iesgn.org.csr
<span style="color:#960050;background-color:#1e0010">│</span>   <span style="color:#960050;background-color:#1e0010">└──</span> jonathan.iesgn.org.csr
<span style="color:#960050;background-color:#1e0010">├──</span> index.txt
<span style="color:#960050;background-color:#1e0010">├──</span> index.txt.attr
<span style="color:#960050;background-color:#1e0010">├──</span> newcerts
<span style="color:#960050;background-color:#1e0010">├──</span> openssl.conf
<span style="color:#960050;background-color:#1e0010">├──</span> private
<span style="color:#960050;background-color:#1e0010">│</span>   <span style="color:#960050;background-color:#1e0010">├──</span> ca.key.pem
<span style="color:#960050;background-color:#1e0010">│</span>   <span style="color:#960050;background-color:#1e0010">└──</span> celia.iesgn.org.key.pem
<span style="color:#960050;background-color:#1e0010">└──</span> serial

</code></pre></div><h3 id="fichero-de-configuración-opensslconf">Fichero de configuración (openssl.conf)</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">[ ca ]
<span style="color:#75715e"># man ca</span>
default_ca = CA_default

[ CA_default ]
<span style="color:#75715e"># Directory and file locations.</span>
dir               = ./
certs             = ./certs
crl_dir           = ./crl
new_certs_dir     = ./newcerts
database          = ./index.txt
serial            = ./serial
RANDFILE          = ./private/.rand

<span style="color:#75715e"># The root key and root certificate.</span>
private_key       = ./private/ca.key.pem
certificate       = ./certs/ca.cert.pem

<span style="color:#75715e"># For certificate revocation lists.</span>
crlnumber         = ./crlnumber
crl               = ./crl/ca.crl.pem
crl_extensions    = crl_ext
default_crl_days  = 30

<span style="color:#75715e"># SHA-1 is deprecated, so use SHA-2 instead.</span>
default_md        = sha256

name_opt          = ca_default
cert_opt          = ca_default
default_days      = 375
preserve          = no
policy            = policy_strict

[ policy_strict ]
<span style="color:#75715e"># The root CA should only sign intermediate certificates that match.</span>
<span style="color:#75715e"># See the POLICY FORMAT section of man ca.</span>
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ policy_loose ]
<span style="color:#75715e"># Allow the intermediate CA to sign a more diverse range of certificates.</span>
<span style="color:#75715e"># See the POLICY FORMAT section of the ca man page.</span>
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ req ]
<span style="color:#75715e"># Options for the req tool (man req).</span>
default_bits        = 2048
distinguished_name  = req_distinguished_name
string_mask         = utf8only
<span style="color:#75715e"># SHA-1 is deprecated, so use SHA-2 instead.</span>
default_md          = sha256
<span style="color:#75715e"># Extension to add when the -x509 option is used.</span>
x509_extensions     = v3_ca
<span style="color:#75715e"># Extension for SANs</span>
req_extensions      = v3_req

[ v3_req ]
<span style="color:#75715e"># Extensions to add to a certificate request</span>
<span style="color:#75715e"># Before invoke openssl use: export SAN=DNS:value1,DNS:value2</span>
basicConstraints = CA<span style="color:#960050;background-color:#1e0010">:</span>FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
subjectAltName = ${ENV::SAN}

[ req_distinguished_name ]
<span style="color:#75715e"># See &lt;https://en.wikipedia.org/wiki/Certificate_signing_request&gt;.</span>
countryName                     = Country Name (2 letter code)
stateOrProvinceName             = State or Province Name
localityName                    = Locality Name
0.organizationName              = Organization Name
organizationalUnitName          = Organizational Unit Name
commonName                      = Common Name
emailAddress                    = Email Address

<span style="color:#75715e"># Optionally, specify some defaults.</span>
countryName_default             = ES
stateOrProvinceName_default     = Sevilla
localityName_default            = Los Palacios
0.organizationName_default      = Celia
organizationalUnitName_default  = cgm
emailAddress_default            = cgarmai95@gmail.com

[ v3_ca ]
<span style="color:#75715e"># Extensions for a typical CA (man x509v3_config).</span>
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid<span style="color:#960050;background-color:#1e0010">:</span>always,issuer
basicConstraints = critical, CA<span style="color:#960050;background-color:#1e0010">:</span>true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ v3_intermediate_ca ]
<span style="color:#75715e"># Extensions for a typical intermediate CA (man x509v3_config).</span>
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid<span style="color:#960050;background-color:#1e0010">:</span>always,issuer
basicConstraints = critical, CA<span style="color:#960050;background-color:#1e0010">:</span>true, pathlen<span style="color:#960050;background-color:#1e0010">:</span>0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ usr_cert ]
<span style="color:#75715e"># Extensions for client certificates (man x509v3_config).</span>
basicConstraints = CA<span style="color:#960050;background-color:#1e0010">:</span>FALSE
nsCertType = client, email
nsComment = <span style="color:#e6db74">&#34;OpenSSL Generated Client Certificate&#34;</span>
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection

[ server_cert ]
<span style="color:#75715e"># Extensions for server certificates (man x509v3_config).</span>
basicConstraints = CA<span style="color:#960050;background-color:#1e0010">:</span>FALSE
nsCertType = server
nsComment = <span style="color:#e6db74">&#34;OpenSSL Generated Server Certificate&#34;</span>
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer<span style="color:#960050;background-color:#1e0010">:</span>always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth

[ crl_ext ]
<span style="color:#75715e"># Extension for CRLs (man x509v3_config).</span>
authorityKeyIdentifier=keyid<span style="color:#960050;background-color:#1e0010">:</span>always

[ ocsp ]
<span style="color:#75715e"># Extension for OCSP signing certificates (man ocsp).</span>
basicConstraints = CA<span style="color:#960050;background-color:#1e0010">:</span>FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning

</code></pre></div><hr>
<h3 id="firmar-certificado">Firmar certificado</h3>
<p><strong>Debe recibir el fichero CSR (Solicitud de Firmar un Certificado) de su compañero, debe firmarlo y enviar el certificado generado a su compañero.</strong></p>
<ul>
<li>Una vez recibido el csr del compañero tenemos que firmarlo y devolverle el certificado generado firmado por la autoridad certificadora que hemos creado anteriormente.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">root@debian-https<span style="color:#960050;background-color:#1e0010">:</span>~/ca<span style="color:#75715e"># openssl ca -config ./openssl.conf -extensions v3_req -days 3650 -notext -md sha256 -in ./csr/jonathan.iesgn.org.csr -out ./certs/joni.firmado.csr.pem</span>
Using configuration from ./openssl.conf
Enter pass phrase <span style="color:#66d9ef">for</span> ./private/ca.key.pem<span style="color:#960050;background-color:#1e0010">:</span>
Check that the request matches the signature
Signature ok
Certificate Details<span style="color:#960050;background-color:#1e0010">:</span>
        Serial Number<span style="color:#960050;background-color:#1e0010">:</span> 4096 (0x1000)
        Validity
            Not Before<span style="color:#960050;background-color:#1e0010">:</span> Nov 19 16<span style="color:#960050;background-color:#1e0010">:</span>38<span style="color:#960050;background-color:#1e0010">:</span>06 2020 GMT
            Not After <span style="color:#960050;background-color:#1e0010">:</span> Nov 17 16<span style="color:#960050;background-color:#1e0010">:</span>38<span style="color:#960050;background-color:#1e0010">:</span>06 2030 GMT
        Subject<span style="color:#960050;background-color:#1e0010">:</span>
            countryName               = ES
            stateOrProvinceName       = Sevilla
            organizationName          = Celia
            commonName                = jonathan.iesgn.org
            emailAddress              = jonathanmarquezj@gmail.com
        X509v3 extensions<span style="color:#960050;background-color:#1e0010">:</span>
            X509v3 Basic Constraints<span style="color:#960050;background-color:#1e0010">:</span> 
                CA<span style="color:#960050;background-color:#1e0010">:</span>FALSE
            X509v3 Key Usage<span style="color:#960050;background-color:#1e0010">:</span> 
                Digital Signature, Non Repudiation, Key Encipherment
            X509v3 Subject Alternative Name<span style="color:#960050;background-color:#1e0010">:</span> 
                DNS<span style="color:#960050;background-color:#1e0010">:</span>celiagarcia.iesgn.org
Certificate is to be certified <span style="color:#66d9ef">until</span> Nov 17 16<span style="color:#960050;background-color:#1e0010">:</span>38<span style="color:#960050;background-color:#1e0010">:</span>06 2030 GMT (3650 days)
Sign the certificate? [y/n]<span style="color:#960050;background-color:#1e0010">:</span>y


1 out of 1 certificate requests certified, commit? [y/n]y
Write out database with 1 new entries
Data Base Updated

</code></pre></div><p>Y el fichero generado se lo enviamos al compañero: <strong>joni.firmado.csr.pem</strong></p>
<p><strong>¿Qué otra información debes aportar a tu compañero para que éste configure de forma adecuada su servidor web con el certificado generado?</strong></p>
<p>Debemos aportar los datos requeridos que son:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">countryName_default
stateOrProvinceName_default
organizationName_default
</code></pre></div><p>Estos están configurados en el fichero openssl.conf con &lsquo;<strong>match</strong>&rsquo;</p>
<hr>
<h2 id="parte-2">PARTE 2</h2>
<h3 id="el-alumno-que-hace-de-administrador-del-servidor-web-debe-entrepregar-una-documentación-que-describa-los-siguientes-puntos">El alumno que hace de administrador del servidor web, debe entre<!-- raw HTML omitted -->gar una documentación que describa los siguientes puntos:</h3>
<p>Estos puntos que vienen a continuación los hemos realizado con la creación de la autoridad certificadora:</p>
<ul>
<li>
<p>Crea una clave privada RSA de 4096 bits para identificar el servidor</p>
</li>
<li>
<p>Utiliza la clave anterior para generar un CSR, considerando que deseas acceder al servidor con el FQDN (tunombre.iesgn.org).</p>
</li>
<li>
<p>Envía la solicitud de firma a la entidad certificadora (su compañero).</p>
</li>
</ul>
<hr>
<ul>
<li><strong>Recibe como respuesta un certificado X.509 para el servidor firmado y el certificado de la autoridad certificadora.</strong></li>
</ul>
<p>Recibimos el certificado firmado por la autoridad certificadora</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">root@debian-https<span style="color:#960050;background-color:#1e0010">:</span>~/ca/csr<span style="color:#75715e"># ls</span>
celia.iesgn.org.csr  celia.iesgn.org.csr.pem  jonathan.iesgn.org.csr
</code></pre></div><ul>
<li><strong>Configura tu servidor web con https en el puerto 443, haciendo que las peticiones http se redireccionen a https (forzar https).</strong></li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">&lt;VirtualHost *<span style="color:#960050;background-color:#1e0010">:</span>443&gt;
        ServerName celiagarcia.iesgn.org
        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/celia

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        SSLEngine on
        SSLCertificateFile /root/ca/csr/celia.iesgn.org.csr.pem
        SSLCertificateKeyFile /root/ca/private/celia.iesgn.org.key.pem

        &lt;FilesMatch <span style="color:#e6db74">&#34;\.(php|py)$&#34;</span>&gt;
                SSLOptions +StdEnvVars
        &lt;/FilesMatch&gt;

        BrowserMatch <span style="color:#e6db74">&#34;MSIE [2-6]&#34;</span> \
                nokeepalive ssl-unclean-shutdown \
                downgrade-1.0 force-response-1.0
        BrowserMatch <span style="color:#e6db74">&#34;MSIE [17-9]&#34;</span> ssl-unclean-shutdown
&lt;/VirtualHost&gt;

</code></pre></div><p>Hay que habilitar el <strong>modulo de ssl</strong></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">a2enmod ssl
</code></pre></div><p>Reiniciamos el servidor</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">systemctl restart apache2
</code></pre></div><p>Vamos a nuestro navegador y accedemos a <a href="https://celiagarcia.iesgn.org">https://celiagarcia.iesgn.org</a></p>
<p>Comprobamos que podemos acceder, nos notificará que no es una conexión segura ya que no se conoce la entidad certificadora pero añadimos una excepción. Y vemos el certificado en el que aparece la firma de la entidad certificadora de nuestro compañero.</p>
<ul>
<li><img src="/images/ca/https1.png" alt="https1.png"></li>
<li><img src="/images/ca/https2.png" alt="https2.png"></li>
<li><img src="/images/ca/https3.png" alt="https3.png"></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Instalación y configuración inicial de los servidores</title>
            <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/instalaci%C3%B3n-y-configuraci%C3%B3n-inicial-de-los-servidores/</link>
            <pubDate>Wed, 18 Nov 2020 18:22:12 +0100</pubDate>
            
            <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/instalaci%C3%B3n-y-configuraci%C3%B3n-inicial-de-los-servidores/</guid>
            <description>En esta tarea se va a crear el escenario de trabajo que se va a usar durante todo el curso, que va a constar inicialmente de 3 instancias con nombres relacionados con el libro &amp;ldquo;Don Quijote de la Mancha&amp;rdquo;.
Pasos a realizar:
1. Creación de la red interna:  Nombre red interna de  10.0.1.0/24  2. Creación de las instancias   Dulcinea:
 Debian Buster sobre volumen de 10GB con sabor m1.</description>
            <content type="html"><![CDATA[<p>En esta tarea se va a crear el escenario de trabajo que se va a usar durante todo el curso, que va a constar inicialmente de 3 instancias con nombres relacionados con el libro &ldquo;Don Quijote de la Mancha&rdquo;.</p>
<p>Pasos a realizar:</p>
<h2 id="1-creación-de-la-red-interna">1. Creación de la red interna:</h2>
<ul>
<li>Nombre red interna de <!-- raw HTML omitted --></li>
<li>10.0.1.0/24</li>
</ul>
<h2 id="2-creación-de-las-instancias">2. Creación de las instancias</h2>
<ul>
<li>
<p><strong>Dulcinea</strong>:</p>
<ul>
<li><strong>Debian Buster</strong> sobre volumen de 10GB con sabor m1.mini</li>
<li>Accesible directamente a través de la red externa y con una IP flotante</li>
<li>Conectada a la red interna, de la que será la puerta de enlace</li>
</ul>
</li>
<li>
<p><strong>Sancho</strong>:</p>
<ul>
<li><strong>Ubuntu 20.04</strong> sobre volumen de 10GB con sabor m1.mini</li>
<li>Conectada a la red interna</li>
<li>Accesible indirectamente a través de dulcinea</li>
</ul>
</li>
<li>
<p><strong>Quijote</strong>:</p>
<ul>
<li><strong>CentOS 7</strong> sobre volumen de 10GB con sabor m1.mini</li>
<li>Conectada a la red interna</li>
<li>Accesible indirectamente a través de dulcinea</li>
</ul>
</li>
</ul>
<p>Escenario gráfico:</p>
<p><img src="../../static/images/escenario/escenario.png" alt="escenario.png"></p>
<h2 id="3-configuración-de-nat-en-dulcinea">3. Configuración de NAT en Dulcinea</h2>
<p>(Es necesario deshabilitar la seguridad en todos los puertos de dulcinea) [[https://youtu.be/jqfILWzHrS0]]</p>
<p><strong>Instalar Openstackclient</strong></p>
<p>Necesitamos instalar <em>Openstackclient</em>, para ello lo vamos hacer desde un entorno virtual para no comprometer la paquetería de nuestro sistema, ya que no es necesario para nuestro sistema actualmente.</p>
<hr>
<p>Recordamos como creamos un <strong>entorno virtual</strong> con <em>venv</em></p>
<ul>
<li>Instalamos el paquete necesario para instalar módulos:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">apt-get install python3-venv
</code></pre></div><ul>
<li>Desde el usuario sin privilegios podemos crear un entorno virtual con python3:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">python3 -m venv entorno
</code></pre></div><ul>
<li>Activar y desactivar el entorno</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">source entorno/bin/activate
<span style="color:#f92672">(</span>entorno<span style="color:#f92672">)</span>$ deactivate
</code></pre></div><hr>
<p>Usando el entorno virtual creado previamente, vamos a instalar el paquete Openstackclient (<em>necesitaremos la libreria de python3</em>).</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">sudo apt install python3-dev
pip install python-openstackclient
</code></pre></div><p>Nos vamos al &lsquo;<em>Acceso y Seguridad</em>&rsquo; del cloud y descargamos el fichero con las variables de entorno de nuestro proyecto. Este fichero tiene una extensión sh. Este script se ejecuta desde nuestro entorno virtual en el directorio del mismo. Pero antes deberemos de editar el fichero proporcionando la ruta del certificado del IES, añadiendo las siguiente línea (la ruta puede variar dependiendo de donde tengamos el certificado).</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">export OS_CACERT=/usr/local/share/ca-certificates/gonzalonazareno.crt
</code></pre></div><p>A tener en cuenta:</p>
<ul>
<li>Deberemos de tener en nuestro fichero /etc/hosts bien configurada la ip con el nombre del cloud, siendo este:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">(entorno) celiagm@debian<span style="color:#960050;background-color:#1e0010">:</span>~/venv/entorno$ sudo nano /etc/hosts
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">172.22.222.1    jupiter.gonzalonazareno.org
</code></pre></div><ul>
<li>Como hemos dicho anteriormente el script debe estar ubicado dentro de nuestro entorno virtual. Lo ejecutamos con <strong>source</strong> y le pasamos la contraseña</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">
(entorno) celiagm@debian<span style="color:#960050;background-color:#1e0010">:</span>~/venv/entorno$ source Proyecto\ de\ celia.garcia-openrc.sh
Please enter your OpenStack Password <span style="color:#66d9ef">for</span> project Proyecto de celia.garcia as user celia.garcia<span style="color:#960050;background-color:#1e0010">:</span> 
</code></pre></div><ul>
<li>Ahora listamos los servidores que tenemos en nuestro proyecto</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">$ openstack server list

</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">
+--------------------------------------+----------------+--------+-----------------------------------------------------------------------+--------------------------------+---------+
| ID                                   | Name           | Status | Networks                                                              | Image                          | Flavor  |
+--------------------------------------+----------------+--------+-----------------------------------------------------------------------+--------------------------------+---------+
| be4e0478-8b93-4346-a4ab-64edfe3bfb37 | Dulcinea       | ACTIVE | celia.garcia=10.0.1.14; red de celia.garcia=10.0.0.11, 172.22.200.150 | Debian Buster 10.6             | m1.mini |
| e23fc109-de1b-4bdf-8b88-cf7b2721350c | Quijote        | ACTIVE | celia.garcia=10.0.1.13                                                | CentOS 7                       | m1.mini |
| 26e2f672-2408-40d8-bcec-752059db35fa | Sancho         | ACTIVE | celia.garcia=10.0.1.10                                                | Ubuntu 20.04 LTS (focal fossa) | m1.mini |
| a460fd00-f4d7-4999-bc05-a42f54e3dd56 | cliente_nginx  | ACTIVE | red de celia.garcia=10.0.0.6, 172.22.200.148                          | Debian Buster 10.6             | m1.mini |
| d88962ae-4617-4fe3-be33-c1bbfe686c69 | servidor_nginx | ACTIVE | red de celia.garcia=10.0.0.5, 172.22.200.152                          | Debian Buster 10.6             | m1.mini |
+--------------------------------------+----------------+--------+-----------------------------------------------------------------------+--------------------------------+---------+

</code></pre></div><ul>
<li>Listamos las redes que tenemos</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">$ openstack network list
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">+--------------------------------------+---------------------+----------------------------------------------------------------------------+
| ID                                   | Name                | Subnets                                                                    |
+--------------------------------------+---------------------+----------------------------------------------------------------------------+
| 21124241-dddf-4c06-b646-eb15ed5cd84a | celia.garcia        | 46e30aa0-10de-4883-a8c7-707b5a884eec                                       |
| 49812d85-8e7a-4c31-baa2-d427692f6568 | ext-net             | 158bbe3e-3c98-485e-8042-ba6402111ea6, 6218710b-aa05-46f7-b198-7639efe3da95 |
| 90c37b05-bd26-49a3-b797-c6038b49a169 | red de celia.garcia | 029d2907-1315-41f3-af12-c1285ceb43d2                                       |
+--------------------------------------+----
</code></pre></div><ul>
<li>Listar los puertos</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">$ openstack port list
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">(entorno) celiagm@debian<span style="color:#960050;background-color:#1e0010">:</span>~/venv/entorno$ openstack port list
+--------------------------------------+------+-------------------+--------------------------------------------------------------------------+--------+
| ID                                   | Name | MAC Address       | Fixed IP Addresses                                                       | Status |
+--------------------------------------+------+-------------------+--------------------------------------------------------------------------+--------+
| 4046288e-9357-4539-b66a-b4ccc7476747 |      | fa<span style="color:#960050;background-color:#1e0010">:</span>16<span style="color:#960050;background-color:#1e0010">:</span>3e<span style="color:#960050;background-color:#1e0010">💿</span>4d<span style="color:#960050;background-color:#1e0010">:</span>70 | ip_address=<span style="color:#e6db74">&#39;10.0.1.10&#39;</span>, subnet_id=<span style="color:#e6db74">&#39;46e30aa0-10de-4883-a8c7-707b5a884eec&#39;</span> | ACTIVE |
| 575c3cc4-eb49-4b6f-af62-e9e5b81fa2f4 |      | fa<span style="color:#960050;background-color:#1e0010">:</span>16<span style="color:#960050;background-color:#1e0010">:</span>3e<span style="color:#960050;background-color:#1e0010">:</span>f0<span style="color:#960050;background-color:#1e0010">:</span>82<span style="color:#960050;background-color:#1e0010">:</span>5d | ip_address=<span style="color:#e6db74">&#39;10.0.0.11&#39;</span>, subnet_id=<span style="color:#e6db74">&#39;029d2907-1315-41f3-af12-c1285ceb43d2&#39;</span> | ACTIVE |
| 73876736-71bc-4bfc-b240-e2bb0f1ca505 |      | fa<span style="color:#960050;background-color:#1e0010">:</span>16<span style="color:#960050;background-color:#1e0010">:</span>3e<span style="color:#960050;background-color:#1e0010">:</span>f7<span style="color:#960050;background-color:#1e0010">:</span>be<span style="color:#960050;background-color:#1e0010">:</span>35 | ip_address=<span style="color:#e6db74">&#39;10.0.1.13&#39;</span>, subnet_id=<span style="color:#e6db74">&#39;46e30aa0-10de-4883-a8c7-707b5a884eec&#39;</span> | ACTIVE |
| a9bdd25d-cd44-44e1-96f3-fb5228872245 |      | fa<span style="color:#960050;background-color:#1e0010">:</span>16<span style="color:#960050;background-color:#1e0010">:</span>3e<span style="color:#960050;background-color:#1e0010">:</span>04<span style="color:#960050;background-color:#1e0010">:</span>0d<span style="color:#960050;background-color:#1e0010">:</span>c4 | ip_address=<span style="color:#e6db74">&#39;10.0.0.1&#39;</span>, subnet_id=<span style="color:#e6db74">&#39;029d2907-1315-41f3-af12-c1285ceb43d2&#39;</span>  | ACTIVE |
| b20a13b0-107c-44e1-91ad-b05c4c4ab6fb |      | fa<span style="color:#960050;background-color:#1e0010">:</span>16<span style="color:#960050;background-color:#1e0010">:</span>3e<span style="color:#960050;background-color:#1e0010">:</span>eb<span style="color:#960050;background-color:#1e0010">:</span>33<span style="color:#960050;background-color:#1e0010">:</span>51 | ip_address=<span style="color:#e6db74">&#39;10.0.0.2&#39;</span>, subnet_id=<span style="color:#e6db74">&#39;029d2907-1315-41f3-af12-c1285ceb43d2&#39;</span>  | ACTIVE |
| d6d4a998-73e9-4bc0-9ad1-57b481c146c5 |      | fa<span style="color:#960050;background-color:#1e0010">:</span>16<span style="color:#960050;background-color:#1e0010">:</span>3e<span style="color:#960050;background-color:#1e0010">:</span>08<span style="color:#960050;background-color:#1e0010">:</span>7a<span style="color:#960050;background-color:#1e0010">:</span>18 | ip_address=<span style="color:#e6db74">&#39;10.0.0.6&#39;</span>, subnet_id=<span style="color:#e6db74">&#39;029d2907-1315-41f3-af12-c1285ceb43d2&#39;</span>  | ACTIVE |
| d87620fe-c4e4-47e1-9381-ee47211795e3 |      | fa<span style="color:#960050;background-color:#1e0010">:</span>16<span style="color:#960050;background-color:#1e0010">:</span>3e<span style="color:#960050;background-color:#1e0010">:</span>e8<span style="color:#960050;background-color:#1e0010">:</span>a3<span style="color:#960050;background-color:#1e0010">:</span>f7 | ip_address=<span style="color:#e6db74">&#39;10.0.1.2&#39;</span>, subnet_id=<span style="color:#e6db74">&#39;46e30aa0-10de-4883-a8c7-707b5a884eec&#39;</span>  | ACTIVE |
| dac3549b-9fb3-488d-b399-ed7ee94ea724 |      | fa<span style="color:#960050;background-color:#1e0010">:</span>16<span style="color:#960050;background-color:#1e0010">:</span>3e<span style="color:#960050;background-color:#1e0010">:</span>9a<span style="color:#960050;background-color:#1e0010">:</span>c0<span style="color:#960050;background-color:#1e0010">:</span>6a | ip_address=<span style="color:#e6db74">&#39;10.0.0.5&#39;</span>, subnet_id=<span style="color:#e6db74">&#39;029d2907-1315-41f3-af12-c1285ceb43d2&#39;</span>  | ACTIVE |
| fe24ece0-28d6-450a-9ff9-bdcea107a58f |      | fa<span style="color:#960050;background-color:#1e0010">:</span>16<span style="color:#960050;background-color:#1e0010">:</span>3e<span style="color:#960050;background-color:#1e0010">:</span>25<span style="color:#960050;background-color:#1e0010">:</span>93<span style="color:#960050;background-color:#1e0010">:</span>49 | ip_address=<span style="color:#e6db74">&#39;10.0.1.14&#39;</span>, subnet_id=<span style="color:#e6db74">&#39;46e30aa0-10de-4883-a8c7-707b5a884eec&#39;</span> | ACTIVE |
+--------------------------------------+------+-------------------+--------------------------------------------------------------------------+--------+

</code></pre></div><hr>
<h3 id="deshabilitar-seguridad-de-un-puerto">Deshabilitar seguridad de un puerto</h3>
<ul>
<li>Vemos las caracteristicas de Dulcinea</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">$ openstack server show Dulcinea
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">(entorno) celiagm@debian<span style="color:#960050;background-color:#1e0010">:</span>~/venv/entorno$ openstack server show Dulcinea
+-----------------------------+-----------------------------------------------------------------------+
| Field                       | Value                                                                 |
+-----------------------------+-----------------------------------------------------------------------+
| OS-DCF<span style="color:#960050;background-color:#1e0010">:</span>diskConfig           | AUTO                                                                  |
| OS-EXT-AZ<span style="color:#960050;background-color:#1e0010">:</span>availability_zone | nova                                                                  |
| OS-EXT-STS<span style="color:#960050;background-color:#1e0010">:</span>power_state      | Running                                                               |
| OS-EXT-STS<span style="color:#960050;background-color:#1e0010">:</span>task_state       | None                                                                  |
| OS-EXT-STS<span style="color:#960050;background-color:#1e0010">:</span>vm_state         | active                                                                |
| OS-SRV-USG<span style="color:#960050;background-color:#1e0010">:</span>launched_at      | 2020-11-18T20<span style="color:#960050;background-color:#1e0010">:</span>41<span style="color:#960050;background-color:#1e0010">:</span>11.000000                                            |
| OS-SRV-USG<span style="color:#960050;background-color:#1e0010">:</span>terminated_at    | None                                                                  |
| accessIPv4                  |                                                                       |
| accessIPv6                  |                                                                       |
| addresses                   | celia.garcia=10.0.1.14; red de celia.garcia=10.0.0.11, 172.22.200.150 |
| config_drive                |                                                                       |
| created                     | 2020-11-18T20<span style="color:#960050;background-color:#1e0010">:</span>40<span style="color:#960050;background-color:#1e0010">:</span>50Z                                                  |
| flavor                      | m1.mini (12)                                                          |
| hostId                      | 829ef6cbc520f728c22007cd80702af381d72417f6ce13fbdcbf53e5              |
| id                          | be4e0478-8b93-4346-a4ab-64edfe3bfb37                                  |
| image                       | Debian Buster 10.6 (51b38ecf-99e1-46a3-a497-9e1cc9c3c2d4)             |
| key_name                    | msi                                                                   |
| name                        | Dulcinea                                                              |
| progress                    | 0                                                                     |
| project_id                  | bf33696e5463476b95e310dd1e17f5f3                                      |
| properties                  |                                                                       |
| status                      | ACTIVE                                                                |
| updated                     | 2020-11-18T20<span style="color:#960050;background-color:#1e0010">:</span>41<span style="color:#960050;background-color:#1e0010">:</span>12Z                                                  |
| user_id                     | bdfca7c57468ff40b7445535735bf867c444239818b740f4f59474b105c27dec      |
| volumes_attached            |                                                                       |
+-----------------------------+-----------------------------------------------------------------------+


</code></pre></div><ul>
<li>Le quitamos el grupo de seguridad</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">openstack server remove security group Dulcinea <span style="color:#66d9ef">default</span>
</code></pre></div><ul>
<li>
<p>Miramos la ip fija que tiene , en este caso es la 10.0.0.11</p>
</li>
<li>
<p>Listamos los puertos y obtenemos el identificador de la máquina según la ip</p>
</li>
<li>
<p>Le quitamos la seguridad</p>
</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">openstack port set --disable-port-security 575c3cc4-eb49-4b6f-af62-e9e5b81fa2f4
</code></pre></div><ul>
<li>Ahora comprobamos la conexión y vemos que es correcta:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">(entorno) celiagm@debian<span style="color:#960050;background-color:#1e0010">:</span>~/venv/entorno$ ping 172.22.200.150
PING 172.22.200.150 (172.22.200.150) 56(84) bytes of data.
64 bytes from 172.22.200.150<span style="color:#960050;background-color:#1e0010">:</span> icmp_seq=1 ttl=61 time=236 ms
64 bytes from 172.22.200.150<span style="color:#960050;background-color:#1e0010">:</span> icmp_seq=2 ttl=61 time=80.0 ms
64 bytes from 172.22.200.150<span style="color:#960050;background-color:#1e0010">:</span> icmp_seq=3 ttl=61 time=135 ms
^C
--- 172.22.200.150 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 4ms
rtt min/avg/max/mdev = 80.015/150.447/235.918/64.529 ms

</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-powershell" data-lang="powershell">(entorno) celiagm@debian<span style="color:#960050;background-color:#1e0010">:</span>~/venv/entorno$ ssh -i .ssh/id_rsa debian@172.22.200.150
Warning<span style="color:#960050;background-color:#1e0010">:</span> Identity file .ssh/id_rsa not accessible<span style="color:#960050;background-color:#1e0010">:</span> No such file or directory.
Linux dulcinea 4.19.0-11-cloud-amd64 <span style="color:#75715e">#1 SMP Debian 4.19.146-1 (2020-09-17) x86_64</span>

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms <span style="color:#66d9ef">for</span> each program are described <span style="color:#66d9ef">in</span> the
individual files <span style="color:#66d9ef">in</span> /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login<span style="color:#960050;background-color:#1e0010">:</span> Wed Nov 18 20<span style="color:#960050;background-color:#1e0010">:</span>42<span style="color:#960050;background-color:#1e0010">:</span>15 2020 from 172.23.0.70
debian@dulcinea<span style="color:#960050;background-color:#1e0010">:</span>~$ exit

</code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Compilación de un kernel linux a medida</title>
            <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/compilaci%C3%B3n-de-un-kernel-linux-a-medida/</link>
            <pubDate>Sun, 15 Nov 2020 20:07:29 +0100</pubDate>
            
            <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/compilaci%C3%B3n-de-un-kernel-linux-a-medida/</guid>
            <description>Ejercicio planteado:
Al ser linux un kérnel libre, es posible descargar el código fuente, configurarlo y comprimirlo. Además, esta tarea a priori compleja, es más sencilla de lo que parece gracias a las herramientas disponibles.
En esta tarea debes tratar de compilar un kérnel completamente funcional que reconozca todo el hardware básico de tu equipo y que sea a la vez lo más pequeño posible, es decir que incluya un vmlinuz lo más pequeño posible y que incorpore sólo los módulos imprescindibles.</description>
            <content type="html"><![CDATA[<p>Ejercicio planteado:</p>
<p>Al ser linux un kérnel libre, es posible descargar el código fuente, configurarlo y comprimirlo. Además, esta tarea a priori compleja, es más sencilla de lo que parece gracias a las herramientas disponibles.</p>
<p>En esta tarea debes tratar de compilar un kérnel completamente funcional que reconozca todo el hardware básico de tu equipo y que sea a la vez lo más pequeño posible, es decir que incluya un vmlinuz lo más pequeño posible y que incorpore sólo los módulos imprescindibles. Para ello utiliza el método explicado en clase y entrega finalmente el fichero deb con el kérnel compilado por ti.</p>
<p>El hardware básico incluye como mínimo el teclado, la interfaz de red y la consola gráfica (texto).</p>
<hr>
<h2 id="1-obtener-el-código-fuente-del-kernel">1. Obtener el código fuente del kernel</h2>
<ul>
<li>Buscamos las <strong>fuentes</strong> en la paqueteria de Debian</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">apt search linux-source
</code></pre></div><p>Salida:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">linux-source/stable 4.19+105+deb10u7 all
  Linux kernel source <span style="color:#f92672">(</span>meta-package<span style="color:#f92672">)</span>

linux-source-4.19/stable 4.19.152-1 all
  Linux kernel source <span style="color:#66d9ef">for</span> version 4.19 with Debian patches

</code></pre></div><ul>
<li>Segun la versión de kernel que tenemos instalado:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">apt policy linux-source
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">linux-source:
  Instalados: <span style="color:#f92672">(</span>ninguno<span style="color:#f92672">)</span>
  Candidato:  4.19+105+deb10u7
  Tabla de versión:
     4.19+105+deb10u7 <span style="color:#ae81ff">500</span>
        <span style="color:#ae81ff">500</span> http://security.debian.org/debian-security buster/updates/main amd64 Packages
     4.19+105+deb10u6 <span style="color:#ae81ff">500</span>
        <span style="color:#ae81ff">500</span> http://deb.debian.org/debian buster/main amd64 Packages
</code></pre></div><ul>
<li>Entonces descargamos la versión del kernel que nos pertenece. Además del paquete <strong>build-essential</strong> y <strong>qtbase5-dev</strong>, que son esenciales para su compilación.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">apt install linux-source<span style="color:#f92672">=</span>4.19+105+deb10u7 build-essential qtbase5-dev
</code></pre></div><h2 id="2-descomprimir-las-fuentes-en-un-directorio-seguro-como-usuario">2. Descomprimir las fuentes en un directorio &lsquo;seguro&rsquo; como usuario.</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">mkdir /home/celiagm/compilar_kernel
sudo mv linux-source-4.19.tar.xz /home/celiagm/compilar_kernel/
cd /home/celiagm/compilar_kernel/
tar -xf linux-source-4.19.tar.xz 
</code></pre></div><ul>
<li>Vemos el tamaño</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celiagm@debian:~/compilar_kernel$ du -hs linux-source-4.19
910M	linux-source-4.19

</code></pre></div><ul>
<li>Vemos el <strong>contenido</strong> de nuestras fuentes</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celiagm@debian:~/compilar_kernel$ cd linux-source-4.19/
celiagm@debian:~/compilar_kernel/linux-source-4.19$ ls
arch   COPYING  Documentation  fs       ipc      kernel    MAINTAINERS  net      scripts   tools
block  CREDITS  drivers        include  Kbuild   lib       Makefile     README   security  usr
certs  crypto   firmware       init     Kconfig  LICENSES  mm           samples  sound     virt
</code></pre></div><ul>
<li>Para ver la <strong>ayuda</strong> de make</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">make help
</code></pre></div><h2 id="3-copiar-la-configuración-del-kernel-que-tenemos-actualmente">3. Copiar la configuración del kernel que tenemos actualmente</h2>
<ul>
<li>Esta es la opción que nos muestra la ayuda</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"> oldconfig	  - Update current config utilising a provided .config as base
</code></pre></div><ul>
<li>Ahora copiamos el fichero de configuración que tenemos inicialmente en nuestro kernel a nuestro directorio</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">cp /boot/config-4.19.0-12-amd64 .config
</code></pre></div><ul>
<li>Ejecutamos <strong>make oldconfig</strong></li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">make oldconfig
</code></pre></div><ul>
<li>Miramos el número de elementos que se van a compilar como modulos y estaticamente.</li>
</ul>
<p>Modulos:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">grep <span style="color:#e6db74">&#34;=m&#34;</span> .config|wc -l
</code></pre></div><p>Estatica:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">grep <span style="color:#e6db74">&#34;=y&#34;</span> .config|wc -l
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celiagm@debian:~/compilar_kernel/linux-source-4.19$ grep <span style="color:#e6db74">&#34;=m&#34;</span> .config|wc -l
<span style="color:#ae81ff">3381</span>
celiagm@debian:~/compilar_kernel/linux-source-4.19$ grep <span style="color:#e6db74">&#34;=y&#34;</span> .config|wc -l
<span style="color:#ae81ff">2013</span>
</code></pre></div><h2 id="4-selección-y-reducción-de-elementos-loadmodconfig">4. Selección y reducción de elementos (loadmodconfig)</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">make localmodconfig
</code></pre></div><ul>
<li>Vemos que se ha reducido sifgnificativamente.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celiagm@debian:~/compilar_kernel/linux-source-4.19$ grep <span style="color:#e6db74">&#34;=m&#34;</span> .config|wc -l
<span style="color:#ae81ff">182</span>
celiagm@debian:~/compilar_kernel/linux-source-4.19$ grep <span style="color:#e6db74">&#34;=y&#34;</span> .config|wc -l
<span style="color:#ae81ff">1449</span>
</code></pre></div><h2 id="5-primera-compilación">5. Primera compilación</h2>
<ul>
<li>
<p>Realizamos la primera compilación (indicandole el numero de nucleos que vayamos a utilizar para agilizar el proceso)</p>
</li>
<li>
<p>Nos aseguramos que tenemos estos paquetes instalados antes de proceder con la compilación:</p>
</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">libelf-devel
libssl-dev
pkg-config
</code></pre></div><ul>
<li>Procedemos a la compilación. Con la opción <strong>-j</strong> le pasamos como parámetro el número de núcleos que queremos que utilice nuestro pc.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">make -j <span style="color:#ae81ff">4</span> bindeb-pkg
</code></pre></div><h2 id="6-tamaño-del-fichero-deb">6. Tamaño del fichero deb</h2>
<ul>
<li>Comprobar el peso del fichero deb, en el directorio padre que es donde se han generado los ficheros deb</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celiagm@debian:~/compilar_kernel$ du -hs linux-image-4.19.152_4.19.152-1_amd64.deb 
11M	linux-image-4.19.152_4.19.152-1_amd64.deb

</code></pre></div><h2 id="7-instalarlo-y-comprobar-funcionamiento">7. Instalarlo y comprobar funcionamiento</h2>
<ul>
<li>Ver los kernel instalados</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">dpkg -l | grep linux-image
</code></pre></div><ul>
<li>Desinstalar el kernel que <strong>no funciona</strong> cuando sea necesario:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">apt-get remove --purge linux-image-X.X.X-X
</code></pre></div><ul>
<li>Instalar el &lsquo;nuevo&rsquo; kernel</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">sudo dpkg -i linux-image-4.19.152_4.19.152-1_amd64.deb 
</code></pre></div><ul>
<li>Vemos que funciona correctamente.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celiagm@debian:~$ uname -r
4.19.152

</code></pre></div><h2 id="8-reducir-elementos">8. Reducir elementos.</h2>
<ul>
<li>Con el siguiente comando se nos abre una ventana y podemos elegir los módulos o elementos que queremos quitar.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">make xconfig
</code></pre></div><h4 id="1º-reducción">1º REDUCCIÓN</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">RF switch subsystem support <span style="color:#f92672">(</span>RFKILL<span style="color:#f92672">)</span>: soporte para interruptor de tarjetas wifi y bluetooh
Bluetooth subsystem support <span style="color:#f92672">(</span>BT<span style="color:#f92672">)</span>: Bluetooth
QoS and/or fair queueing <span style="color:#f92672">(</span>NET_SCHED<span style="color:#f92672">)</span>: elegir paquetes retraso primero o en cola
Network packet filtering framework <span style="color:#f92672">(</span>Netfilter<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>NETFILTER<span style="color:#f92672">)</span>: filtrado de paquetes, cortafuegos
Multimedia support <span style="color:#f92672">(</span>MEDIA_SUPPORT<span style="color:#f92672">)</span>: Soporte para multimedia
Sound card support <span style="color:#f92672">(</span>SOUND<span style="color:#f92672">)</span>: Soporte para el sonido
Linux guest support <span style="color:#f92672">(</span>HYPERVISOR_GUEST<span style="color:#f92672">)</span>: Soporte para maquinas virtuales
Macintosh device drivers <span style="color:#f92672">(</span>MACINTOSH_DRIVERS<span style="color:#f92672">)</span>
Macintosh device drivers <span style="color:#f92672">(</span>MACINTOSH_DRIVERS<span style="color:#f92672">)</span>
Hardware Monitoring support <span style="color:#f92672">(</span>HWMON<span style="color:#f92672">)</span>: Monitoreo de hardware
Hardware crypto devices <span style="color:#f92672">(</span>CRYPTO_HW<span style="color:#f92672">)</span>: Encriptación de hardware
Virtualization <span style="color:#f92672">(</span>VIRTUALIZATION<span style="color:#f92672">)</span>

</code></pre></div><p>Numero de elementos:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celiagm@debian:~/compilar_kernel/linux-source-4.19$ grep <span style="color:#e6db74">&#34;=m&#34;</span> .config|wc -l
<span style="color:#ae81ff">135</span>
celiagm@debian:~/compilar_kernel/linux-source-4.19$ grep <span style="color:#e6db74">&#34;=y&#34;</span> .config|wc -l
<span style="color:#ae81ff">1315</span>
</code></pre></div><p>Tamaño conseguido:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celiagm@debian:~/compilar_kernel$ du -hs linux-image-4.19.152_4.19.152-1_amd64.deb 
9,1M	linux-image-4.19.152_4.19.152-1_amd64.deb

</code></pre></div><h4 id="2º-reducción">2º REDUCCIÓN</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">DMA memory allocation support <span style="color:#f92672">(</span>ZONE_DMA<span style="color:#f92672">)</span>
Symmetric multi-processing support <span style="color:#f92672">(</span>SMP<span style="color:#f92672">)</span>
Memtest <span style="color:#f92672">(</span>MEMTEST<span style="color:#f92672">)</span>
Enable DMI scanning <span style="color:#f92672">(</span>DMI<span style="color:#f92672">)</span>
Platform support <span style="color:#66d9ef">for</span> Chrome hardware <span style="color:#f92672">(</span>CHROME_PLATFORMS<span style="color:#f92672">)</span>
IBM Calgary IOMMU support <span style="color:#f92672">(</span>CALGARY_IOMMU<span style="color:#f92672">)</span>
Enable support <span style="color:#66d9ef">for</span> 16-bit segments <span style="color:#f92672">(</span>X86_16BIT<span style="color:#f92672">)</span>
Allow <span style="color:#66d9ef">for</span> memory hot-add <span style="color:#f92672">(</span>MEMORY_HOTPLUG<span style="color:#f92672">)</span>
Track memory changes <span style="color:#f92672">(</span>MEM_SOFT_DIRTY<span style="color:#f92672">)</span>
x86 architectural random number generator
Supervisor Mode Access Prevention <span style="color:#f92672">(</span>X86_SMAP<span style="color:#f92672">)</span>
The IPv6 protocol <span style="color:#f92672">(</span>IPV6<span style="color:#f92672">)</span>
Battery <span style="color:#f92672">(</span>ACPI_BATTERY<span style="color:#f92672">)</span>
AMD MCE features <span style="color:#f92672">(</span>X86_MCE_AMD<span style="color:#f92672">)</span>
IP: multicast routing <span style="color:#f92672">(</span>IP_MROUTE<span style="color:#f92672">)</span>
LED Support <span style="color:#f92672">(</span>NEW_LEDS<span style="color:#f92672">)</span>
Accessibility support <span style="color:#f92672">(</span>ACCESSIBILITY<span style="color:#f92672">)</span>
Virtualization drivers <span style="color:#f92672">(</span>VIRT_DRIVERS<span style="color:#f92672">)</span>
Staging drivers <span style="color:#f92672">(</span>STAGING<span style="color:#f92672">)</span>
Network File Systems <span style="color:#f92672">(</span>NETWORK_FILESYSTEMS<span style="color:#f92672">)</span>

</code></pre></div><p>Numero de elementos:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celiagm@debian:~/compilar_kernel/linux-source-4.19$ grep <span style="color:#e6db74">&#34;=m&#34;</span> .config|wc -l
<span style="color:#ae81ff">128</span>
celiagm@debian:~/compilar_kernel/linux-source-4.19$ grep <span style="color:#e6db74">&#34;=y&#34;</span> .config|wc -l
<span style="color:#ae81ff">1197</span>

</code></pre></div><p>Tamaño conseguido:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celiagm@debian:~/compilar_kernel$ du -hs linux-image-4.19.152_4.19.152-2_amd64.deb 
8,1M	linux-image-4.19.152_4.19.152-2_amd64.deb

</code></pre></div><h4 id="3º-reducción">3º REDUCCIÓN</h4>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">Support <span style="color:#66d9ef">for</span> paging of anonymous memory <span style="color:#f92672">(</span>swap<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>SWAP<span style="color:#f92672">)</span>
Enable the block layer <span style="color:#f92672">(</span>BLOCK<span style="color:#f92672">)</span>
Namespaces support <span style="color:#f92672">(</span>NAMESPACES<span style="color:#f92672">)</span>


esenciales???
Extended Error Log support <span style="color:#f92672">(</span>ACPI_EXTLOG<span style="color:#f92672">)</span>
ACPI Platform Error Interface <span style="color:#f92672">(</span>APEI<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>ACPI_APEI<span style="color:#f92672">)</span>
/dev/agpgart <span style="color:#f92672">(</span>AGP Support<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>AGP<span style="color:#f92672">)</span>
Support <span style="color:#66d9ef">for</span> PCI Hotplug <span style="color:#f92672">(</span>HOTPLUG_PCI<span style="color:#f92672">)</span>
ACPI <span style="color:#f92672">(</span>Advanced Configuration and Power Interface<span style="color:#f92672">)</span> Support <span style="color:#f92672">(</span>ACPI<span style="color:#f92672">)</span> 
</code></pre></div><p>Numero de elementos:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celiagm@debian:~/compilar_kernel/linux-source-4.19$ grep <span style="color:#e6db74">&#34;=m&#34;</span> .config|wc -l
<span style="color:#ae81ff">108</span>
celiagm@debian:~/compilar_kernel/linux-source-4.19$ grep <span style="color:#e6db74">&#34;=y&#34;</span> .config|wc -l
<span style="color:#ae81ff">1052</span>


</code></pre></div><p>Tamaño conseguido:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celiagm@debian:~/compilar_kernel$ du -hs linux-image-4.19.152_4.19.152-4_amd64.deb 
7,0M	linux-image-4.19.152_4.19.152-4_amd64.deb


</code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Instalación de un entorno LAMP</title>
            <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/instalaci%C3%B3n-de-un-entorno-lamp/</link>
            <pubDate>Wed, 11 Nov 2020 19:21:43 +0100</pubDate>
            
            <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/instalaci%C3%B3n-de-un-entorno-lamp/</guid>
            <description>Instalación de un servidor LAMP Crea una instancia de vagrant basado en un box de debian o ubuntu  Primero creamos el fichero Vagrantfile  nano Vagrantfile  Le añadimos estas lineas para configurar nuestra máquina debian  # -*- mode: ruby -*- # vi: set ft=ruby : Vagrant.configure(&amp;#34;2&amp;#34;) do |config| config.vm.box = &amp;#34;debian/buster64&amp;#34; config.vm.hostname = &amp;#34;debian-cms&amp;#34; config.vm.network :public_network, :bridge=&amp;gt;&amp;#34;enp5s0&amp;#34; end  Levantamos la máquina  vagrant up  Cuando esté lista entramos en la máquina por ssh  vagrant ssh  Una vez dentro le añadimos los repositorios esenciales y actualizamos la máquina  sudo su nano /etc/apt/sources.</description>
            <content type="html"><![CDATA[<h2 id="instalación-de-un-servidor-lamp">Instalación de un servidor LAMP</h2>
<h2 id="crea-una-instancia-de-vagrant-basado-en-un-box-de-debian-o-ubuntu">Crea una instancia de vagrant basado en un box de debian o ubuntu</h2>
<ul>
<li>Primero creamos el fichero <em>Vagrantfile</em></li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">nano Vagrantfile
</code></pre></div><ul>
<li>Le añadimos estas lineas para configurar nuestra máquina debian</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># -*- mode: ruby -*-</span>
<span style="color:#75715e"># vi: set ft=ruby :</span>

Vagrant.configure<span style="color:#f92672">(</span><span style="color:#e6db74">&#34;2&#34;</span><span style="color:#f92672">)</span> <span style="color:#66d9ef">do</span> |config|
        config.vm.box <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;debian/buster64&#34;</span>
        config.vm.hostname <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;debian-cms&#34;</span>
        config.vm.network :public_network, :bridge<span style="color:#f92672">=</span>&gt;<span style="color:#e6db74">&#34;enp5s0&#34;</span>
end

</code></pre></div><ul>
<li>Levantamos la máquina</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">vagrant up
</code></pre></div><ul>
<li>Cuando esté lista entramos en la máquina por ssh</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">vagrant ssh
</code></pre></div><ul>
<li>Una vez dentro le añadimos los repositorios esenciales y actualizamos la máquina</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">sudo su
nano /etc/apt/sources.list
</code></pre></div><ul>
<li>Dejamos la lista de repositorios de esta forma:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">deb http://deb.debian.org/debian buster main
deb-src http://deb.debian.org/debian buster main

deb http://deb.debian.org/debian-security/ buster/updates main
deb-src http://deb.debian.org/debian-security/ buster/updates main

deb http://deb.debian.org/debian buster-updates main
deb-src http://deb.debian.org/debian buster-updates main
</code></pre></div><ul>
<li>Actualizamos</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">apt update
apt upgrade
</code></pre></div><h2 id="instala-en-esa-máquina-virtual-toda-una-pila-lamp">Instala en esa máquina virtual toda una pila LAMP</h2>
<h3 id="qué-es-lamp">¿Qué es LAMP?</h3>
<p><strong>LAMP</strong> es el acŕonimo usado para describir un sistema de infraestructura de internet que usa las siguientes herramientas:</p>
<ul>
<li><strong>Linux</strong>, como sistema operativo. En este caso usaremos la distribución Debian Buster.</li>
<li><strong>Apache</strong>, que va ser nuestro servidor web.</li>
<li><strong>MySQL/MariaDB</strong>, que va ser nuestro gestor de base de datos.</li>
<li><strong>PHP</strong>, como lenguaje de programación.</li>
</ul>
<h3 id="instalacion-de-apache-web-server">Instalacion de Apache Web Server</h3>
<ul>
<li>Instalamos <strong>apache2</strong></li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">apt install apache2 apache2-utils
</code></pre></div><ul>
<li>Vemos la <strong>version</strong> de apache</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@debian-cms:/home/vagrant# apache2 -v
Server version: Apache/2.4.38 <span style="color:#f92672">(</span>Debian<span style="color:#f92672">)</span>
Server built:   2020-08-25T20:08:29

</code></pre></div><ul>
<li>Comprobamos que apache está funcionando correctamente</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@debian-cms:/home/vagrant# systemctl status apache2
● apache2.service - The Apache HTTP Server
   Loaded: loaded <span style="color:#f92672">(</span>/lib/systemd/system/apache2.service; enabled; vendor preset: enabled<span style="color:#f92672">)</span>
   Active: active <span style="color:#f92672">(</span>running<span style="color:#f92672">)</span> since Sun 2020-11-01 13:38:34 GMT; 9min ago
     Docs: https://httpd.apache.org/docs/2.4/
 Main PID: <span style="color:#ae81ff">26137</span> <span style="color:#f92672">(</span>apache2<span style="color:#f92672">)</span>
    Tasks: <span style="color:#ae81ff">6</span> <span style="color:#f92672">(</span>limit: 544<span style="color:#f92672">)</span>
   Memory: 10.8M
   CGroup: /system.slice/apache2.service
           ├─26137 /usr/sbin/apache2 -k start
           ├─26141 /usr/sbin/apache2 -k start
           ├─26142 /usr/sbin/apache2 -k start
           ├─26143 /usr/sbin/apache2 -k start
           ├─26144 /usr/sbin/apache2 -k start
           └─26145 /usr/sbin/apache2 -k start

Nov <span style="color:#ae81ff">01</span> 13:38:34 debian-cms systemd<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>: Starting The Apache HTTP Server...
Nov <span style="color:#ae81ff">01</span> 13:38:34 debian-cms apachectl<span style="color:#f92672">[</span>26133<span style="color:#f92672">]</span>: AH00558: apache2: Could not reliably determine the server<span style="color:#960050;background-color:#1e0010">&#39;</span>s 
Nov <span style="color:#ae81ff">01</span> 13:38:34 debian-cms systemd<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>: Started The Apache HTTP Server.
lines 1-18/18 <span style="color:#f92672">(</span>END<span style="color:#f92672">)</span>

</code></pre></div><h3 id="instalación-de-mysqlmariadb">Instalación de MYSQL/MariaDB</h3>
<ul>
<li>Instalamos nuestro <strong>gestor de base de datos</strong> de la siguiente forma</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">apt install mariadb-client mariadb-server
</code></pre></div><ul>
<li>Ahora entramos como root a mysql.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@debian-cms:/home/vagrant# mysql -u root -p
Enter password: 
Welcome to the MariaDB monitor.  Commands end with ; or <span style="color:#ae81ff">\g</span>.
Your MariaDB connection id is <span style="color:#ae81ff">49</span>
Server version: 10.3.25-MariaDB-0+deb10u1 Debian <span style="color:#ae81ff">10</span>

Copyright <span style="color:#f92672">(</span>c<span style="color:#f92672">)</span> 2000, 2018, Oracle, MariaDB Corporation Ab and others.

Type <span style="color:#e6db74">&#39;help;&#39;</span> or <span style="color:#e6db74">&#39;\h&#39;</span> <span style="color:#66d9ef">for</span> help. Type <span style="color:#e6db74">&#39;\c&#39;</span> to clear the current input statement.

MariaDB <span style="color:#f92672">[(</span>none<span style="color:#f92672">)]</span>&gt; 

</code></pre></div><ul>
<li>Creamos la base de datos, la llamaremos &lsquo;cms&rsquo;.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">
MariaDB <span style="color:#f92672">[(</span>none<span style="color:#f92672">)]</span>&gt; create database cms;
Query OK, <span style="color:#ae81ff">1</span> row affected <span style="color:#f92672">(</span>0.002 sec<span style="color:#f92672">)</span>

</code></pre></div><ul>
<li>Creamos un <strong>usuario</strong> y le damos los <strong>privilegios</strong> para usar esa base de datos</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">
MariaDB <span style="color:#f92672">[(</span>none<span style="color:#f92672">)]</span>&gt; create user <span style="color:#e6db74">&#39;cgm&#39;</span>@<span style="color:#e6db74">&#39;localhost&#39;</span>;
Query OK, <span style="color:#ae81ff">0</span> rows affected <span style="color:#f92672">(</span>0.005 sec<span style="color:#f92672">)</span>

MariaDB <span style="color:#f92672">[(</span>none<span style="color:#f92672">)]</span>&gt; grant all privileges on cms.* to <span style="color:#e6db74">&#39;cgm&#39;</span>@<span style="color:#e6db74">&#39;localhost&#39;</span> identified by <span style="color:#e6db74">&#39;cgm&#39;</span>;
Query OK, <span style="color:#ae81ff">0</span> rows affected <span style="color:#f92672">(</span>0.002 sec<span style="color:#f92672">)</span>

</code></pre></div><h3 id="instalación-de-php">Instalación de PHP</h3>
<ul>
<li>Instalamos <strong>PHP</strong>, el módulo para conectarnos a la base de datos y el módulo que nos permite conectarnos al sevidor.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">apt install php php-mysql libapache2-mod-php php-gd
</code></pre></div><ul>
<li>Vemos la <strong>version</strong> de php</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@debian-cms:/home/vagrant# php -v
PHP 7.3.19-1~deb10u1 <span style="color:#f92672">(</span>cli<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>built: Jul  <span style="color:#ae81ff">5</span> <span style="color:#ae81ff">2020</span> 06:46:45<span style="color:#f92672">)</span> <span style="color:#f92672">(</span> NTS <span style="color:#f92672">)</span>
Copyright <span style="color:#f92672">(</span>c<span style="color:#f92672">)</span> 1997-2018 The PHP Group
Zend Engine v3.3.19, Copyright <span style="color:#f92672">(</span>c<span style="color:#f92672">)</span> 1998-2018 Zend Technologies
    with Zend OPcache v7.3.19-1~deb10u1, Copyright <span style="color:#f92672">(</span>c<span style="color:#f92672">)</span> 1999-2018, by Zend Technologies

</code></pre></div><p>Con esto ya tendríamos <strong>LAMP</strong> operativo en nuestro sistema.</p>
<h2 id="funcionamiento">FUNCIONAMIENTO</h2>
<ul>
<li>
<p>Creamos un index.html sencillo dentro de nuestro directorio /var/www/html</p>
</li>
<li>
<p>Vemos que funciona nuestro entorno LAMP</p>
</li>
</ul>
<p>Mariadb en funcionamiento:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@debian-cms:/home/vagrant# systemctl status mariadb
● mariadb.service - MariaDB 10.3.25 database server
   Loaded: loaded <span style="color:#f92672">(</span>/lib/systemd/system/mariadb.service; enabled; vendor preset: enabled<span style="color:#f92672">)</span>
   Active: active <span style="color:#f92672">(</span>running<span style="color:#f92672">)</span> since Fri 2020-11-06 12:03:53 GMT; 6h ago
     Docs: man:mysqld<span style="color:#f92672">(</span>8<span style="color:#f92672">)</span>
           https://mariadb.com/kb/en/library/systemd/
  Process: <span style="color:#ae81ff">414</span> ExecStartPre<span style="color:#f92672">=</span>/usr/bin/install -m <span style="color:#ae81ff">755</span> -o mysql -g root -d /var/run/mysqld <span style="color:#f92672">(</span>code<span style="color:#f92672">=</span>exited, sta
  Process: <span style="color:#ae81ff">425</span> ExecStartPre<span style="color:#f92672">=</span>/bin/sh -c systemctl unset-environment _WSREP_START_POSITION <span style="color:#f92672">(</span>code<span style="color:#f92672">=</span>exited, st
  Process: <span style="color:#ae81ff">431</span> ExecStartPre<span style="color:#f92672">=</span>/bin/sh -c <span style="color:#f92672">[</span> ! -e /usr/bin/galera_recovery <span style="color:#f92672">]</span> <span style="color:#f92672">&amp;&amp;</span> VAR<span style="color:#f92672">=</span> <span style="color:#f92672">||</span>   VAR<span style="color:#f92672">=</span><span style="color:#e6db74">`</span>cd /usr/bin/..
  Process: <span style="color:#ae81ff">515</span> ExecStartPost<span style="color:#f92672">=</span>/bin/sh -c systemctl unset-environment _WSREP_START_POSITION <span style="color:#f92672">(</span>code<span style="color:#f92672">=</span>exited, s
  Process: <span style="color:#ae81ff">517</span> ExecStartPost<span style="color:#f92672">=</span>/etc/mysql/debian-start <span style="color:#f92672">(</span>code<span style="color:#f92672">=</span>exited, status<span style="color:#f92672">=</span>0/SUCCESS<span style="color:#f92672">)</span>
 Main PID: <span style="color:#ae81ff">479</span> <span style="color:#f92672">(</span>mysqld<span style="color:#f92672">)</span>
   Status: <span style="color:#e6db74">&#34;Taking your SQL requests now...&#34;</span>
    Tasks: <span style="color:#ae81ff">30</span> <span style="color:#f92672">(</span>limit: 544<span style="color:#f92672">)</span>
   Memory: 149.6M
   CGroup: /system.slice/mariadb.service
           └─479 /usr/sbin/mysqld

Nov <span style="color:#ae81ff">06</span> 12:03:52 debian-cms systemd<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>: Starting MariaDB 10.3.25 database server...
Nov <span style="color:#ae81ff">06</span> 12:03:52 debian-cms mysqld<span style="color:#f92672">[</span>479<span style="color:#f92672">]</span>: 2020-11-06 12:03:52 <span style="color:#ae81ff">0</span> <span style="color:#f92672">[</span>Note<span style="color:#f92672">]</span> /usr/sbin/mysqld <span style="color:#f92672">(</span>mysqld 10.3.25-Mar
Nov <span style="color:#ae81ff">06</span> 12:03:52 debian-cms mysqld<span style="color:#f92672">[</span>479<span style="color:#f92672">]</span>: 2020-11-06 12:03:52 <span style="color:#ae81ff">0</span> <span style="color:#f92672">[</span>Warning<span style="color:#f92672">]</span> Could not increase number of max_
Nov <span style="color:#ae81ff">06</span> 12:03:53 debian-cms systemd<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>: Started MariaDB 10.3.25 database server.
Nov <span style="color:#ae81ff">06</span> 12:03:53 debian-cms /etc/mysql/debian-start<span style="color:#f92672">[</span>531<span style="color:#f92672">]</span>: Checking <span style="color:#66d9ef">for</span> insecure root accounts.
Nov <span style="color:#ae81ff">06</span> 12:03:53 debian-cms /etc/mysql/debian-start<span style="color:#f92672">[</span>535<span style="color:#f92672">]</span>: Triggering myisam-recover <span style="color:#66d9ef">for</span> all MyISAM tables 
lines 1-23/23 <span style="color:#f92672">(</span>END<span style="color:#f92672">)</span>

</code></pre></div><p>Apache en funcionamiento:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@debian-cms:/home/vagrant# systemctl status apache2
● apache2.service - The Apache HTTP Server
   Loaded: loaded <span style="color:#f92672">(</span>/lib/systemd/system/apache2.service; enabled; vendor preset: enabled<span style="color:#f92672">)</span>
   Active: active <span style="color:#f92672">(</span>running<span style="color:#f92672">)</span> since Fri 2020-11-06 12:03:52 GMT; 6h ago
     Docs: https://httpd.apache.org/docs/2.4/
  Process: <span style="color:#ae81ff">416</span> ExecStart<span style="color:#f92672">=</span>/usr/sbin/apachectl start <span style="color:#f92672">(</span>code<span style="color:#f92672">=</span>exited, status<span style="color:#f92672">=</span>0/SUCCESS<span style="color:#f92672">)</span>
 Main PID: <span style="color:#ae81ff">455</span> <span style="color:#f92672">(</span>apache2<span style="color:#f92672">)</span>
    Tasks: <span style="color:#ae81ff">9</span> <span style="color:#f92672">(</span>limit: 544<span style="color:#f92672">)</span>
   Memory: 34.6M
   CGroup: /system.slice/apache2.service
           ├─455 /usr/sbin/apache2 -k start
           ├─480 /usr/sbin/apache2 -k start
           ├─481 /usr/sbin/apache2 -k start
           ├─482 /usr/sbin/apache2 -k start
           ├─483 /usr/sbin/apache2 -k start
           ├─484 /usr/sbin/apache2 -k start
           ├─588 /usr/sbin/apache2 -k start
           ├─589 /usr/sbin/apache2 -k start
           └─590 /usr/sbin/apache2 -k start

Nov <span style="color:#ae81ff">06</span> 12:03:52 debian-cms systemd<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>: Starting The Apache HTTP Server...
Nov <span style="color:#ae81ff">06</span> 12:03:52 debian-cms apachectl<span style="color:#f92672">[</span>416<span style="color:#f92672">]</span>: AH00558: apache2: Could not reliably determine the server<span style="color:#960050;background-color:#1e0010">&#39;</span>s fu
Nov <span style="color:#ae81ff">06</span> 12:03:52 debian-cms systemd<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>: Started The Apache HTTP Server.
lines 1-22/22 <span style="color:#f92672">(</span>END<span style="color:#f92672">)</span>

</code></pre></div><p><img src="/images/lamp/index.png" alt="index.png"></p>
<p>php en funcionamiento:</p>
<p><img src="/images/lamp/testphp.png" alt="testphp.png"></p>
<p>-&gt; <a href="https://github.com/CeliaGMqrz/cms_install_debian/blob/main/t2_drupal.md">Instalación de drupal</a></p>
]]></content>
        </item>
        
        <item>
            <title>Servidor Nginx</title>
            <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/servidor-nginx/</link>
            <pubDate>Wed, 11 Nov 2020 17:51:13 +0100</pubDate>
            
            <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/servidor-nginx/</guid>
            <description>Servidor Web Nginxx NGINX es un servidor web open source de alta performance que ofrece el contenido estático de un sitio web de forma rápida y fácil de configurar. Ofrece recursos de equilibrio de carga, proxy inverso y streaming, además de gestionar miles de conexiones simultáneas. El resultado de sus aportes es una mayor velocidad y escalabilidad.
Además de otras tareas, los servidores web son los encargados de la entrega de aplicaciones web, respondiendo a peticiones HTTPS realizadas por usuarios, normalmente desde un navegador web.</description>
            <content type="html"><![CDATA[<h1 id="servidor-web-nginxx">Servidor Web Nginxx</h1>
<p><img src="/images/nginx/image.jpg" alt="image.jpg"></p>
<p><strong>NGINX</strong> es un servidor web open source de alta performance que ofrece el contenido estático de un sitio web de forma rápida y fácil de configurar. Ofrece recursos de equilibrio de carga, proxy inverso y streaming, además de gestionar miles de conexiones simultáneas. El resultado de sus aportes es una mayor velocidad y escalabilidad.</p>
<p>Además de otras tareas, los servidores web son los encargados de la entrega de aplicaciones web, respondiendo a peticiones HTTPS realizadas por usuarios, normalmente desde un navegador web.</p>
<p>El funcionamiento base de Nginx es similar al de otros servidores web, en el que un usuario realiza una petición a través del navegador al servidor, y este le envía la información solicitada al navegador.</p>
<p>Lo que hace diferente a Nginx es su arquitectura a la hora de manejar procesos, ya que otros servidores web como Apache crean un hilo por cada solicitud.</p>
<p>-&gt; <a href="https://rockcontent.com/es/blog/nginx/">Más informacion</a></p>
<h2 id="instalación-de-nginx">Instalación de Nginx</h2>
<ul>
<li>Para instalar Nginx vamos a usar el repositorio de Debian, así que lo primero será actualizar la información de paquetes.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">sudo su
apt update
apt upgrade
</code></pre></div><ul>
<li>Instalamos el paquete nginx</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">apt install nginx
</code></pre></div><ul>
<li>Modificar el html y visualizar el sitio</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@servidor-nginx:/var/www/html# nano index.html 
</code></pre></div><p><img src="/images/nginx/pruebahtml.png" alt="pruebahtml.png"></p>
<p><a href="https://github.com/CeliaGMqrz/servidor_Nginx/blob/main/t2_virtualhosting.md">Tarea 2: Crear virtualhosting</a></p>
<h2 id="virtual-hosting">Virtual Hosting</h2>
<p>Tarea 2 (2 punto)(Obligatorio): Configura la resolución estática en los clientes y muestra el acceso a cada una de las páginas.</p>
<hr>
<p>Queremos que nuestro servidor web ofrezca dos sitios web, teniendo en cuenta lo siguiente:</p>
<ol>
<li>
<p>Cada sitio web tendrá nombres distintos.</p>
</li>
<li>
<p>Cada sitio web compartirán la misma dirección IP y el mismo puerto (80).</p>
</li>
</ol>
<p>Los dos sitios web tendrán las siguientes características:</p>
<ul>
<li>
<p>El nombre de dominio del primero será <strong><a href="http://www.iesgn.org">www.iesgn.org</a></strong>, su directorio base será <strong>/srv/www/iesgn</strong> y contendrá una página llamada index.html, donde sólo se verá una bienvenida a la página del Instituto Gonzalo Nazareno.</p>
</li>
<li>
<p>En el segundo sitio vamos a crear una página donde se pondrán noticias por parte de los departamento, el nombre de este sitio será <strong>departamentos.iesgn.org</strong>, y su directorio base será <strong>/srv/www/departamentos</strong>. En este sitio sólo tendremos una página inicial index.html, dando la bienvenida a la página de los departamentos del instituto.</p>
</li>
</ul>
<hr>
<h2 id="crear-los-virtual-hosting">Crear los virtual hosting</h2>
<p>Crear el virtualhosting <strong>iesgn</strong> y el de <strong>departamentos</strong>. Para ello copiamos el archivo <em>default</em> que se encuentra en el fichero <em>/etc/nginx/sites-available</em> y le ponemos el nombre de cada virtualhost.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@servidor-nginx:/etc/nginx/sites-available# cp default iesgn
root@servidor-nginx:/etc/nginx/sites-available# ls
default  iesgn
root@servidor-nginx:/etc/nginx/sites-available# cp default departamentos
root@servidor-nginx:/etc/nginx/sites-available# ls
default  departamentos	iesgn

</code></pre></div><p>Deberemos de modificar los ficheros de forma que, eliminamos el &lsquo;default_server&rsquo; para que no haya conflictos con el fichero &lsquo;default&rsquo; que viene por defecto. Cambiamos la ruta de directorios indicando /srv/www/directorio. Cambiamos el &lsquo;server_name&rsquo; indicando el nombre con el que vamos a acceder a nuestro sitio web.</p>
<h2 id="iesgn"><strong>IESGN</strong></h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">nano /etc/nginx/sites-available/iesgn 
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Default server configuration</span>
<span style="color:#75715e">#</span>
server <span style="color:#f92672">{</span>
        listen 80;

        root /srv/www/iesgn;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name www.iesgn.org;

        location / <span style="color:#f92672">{</span>
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                try_files $uri $uri/ <span style="color:#f92672">=</span>404;
        <span style="color:#f92672">}</span>

<span style="color:#f92672">}</span>

</code></pre></div><h2 id="departamentos"><strong>DEPARTAMENTOS</strong></h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">nano /etc/nginx/sites-available/departamentos 
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Default server configuration</span>

server <span style="color:#f92672">{</span>
        listen 80;

        root /srv/www/departamentos;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name departamentos.iesgn.org;

        location / <span style="color:#f92672">{</span>
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                try_files $uri $uri/ <span style="color:#f92672">=</span>404;
        <span style="color:#f92672">}</span>

<span style="color:#f92672">}</span>

</code></pre></div><p>Creamos los enlaces simbólicos para la carpeta &lsquo;sites-enabled&rsquo; y así activar nuestros virtualhosting, en apache utilizabamos una herramienta pero aquí hay que hacerlo manual.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">ln -s /etc/nginx/sites-available/iesgn /etc/nginx/sites-enabled/iesgn
ln -s /etc/nginx/sites-available/departamentos /etc/nginx/sites-enabled/departamentos

</code></pre></div><p>Comprobamos que está bien configurado con <strong>nginx -t</strong></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@servidor-nginx:/etc/nginx/sites-available# nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful

</code></pre></div><p>Crear los <strong>directorios</strong> correspondientes, no es necesario dar permisos ya que con Nginx usa los permisos de superusuario &lsquo;root&rsquo;. Hemos creado la siguiente estructura tal y como se pide en el ejercicio:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@servidor-nginx:/srv# tree
.
└── www
    ├── departamentos
    │   └── index.html
    └── iesgn
        └── index.html

<span style="color:#ae81ff">3</span> directories, <span style="color:#ae81ff">2</span> files


</code></pre></div><h4 id="configurar-el-cliente-máquina-anfitriona">Configurar el cliente (máquina anfitriona)</h4>
<p>Configuramos nuestro fichero /etc/hosts añadiendo estas líneas</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">172.22.200.152 www.iesgn.org
172.22.200.152 departamentos.iesgn.org

</code></pre></div><p>Reiniciamos el servicio</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">systemctl restart nginx
</code></pre></div><p>Comprobamos que podemos acceder a ellas</p>
<p><strong><a href="http://www.iesgn.org">www.iesgn.org</a></strong></p>
<p><img src="/images/nginx/iesgn.png" alt="iesgn.png"></p>
<p><strong>departamentos.iesgn.org</strong></p>
<p><img src="/images/nginx/departamentos.png" alt="departamentos.png"></p>
<h1 id="mapeo-de-url">Mapeo de URL</h1>
<p>Cambia la configuración del sitio web <a href="http://www.iesgn.org">www.iesgn.org</a> para que se comporte de la siguiente forma:</p>
<ul>
<li><strong>Tarea 3 (1 punto)(Obligatorio): Cuando se entre a la dirección <a href="http://www.iesgn.org">www.iesgn.org</a> se redireccionará automáticamente a <a href="http://www.iesgn.org/principal,">www.iesgn.org/principal,</a> donde se mostrará el mensaje de bienvenida. En el directorio principal no se permite ver la lista de los ficheros, no se permite que se siga los enlaces simbólicos y no se permite negociación de contenido. Muestra al profesor el funcionamiento.</strong></li>
</ul>
<p>Para redireccionar <em><a href="http://www.iesgn.org">www.iesgn.org</a></em> a <em><a href="http://www.iesgn.org/principal">www.iesgn.org/principal</a></em> necesitamos editar el fichero de configuracion de <em>iesgn</em></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">
<span style="color:#75715e"># Default server configuration</span>
<span style="color:#75715e">#</span>
server <span style="color:#f92672">{</span>
        listen 80;

        root /srv/www/iesgn;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name www.iesgn.org;

        location <span style="color:#f92672">=</span> / <span style="color:#f92672">{</span>
                <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">301</span> $scheme://www.iesgn.org/principal;
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                try_files $uri $uri/ <span style="color:#f92672">=</span>404;   
        <span style="color:#f92672">}</span>

        location /principal/ <span style="color:#f92672">{</span>
                <span style="color:#75715e"># No se permite ver la lista de ficheros</span>
                autoindex off;
                <span style="color:#75715e"># No se permite el seguimiento de enlaces simbólicos</span>
                disable_symlinks off;
                <span style="color:#75715e"># No se permite la negociación de contenido</span>
                try_files $uri $uri/ index.html;
        <span style="color:#f92672">}</span>

<span style="color:#f92672">}</span>

</code></pre></div><p>No nos olvidemos de crear el directorio <em>principal</em> y mover el <em>index.html</em> a su interior.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">mkdir /srv/www/iesgn/principal
mv /srv/www/iesgn/index.html /srv/www/iesgn/principal/
</code></pre></div><hr>
<ul>
<li><strong>Tarea 4 (1 punto)(Obligatorio): Si accedes a la página <a href="http://www.iesgn.org/principal/documentos">www.iesgn.org/principal/documentos</a> se visualizarán los documentos que hay en /srv/doc. Por lo tanto se permitirá el listado de fichero y el seguimiento de enlaces simbólicos siempre que sean a ficheros o directorios cuyo dueño sea el usuario. Muestra al profesor el funcionamiento.</strong></li>
</ul>
<p>Creamos los directorios <em>/srv/doc</em> y <em>/srv/www/iesgn/principal/documentos</em></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">mkdir /srv/doc
mkdir /srv/www/iesgn/principal/documentos
</code></pre></div><p>Dentro de <em>/srv/doc</em> creamos los ficheros de prueba y le ponemos los permisos y propietarios adecuados para cada uno, de forma que uno sea de <strong>root</strong> y el otro sea del usuario <strong>debian</strong></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@servidor-nginx:/srv/doc# ls -l
total <span style="color:#ae81ff">8</span>
-rw-r--r-- <span style="color:#ae81ff">1</span> root   root   <span style="color:#ae81ff">32</span> Nov <span style="color:#ae81ff">10</span> 13:04 ficheroderoot.txt
-rw-r--r-- <span style="color:#ae81ff">1</span> debian debian <span style="color:#ae81ff">38</span> Nov <span style="color:#ae81ff">10</span> 13:07 ficherodeusuario.txt

</code></pre></div><p>Creamos el enlace simbólico del contendio que hay en doc hacia la carpeta documentos</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@servidor-nginx:~# ln -svf /srv/doc /srv/www/iesgn/principal/documentos
<span style="color:#e6db74">&#39;/srv/www/iesgn/principal/documentos/doc&#39;</span> -&gt; <span style="color:#e6db74">&#39;/srv/doc&#39;</span>

</code></pre></div><p><strong>Fichero de configuración</strong></p>
<p>Usamos &lsquo;<em>alias</em>&rsquo; para poder mostrar los documentos de la ruta <em>/srv/doc</em>, activamos el listado de ficheros, el seguimiento de enlaces simbólicos y le ponemos la opción <em>if_not_owner</em> para que deniegue el acceso a un archivo si no es el propietario</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Default server configuration</span>
<span style="color:#75715e">#</span>
server <span style="color:#f92672">{</span>
        listen 80;

        root /srv/www/iesgn;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name www.iesgn.org;

        location <span style="color:#f92672">=</span> / <span style="color:#f92672">{</span>
                <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">301</span> $scheme://www.iesgn.org/principal;
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                try_files $uri $uri/ <span style="color:#f92672">=</span>404;
        <span style="color:#f92672">}</span>

        location /principal <span style="color:#f92672">{</span>
                <span style="color:#75715e"># No se permite ver la lista de ficheros</span>
                autoindex off;
                <span style="color:#75715e"># No se permite el seguimiento de enlaces simbólicos</span>
                disable_symlinks off;
                <span style="color:#75715e"># No se permite la negociación de contenido</span>
                try_files $uri $uri/ index.html;
        <span style="color:#f92672">}</span>

        location /principal/documentos <span style="color:#f92672">{</span>

                <span style="color:#75715e">#alias</span>
                alias /srv/doc;
                <span style="color:#75715e"># Permitir listado de ficheros</span>
                autoindex on;
                <span style="color:#75715e"># Permitir el seguimiento de enlaces simbólicos solo al propietario</span>
                disable_symlinks if_not_owner;
        <span style="color:#f92672">}</span>

<span style="color:#f92672">}</span>


</code></pre></div><hr>
<p><img src="/images/nginx/documentos.png" alt="documentos.png"></p>
<hr>
<hr>
<ul>
<li><strong>Tarea 5 (1 punto): En todo el host virtual se debe redefinir los mensajes de error de objeto no encontrado y no permitido. Para el ello se crearan dos ficheros html dentro del directorio error. Entrega las modificaciones necesarias en la configuración y una comprobación del buen funcionamiento.</strong></li>
</ul>
<p>Creamos los dos ficheros html dentro de un directorio <em>error</em> en nuestro virtualhosting. Y modificamos el fichero de nuestro virtualhosting</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@servidor-nginx:/etc/nginx# tree /srv/www/iesgn/error/
/srv/www/iesgn/error/
├── 403.html
└── 404.html
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Default server configuration</span>
<span style="color:#75715e">#</span>
server <span style="color:#f92672">{</span>
        listen 80;

        <span style="color:#75715e">#set $root_path /var/www/iesgn;</span>
        <span style="color:#75715e">#root $root_path;</span>
        root /srv/www/iesgn;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name www.iesgn.org;
        error_page 404 <span style="color:#f92672">=</span> /error/404.html;
        error_page 403 <span style="color:#f92672">=</span> /error/403.html;
        location <span style="color:#f92672">=</span> / <span style="color:#f92672">{</span>
                <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">301</span> $scheme://www.iesgn.org/principal;
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                <span style="color:#75715e">#try_files $uri $uri/ =404;</span>

        <span style="color:#f92672">}</span>

        location /principal <span style="color:#f92672">{</span>
                <span style="color:#75715e"># No se permite ver la lista de ficheros</span>
                autoindex off;
                <span style="color:#75715e"># No se permite el seguimiento de enlaces simbólicos</span>
                disable_symlinks off;
                <span style="color:#75715e"># No se permite la negociación de contenido</span>
                try_files $uri $uri/ index.html;
        <span style="color:#f92672">}</span>

        location /principal/documentos <span style="color:#f92672">{</span>

                <span style="color:#75715e">#alias</span>
                alias /srv/doc;
                <span style="color:#75715e"># Permitir listado de ficheros</span>
                autoindex on;
                <span style="color:#75715e"># Permitir el seguimiento de enlaces simbólicos solo al propietario</span>
                disable_symlinks if_not_owner;

        <span style="color:#f92672">}</span>

<span style="color:#f92672">}</span>

</code></pre></div><p>Reiniciamos el servicio.</p>
<p>Provocamos un error en la url y vemos el <strong>error 404</strong>.</p>
<p><img src="/images/nginx/404.png" alt="404.png"></p>
<p>Cambiamos el &lsquo;autoindex on&rsquo; por &lsquo;<strong>autoindex off</strong>&rsquo; para denegar los permisos de visibilidad de ficheros y comprobamos que nos muestra la pagina de <strong>error 403</strong> que hemos creado.</p>
<p><img src="/images/nginx/403.png" alt="403.png"></p>
<h2 id="autentificación-autorización-y-control-de-acceso">Autentificación, Autorización y Control de Acceso</h2>
<ul>
<li><strong>Tarea 6 (1 punto)(Obligatorio): Añade al escenario otra máquina conectada por una red interna al servidor. A la URL departamentos.iesgn.org/intranet sólo se debe tener acceso desde el cliente de la red local, y no se pueda acceder desde la anfitriona por la red pública. A la URL departamentos.iesgn.org/internet, sin embargo, sólo se debe tener acceso desde la anfitriona por la red pública, y no desde la red local.</strong></li>
</ul>
<ol>
<li>Creamos la máquina (cliente) , cuya ip flotante es: <strong>172.22.200.148</strong></li>
</ol>
<p><img src="/images/nginx/instancias.png" alt="instancias.png"></p>
<ol start="3">
<li>Creamos los directorios internet e intranet con un index.html</li>
</ol>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">mkdir /srv/www/departamentos/intranet
mkdir /srv/www/departamentos/internet
cp /srv/www/iesgn/principal/index.html /srv/www/departamentos/intranet/
cp /srv/www/iesgn/principal/index.html /srv/www/departamentos/internet/
nano /srv/www/departamentos/internet/index.html 
nano /srv/www/departamentos/intranet/index.html 
</code></pre></div><ol start="2">
<li>Configuramos el servidor en nuestro virtualhost departamentos y el <em>/etc/hosts</em> en el cliente</li>
</ol>
<p>En el <strong>sevidor</strong>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">nano /etc/nginx/sites-available/departamentos 
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Default server configuration</span>

server <span style="color:#f92672">{</span>
        listen 80;

        root /srv/www/departamentos;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name departamentos.iesgn.org;

        location / <span style="color:#f92672">{</span>
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                try_files $uri $uri/ <span style="color:#f92672">=</span>404;
        <span style="color:#f92672">}</span>

        location /intranet <span style="color:#f92672">{</span>
                allow 10.0.0.6/24;
                deny all;
        <span style="color:#f92672">}</span>
<span style="color:#f92672">}</span>

</code></pre></div><p>En el <strong>cliente</strong>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">nano /etc/hosts
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Your system has configured &#39;manage_etc_hosts&#39; as True.</span>
<span style="color:#75715e"># As a result, if you wish for changes to this file to persist</span>
<span style="color:#75715e"># then you will need to either</span>
<span style="color:#75715e"># a.) make changes to the master file in /etc/cloud/templates/hosts.debian.tmpl</span>
<span style="color:#75715e"># b.) change or remove the value of &#39;manage_etc_hosts&#39; in</span>
<span style="color:#75715e">#     /etc/cloud/cloud.cfg or cloud-config from user-data</span>
<span style="color:#75715e">#</span>
127.0.1.1 cliente-nginx.novalocal cliente-nginx
127.0.0.1 localhost

10.0.0.5 departamentos.iesgn.org
<span style="color:#75715e"># The following lines are desirable for IPv6 capable hosts</span>
::1 ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts

</code></pre></div><ol start="3">
<li>Comprobamos que no podemos acceder desde el exterior (con nuestra máquina física) a la <strong>intranet</strong></li>
</ol>
<p><img src="/images/nginx/intranet_exterior.png" alt="intranet_exterior.png"></p>
<ol start="4">
<li>Comrprobamos que sí podemos acceder desde la red local (máquina cliente) a la <strong>intranet</strong>.</li>
</ol>
<p><img src="/images/nginx/intranet_interior.png" alt="intranet_interior.png"></p>
<ol start="5">
<li>Configuramos el servidor y el cliente para que desde la red local no se pueda acceder a <strong>internet</strong> pero sí desde el exterior.</li>
</ol>
<p>Desde el <strong>servidor</strong>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Default server configuration</span>

server <span style="color:#f92672">{</span>
        listen 80;

        root /srv/www/departamentos;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name departamentos.iesgn.org;

        location / <span style="color:#f92672">{</span>
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                try_files $uri $uri/ <span style="color:#f92672">=</span>404;
        <span style="color:#f92672">}</span>

        location /intranet <span style="color:#f92672">{</span>
                allow 10.0.0.6/24;
                deny all;
        <span style="color:#f92672">}</span>

        location /internet <span style="color:#f92672">{</span>
                allow 172.23.0.0/16;
                deny all;
        <span style="color:#f92672">}</span>

<span style="color:#f92672">}</span>


</code></pre></div><p>Desde el <strong>cliente</strong>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Your system has configured &#39;manage_etc_hosts&#39; as True.</span>
<span style="color:#75715e"># As a result, if you wish for changes to this file to persist</span>
<span style="color:#75715e"># then you will need to either</span>
<span style="color:#75715e"># a.) make changes to the master file in /etc/cloud/templates/hosts.debian.tmpl</span>
<span style="color:#75715e"># b.) change or remove the value of &#39;manage_etc_hosts&#39; in</span>
<span style="color:#75715e">#     /etc/cloud/cloud.cfg or cloud-config from user-data</span>
<span style="color:#75715e">#</span>
127.0.1.1 cliente-nginx.novalocal cliente-nginx
127.0.0.1 localhost

10.0.0.5 departamentos.iesgn.org
<span style="color:#75715e"># The following lines are desirable for IPv6 capable hosts</span>
::1 ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts

</code></pre></div><ol start="6">
<li>Comprobamos que podemos acceder desde el exterior con la red pública a &lsquo;internet&rsquo; pero no desde el interior por la red local.</li>
</ol>
<ul>
<li>Red pública:</li>
</ul>
<p><img src="/images/nginx/internet_publica.png" alt="internet_publica.png"></p>
<ul>
<li>Red local:</li>
</ul>
<p><img src="/images/nginx/internet_cliente.png" alt="internet_cliente.png"></p>
<ul>
<li><strong>Tarea 7 (1 punto): Autentificación básica. Limita el acceso a la URL departamentos.iesgn.org/secreto. Comprueba las cabeceras de los mensajes HTTP que se intercambian entre el servidor y el cliente.</strong></li>
</ul>
<p>Creamos el direcotorio secreto en departamentos y le añadimos un index.html</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@servidor-nginx:/home/debian# mkdir /srv/www/departamentos/secreto
root@servidor-nginx:/home/debian# cd /srv/www/departamentos/
root@servidor-nginx:/srv/www/departamentos# ls
index.html  internet  intranet	secreto
root@servidor-nginx:/srv/www/departamentos# cp index.html secreto/
root@servidor-nginx:/srv/www/departamentos# cd secreto/
root@servidor-nginx:/srv/www/departamentos/secreto# ls
index.html
root@servidor-nginx:/srv/www/departamentos/secreto# nano index.html 

</code></pre></div><p>Creamos el fichero .htpasswd con el paquete <strong>apache2-utils</strong> en el directorio /srv</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">htpasswd -cb .htpasswd servidor servidor1
</code></pre></div><p>Configuramos nuestro fichero de configuracion de &lsquo;departamentos&rsquo; y le añadimos la opción de autentificación básica. Apuntamos al fichero /srv/.htpasswd donde tenemos el usuario (servidor) y la contraseña (servidor1) que hemos configurado previamente.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Default server configuration</span>

server <span style="color:#f92672">{</span>
        listen 80;

        root /srv/www/departamentos;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name departamentos.iesgn.org;

        location / <span style="color:#f92672">{</span>
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                try_files $uri $uri/ <span style="color:#f92672">=</span>404;
        <span style="color:#f92672">}</span>

        location /intranet <span style="color:#f92672">{</span>
                allow 10.0.0.6/24;
                deny all;
        <span style="color:#f92672">}</span>

        location /internet <span style="color:#f92672">{</span>
                allow 172.23.0.0/16;
                deny all;
        <span style="color:#f92672">}</span>

        location /secreto <span style="color:#f92672">{</span>
                auth_basic <span style="color:#e6db74">&#34;Zona de control&#34;</span>;
                auth_basic_user_file /srv/.htpasswd;
        <span style="color:#f92672">}</span>
<span style="color:#f92672">}</span>

</code></pre></div><p>Ahora comprobamos que desde nuestra máquina física nos pide usuario y contraseña</p>
<p><img src="/images/nginx/secreto1.png" alt="secreto1.png"></p>
<p><img src="/images/nginx/secreto2.png" alt="secreto2.png"></p>
<p>Vemos las cabeceras http con el comando <strong>curl</strong></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celiagm@debian:~/github/servidor_Nginx$ curl -I departamentos.iesgn.org/secreto
HTTP/1.1 <span style="color:#ae81ff">401</span> Unauthorized
Server: nginx/1.14.2
Date: Wed, <span style="color:#ae81ff">11</span> Nov <span style="color:#ae81ff">2020</span> 13:24:34 GMT
Content-Type: text/html
Content-Length: <span style="color:#ae81ff">195</span>
Connection: keep-alive
WWW-Authenticate: Basic realm<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Zona de control&#34;</span>

</code></pre></div><p>Vemos las cabeceras http con el comando <strong>wget</strong></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celiagm@debian:~/github/servidor_Nginx$ wget -S departamentos.iesgn.org/secreto
--2020-11-11 14:26:09--  http://departamentos.iesgn.org/secreto
Resolviendo departamentos.iesgn.org <span style="color:#f92672">(</span>departamentos.iesgn.org<span style="color:#f92672">)</span>... 172.22.200.152
Conectando con departamentos.iesgn.org <span style="color:#f92672">(</span>departamentos.iesgn.org<span style="color:#f92672">)[</span>172.22.200.152<span style="color:#f92672">]</span>:80... conectado.
Petición HTTP enviada, esperando respuesta... 
  HTTP/1.1 <span style="color:#ae81ff">401</span> Unauthorized
  Server: nginx/1.14.2
  Date: Wed, <span style="color:#ae81ff">11</span> Nov <span style="color:#ae81ff">2020</span> 13:26:09 GMT
  Content-Type: text/html
  Content-Length: <span style="color:#ae81ff">195</span>
  Connection: keep-alive
  WWW-Authenticate: Basic realm<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Zona de control&#34;</span>

La autentificación usuario/contraseña falló.

</code></pre></div><ul>
<li><strong>Tarea 8 (2 punto): Vamos a combinar el control de acceso (tarea 6) y la autentificación (tarea 7), y vamos a configurar el virtual host para que se comporte de la siguiente manera: el acceso a la URL departamentos.iesgn.org/secreto se hace forma directa desde la intranet, desde la red pública te pide la autentificación. Muestra el resultado al profesor.</strong></li>
</ul>
<p>Para ello debemos modificar el fichero de configuración de departaentos en el servidor:</p>
<p>Añadimos estas dos líneas:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">
                satisfy any;
                allow 10.0.0.0/24;

</code></pre></div><p>De forma que con la directiva <strong>safisfy any</strong> se concede el acceso si un cliente cumple al menos una condición. Es decir se le permite el acceso al cliente y al resto de máquinas que estén conectadas a la red interna, pero se le pide autentificación al resto.</p>
<p>Quedaría tal que así:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">
<span style="color:#75715e"># Default server configuration</span>

server <span style="color:#f92672">{</span>
        listen 80;

        root /srv/www/departamentos;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name departamentos.iesgn.org;

        location / <span style="color:#f92672">{</span>
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                try_files $uri $uri/ <span style="color:#f92672">=</span>404;
        <span style="color:#f92672">}</span>

        location /intranet <span style="color:#f92672">{</span>
                allow 10.0.0.6/24;
                deny all;
        <span style="color:#f92672">}</span>

        location /internet <span style="color:#f92672">{</span>
                allow 172.23.0.0/16;
                deny all;
        <span style="color:#f92672">}</span>

        location /secreto <span style="color:#f92672">{</span>
                satisfy any;
                allow 10.0.0.0/24;
                auth_basic <span style="color:#e6db74">&#34;Zona de control&#34;</span>;
                auth_basic_user_file /srv/.htpasswd;
        <span style="color:#f92672">}</span>
<span style="color:#f92672">}</span>

</code></pre></div><p>Vemos que que desde fuera nos pide autentificación.</p>
<p>Para que se pueda probar la autentificacion el usuario es <strong>servidor</strong> y la contraseña es <strong>servidor1</strong>.</p>
<p><img src="/images/nginx/secreto3.png" alt="secreto3.png"></p>
<p><img src="/images/nginx/secreto4.png" alt="secreto4.png"></p>
<p>Aquí vemos que desde fuera nos pide la autentifición y desde la intranet nos deja entrar sin autentificación.</p>
<p><img src="/images/nginx/secreto5.png" alt="secreto5.png"></p>
]]></content>
        </item>
        
        <item>
            <title>Compilar un programa en C con Makefile</title>
            <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/compilar-un-programa-en-c-con-makefile/</link>
            <pubDate>Sat, 31 Oct 2020 18:13:42 +0100</pubDate>
            
            <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/compilar-un-programa-en-c-con-makefile/</guid>
            <description>Compilación de un programa en C utilizando un Makefile Requisitos previos  Suponemos que tenemos una máquina virtual con Debian Buster, en este caso voy a usar Vagrant con qemu-kvm para crearla. Necesitaremos tener instalado los paquetes necesarios (vagrant, qemu-kvm, virt-manager&amp;hellip;).  Usaremos el siguiente fichero Vagrantfile:
Vagrant.configure(&amp;#34;2&amp;#34;) do |config| config.vm.box = &amp;#34;debian/buster64&amp;#34; config.vm.hostname = &amp;#34;buster&amp;#34; config.vm.synced_folder &amp;#34;.&amp;#34;, &amp;#34;/vagrant&amp;#34;, disabled: true config.vm.provider :libvirt do |libvirt| libvirt.uri = &amp;#39;qemu+unix:///system&amp;#39; libvirt.host = &amp;#34;debian&amp;#34; libvirt.</description>
            <content type="html"><![CDATA[<h1 id="compilación-de-un-programa-en-c-utilizando-un-makefile">Compilación de un programa en C utilizando un Makefile</h1>
<h2 id="requisitos-previos">Requisitos previos</h2>
<ul>
<li>Suponemos que tenemos una máquina virtual con Debian Buster, en este caso voy a usar <strong>Vagrant</strong> con <strong>qemu-kvm</strong> para crearla. Necesitaremos tener instalado los paquetes necesarios (vagrant, qemu-kvm, virt-manager&hellip;).</li>
</ul>
<p>Usaremos el siguiente fichero Vagrantfile:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">Vagrant.configure<span style="color:#f92672">(</span><span style="color:#e6db74">&#34;2&#34;</span><span style="color:#f92672">)</span> <span style="color:#66d9ef">do</span> |config|
    config.vm.box <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;debian/buster64&#34;</span>
    config.vm.hostname <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;buster&#34;</span>
    config.vm.synced_folder <span style="color:#e6db74">&#34;.&#34;</span>, <span style="color:#e6db74">&#34;/vagrant&#34;</span>, disabled: true
    config.vm.provider :libvirt <span style="color:#66d9ef">do</span> |libvirt|
        libvirt.uri <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;qemu+unix:///system&#39;</span>
        libvirt.host <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;debian&#34;</span>
        libvirt.cpus <span style="color:#f92672">=</span> <span style="color:#ae81ff">1</span>
        libvirt.memory <span style="color:#f92672">=</span> <span style="color:#ae81ff">512</span>
    end
end
</code></pre></div><ul>
<li>La máquina deberá estar actualizada y con los repositorios en orden</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">nano /etc/apt/souces.list
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">deb http://deb.debian.org/debian buster main
deb-src http://deb.debian.org/debian buster main

deb http://deb.debian.org/debian-security/ buster/updates main
deb-src http://deb.debian.org/debian-security/ buster/updates main

deb http://deb.debian.org/debian buster-updates main
deb-src http://deb.debian.org/debian buster-updates main

</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">sudo apt update
sudo apt upgrade
</code></pre></div><ul>
<li>Ademas necesitaremos instalar algunos paquetes claves que nos pedirá al hacer la compilación e instalación de nuestro paquete. Uno de ellos lo vamos a descargar ya. Se trata de un paquete que contiene una lista informativa de los paquetes que se consideran esenciales para la creación de paquetes Debian, este es <strong>build-essential</strong>.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">sudo apt-get install build-essential
</code></pre></div><h2 id="programa-escrito-en-c-lynx">Programa escrito en C: Lynx</h2>
<p><strong>Lynx</strong> es un navegador web y cliente de gopher en modo texto. Este navegador es usado desde la linea de comandos, en terminales. Es muy útil para sistemas sin entorno gráfico y a la vez es fácil e intuitivo para su manejo.</p>
<p>Está escrito en C, y en las fuentes aparece un fichero Makefile para poder compilarlo.</p>
<ul>
<li>
<p><a href="https://packages.debian.org/buster/lynx">Información oficial del paquete</a></p>
</li>
<li>
<p><a href="https://sources.debian.org/src/lynx/2.8.9rel.1-3/">Contenido del paquete</a></p>
</li>
</ul>
<h3 id="descargar-las-fuentes">Descargar las fuentes</h3>
<ul>
<li>Primero vamos a ubicarnos en un sitio adecuado para descargar las fuentes. En este caso vamos a /usr/local para no interferir con otros archivos del sistema y creamos una carpeta llamada lynx.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">cd /usr/local
mkdir lynx
</code></pre></div><ul>
<li>Vamos a descargarnos el código fuente:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ sudo apt source lynx
</code></pre></div><ul>
<li>Vemos el contenido:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@buster:/usr/local/lynx# ls
lynx-2.8.9rel.1			 lynx_2.8.9rel.1-3.dsc	       lynx_2.8.9rel.1.orig.tar.bz2.asc
lynx_2.8.9rel.1-3.debian.tar.xz  lynx_2.8.9rel.1.orig.tar.bz2


</code></pre></div><ul>
<li>Descomprimimos</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ sudo tar -xjvf lynx_2.8.9rel.1.orig.tar.bz2 

</code></pre></div><ul>
<li>Vemos el contenido de nuestra carpeta descomprimida</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">vagrant@buster:/usr/local/lynx/lynx2.8.9rel.1$ ls
ABOUT-NLS       COPYING.asc      VMSPrint.com  config.guess  fixed512.com  make-msc.bat  samples
AUTHORS         INSTALLATION     WWW           config.hin    install-sh    makefile.bcb  scripts
BUILD           LYHelp.hin       aclocal.m4    config.sub    lib           makefile.in   src
CHANGES         LYMessages_en.h  bcblibs.bat   configure     lynx.cfg      makefile.msc  test
COPYHEADER      PACKAGE          build.bat     configure.in  lynx.hlp      makelynx.bat  userdefs.h
COPYHEADER.asc  PROBLEMS         build.com     descrip.mms   lynx.man      makew32.bat
COPYING         README           clean.com     docs          lynx_help     po

</code></pre></div><p>Como podemos comprobar hay un fichero llamado <em>INSTALLATION</em>, que nos va a indicar como tenemos que compilar e instalar lynx.</p>
<h3 id="autoconfigurar-debemos-utilizar-configure">Autoconfigurar. Debemos utilizar ./configure</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@buster:/usr/local/lynx/lynx2.8.9rel.1# ./configure
</code></pre></div><ul>
<li>Nos encontramos con el siguiente error:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">configure: WARNING: pkg-config is not installed

</code></pre></div><p>Nos está diciendo que necesitamos un paquete esencial para la compilación, lo instalamos:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">sudo apt-get install pkg-config
</code></pre></div><ul>
<li>Volvemos a ejecutar <strong>./configure</strong> y encontramos otro error:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">configure: error: No curses header-files found
</code></pre></div><p>Buscando este error por internet, he encontrado que se debe a que necesita una biblioteca que permite escribir interfaces basadas en texto llamada Ncurses. En concreto nos hace falta una librería que es la siguiente:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">apt-get install libncurses5-dev
</code></pre></div><ul>
<li>Volvemos a ejecutar configure y vemos que ahora se ejecuta perfectamente.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">./configure
</code></pre></div><p>Haz click aquí para ver la salida -&raquo; <a href="https://github.com/CeliaGMqrz/utilidades/blob/main/salida.md">salida</a></p>
<h3 id="compilar-makefile">COMPILAR. MAKEFILE</h3>
<ul>
<li>Según la guía de <em>INSTALLATION</em> ahora tenemos que ejecutar <strong>make</strong> para crear los objetos y archivos necesarios.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">make
</code></pre></div><ul>
<li>Estas son las últimas líneas que nos han salido:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">Copying Lynx executable into top-level directory
rm -f ../lynx
cp lynx ../
Welcome to Lynx!
make<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>: Leaving directory <span style="color:#e6db74">&#39;/usr/local/lynx/lynx2.8.9rel.1/src&#39;</span>

</code></pre></div><ul>
<li>Vamos al directorio que nos ha creado y vemos donde están todos los ficheros objetos:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">cd lynx/lynx2.8.9rel.1/src/

</code></pre></div><p><img src="/images/objetos.png" alt="objetos.png"></p>
<ul>
<li>Ahora deberemos de hacer un <em>make install</em> en el directorio adecuado:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@buster:/usr/local/lynx/lynx2.8.9rel.1# make install
/bin/sh -c <span style="color:#e6db74">&#34;P=`echo lynx|sed &#39;s,x,x,&#39;`; \
</span><span style="color:#e6db74">if test -f /usr/local/bin/</span>$P<span style="color:#e6db74"> ; then \
</span><span style="color:#e6db74">      mv -f /usr/local/bin/</span>$P<span style="color:#e6db74"> /usr/local/bin/</span>$P<span style="color:#e6db74">.old; fi&#34;</span>
/usr/bin/install -c lynx /usr/local/bin/<span style="color:#e6db74">`</span>echo lynx|sed <span style="color:#e6db74">&#39;s,x,x,&#39;</span><span style="color:#e6db74">`</span>
mkdir -p /usr/local/share/man/man1
/usr/bin/install -c -m <span style="color:#ae81ff">644</span> ./lynx.man /usr/local/share/man/man1/<span style="color:#e6db74">`</span>echo lynx|sed <span style="color:#e6db74">&#39;s,x,x,&#39;</span><span style="color:#e6db74">`</span>.1
** installing ./lynx.cfg as /usr/local/etc/lynx.cfg
** installing ./samples/lynx.lss as /usr/local/etc/lynx.lss

Use make install-help to install the help-files
Use make install-doc to install extra documentation files

</code></pre></div><p>Después de todo esto ya tendriamos instalado <strong>lynx</strong>, nos muestra cómo podemos instalar la ayuda y la documentación extra.</p>
<ul>
<li>Ahora ejecutamos <strong>lynx</strong> y vemos que funciona perfectamente.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">lynx www.google.es
</code></pre></div><p><img src="/images/googlelynx.png" alt="googlelynx.png"></p>
<h2 id="instalar-la-ayuda">Instalar la ayuda</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@buster:/usr/local/lynx/lynx2.8.9rel.1# make install-help
mkdir -p /usr/local/share/lynx_help
/bin/sh -c <span style="color:#e6db74">&#39;if cd &#34;/usr/local/share/lynx_help&#34; ; then \
</span><span style="color:#e6db74">	WD=`pwd` ; \
</span><span style="color:#e6db74">	TAIL=`basename &#34;/usr/local/share/lynx_help&#34;` ; \
</span><span style="color:#e6db74">	HEAD=`echo &#34;$WD&#34;|sed -e &#34;s,/${TAIL}$,,&#34;` ; \
</span><span style="color:#e6db74">	test &#34;x$WD&#34; != &#34;x$HEAD&#34; &amp;&amp; rm -fr * ; \
</span><span style="color:#e6db74">	fi&#39;</span>
test -d /usr/local/share/lynx_help/keystrokes <span style="color:#f92672">||</span> mkdir /usr/local/share/lynx_help/keystrokes
Translating/copying html files
/bin/sh -c <span style="color:#e6db74">&#39;sed_prog=`pwd`/help_files.sed &amp;&amp; \
</span><span style="color:#e6db74">	cd ./lynx_help &amp;&amp; \
</span><span style="color:#e6db74">	dirs=keystrokes &amp;&amp; \
</span><span style="color:#e6db74">	files=&#34;*.html */*.html&#34; &amp;&amp; \
</span><span style="color:#e6db74">	for f in $files ; do \
</span><span style="color:#e6db74">		sed -f $sed_prog $f &gt; /usr/local/share/lynx_help/$f ; \
</span><span style="color:#e6db74">	done &amp;&amp; \
</span><span style="color:#e6db74">	if test &#34;&#34; != &#34;&#34; ; then \
</span><span style="color:#e6db74">		(cd /usr/local/share/lynx_help &amp;&amp;  $files ) \
</span><span style="color:#e6db74">	fi&#39;</span>
Updating /usr/local/etc/lynx.cfg
/bin/sh -c <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span><span style="color:#e6db74">&#39;if test -f /usr/local/etc/lynx.cfg ; then \
</span><span style="color:#e6db74">	mv /usr/local/etc/lynx.cfg /usr/local/etc/lynx.tmp ; \
</span><span style="color:#e6db74">else \
</span><span style="color:#e6db74">	cp ./lynx.cfg /usr/local/etc/lynx.tmp ; \
</span><span style="color:#e6db74">fi&#39;</span>
Updating /usr/local/etc/lynx.cfg to point to installed help-files
sed	-e <span style="color:#e6db74">&#39;/^HELPFILE:http/s!^!#!&#39;</span> <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>	-e <span style="color:#e6db74">&#39;/^#HELPFILE:file/s!#!!&#39;</span> <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>	/usr/local/etc/lynx.tmp | <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>/bin/sh ./scripts/cfg_path.sh lynx_help /usr/local/share/lynx_help | <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>/bin/sh ./scripts/cfg_path.sh lynx_doc  /usr/local/share/lynx_help | <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>sed	-e <span style="color:#e6db74">&#39;/^HELPFILE:file/s!$!!&#39;</span> <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>	-e <span style="color:#e6db74">&#39;/^HELPFILE:file/s!$!!&#39;</span> <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>	&gt;/usr/local/etc/lynx.cfg
chmod <span style="color:#ae81ff">644</span> /usr/local/etc/lynx.cfg
rm -f /usr/local/etc/lynx.tmp

</code></pre></div><ul>
<li>Comprobamos que tenemos la ayuda instalada</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@buster:/usr/local/lynx/lynx2.8.9rel.1# lynx --help
USAGE: lynx <span style="color:#f92672">[</span>options<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>file<span style="color:#f92672">]</span>
Options are:
  -                 receive options and arguments from stdin
  -accept_all_cookies 
                    accept cookies without prompting <span style="color:#66d9ef">if</span> Set-Cookie handling
                    is on <span style="color:#f92672">(</span>off<span style="color:#f92672">)</span>
  -anonymous        apply restrictions <span style="color:#66d9ef">for</span> anonymous account,
                    see also -restrictions
  -assume_charset<span style="color:#f92672">=</span>MIMEname
                    charset <span style="color:#66d9ef">for</span> documents that don<span style="color:#960050;background-color:#1e0010">&#39;</span>t specify it
  -assume_local_charset<span style="color:#f92672">=</span>MIMEname
                    charset assumed <span style="color:#66d9ef">for</span> local files
  -assume_unrec_charset<span style="color:#f92672">=</span>MIMEname
                    use this instead of unrecognized charsets
  -auth<span style="color:#f92672">=</span>id:pw       authentication information <span style="color:#66d9ef">for</span> protected documents
  -base             prepend a request URL comment and BASE tag to text/html
                    outputs <span style="color:#66d9ef">for</span> -source dumps
  -bibhost<span style="color:#f92672">=</span>URL      local bibp server <span style="color:#f92672">(</span>default http://bibhost/<span style="color:#f92672">)</span>
  -book             use the bookmark page as the startfile <span style="color:#f92672">(</span>off<span style="color:#f92672">)</span>
  -buried_news      toggles scanning of news articles <span style="color:#66d9ef">for</span> buried references <span style="color:#f92672">(</span>on<span style="color:#f92672">)</span>
  -cache<span style="color:#f92672">=</span>NUMBER     NUMBER of documents cached in memory

</code></pre></div><ul>
<li>También podemos instalar la documentación</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@buster:/usr/local/lynx/lynx2.8.9rel.1# make install-doc
mkdir -p /usr/local/share/lynx_doc
Copying sample files
/bin/sh -c <span style="color:#e6db74">&#39;\
</span><span style="color:#e6db74">	( umask 022; \
</span><span style="color:#e6db74">	  cd . &amp;&amp; \
</span><span style="color:#e6db74">	  /usr/bin/tar -cf - C[HO]* PROBLEMS README docs samples test ) | \
</span><span style="color:#e6db74">	( umask 022; \
</span><span style="color:#e6db74">	  cd /usr/local/share/lynx_doc &amp;&amp; \
</span><span style="color:#e6db74">	  chmod -R u+w . &amp;&amp; /usr/bin/tar -xf - )&#39;</span>
/bin/sh -c <span style="color:#e6db74">&#39;if test &#34;&#34; != &#34;&#34; ; then \
</span><span style="color:#e6db74">	(cd /usr/local/share/lynx_doc &amp;&amp;  -f docs/CHANGES*.[0-9] docs/*.announce ) \
</span><span style="color:#e6db74">fi&#39;</span>
/bin/sh -c <span style="color:#e6db74">&#39;for name in COPYING COPYHEADER; do \
</span><span style="color:#e6db74">	cd /usr/local/share/lynx_help &amp;&amp; rm -f $name ;\
</span><span style="color:#e6db74">	r= ;\
</span><span style="color:#e6db74">	test &#34;ln -s&#34; = &#34;ln -s&#34; || r=`echo /usr/local/share/lynx_help|sed -e &#34;s%[^/]\+%..%g&#34; -e &#34;s%^.%%&#34;`; \
</span><span style="color:#e6db74">	cd /usr/local/share/lynx_help &amp;&amp; ( ln -s $r/usr/local/share/lynx_doc/$name . || cp /usr/local/share/lynx_doc/$name . );\
</span><span style="color:#e6db74">	done&#39;</span>
/bin/sh -c <span style="color:#e6db74">&#39;case `id|sed -e &#34;s/(.*//&#34;` in uid=0) chown -R root /usr/local/share/lynx_doc;; esac&#39;</span>

</code></pre></div><ul>
<li>Miramos donde está instalado el paquete</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@buster:/home/vagrant# whereis lynx
lynx: /usr/local/bin/lynx /usr/local/etc/lynx.lss /usr/local/etc/lynx.cfg /usr/local/lynx

root@buster:/home/vagrant# which lynx
/usr/local/bin/lynx
</code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Cifrado Asimétrico con GPG y OpenSSL</title>
            <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/cifrado-asim%C3%A9trico-con-gpg-y-openssl/</link>
            <pubDate>Sat, 24 Oct 2020 14:45:15 +0200</pubDate>
            
            <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/cifrado-asim%C3%A9trico-con-gpg-y-openssl/</guid>
            <description>Práctica: Cifrado asimétrico con gpg y openssl En esta práctica vamos a cifrar ficheros utilizando cifrado asimétrico utilizando el programa gpg.
Cifrado Asimétrico con GPG   Tarea 1: Generación de claves
  Tarea 2: Importar / exportar clave pública
  Tarea 3: Cifrado asimétrico con claves públicas
  Tarea 4: Exportar clave a un servidor público de claves PGP
  Cifrado asimétrico con OPENSSL  Tarea 5: Cifrado asimétrico con openssl  </description>
            <content type="html"><![CDATA[<h1 id="práctica-cifrado-asimétrico-con-gpg-y-openssl">Práctica: Cifrado asimétrico con gpg y openssl</h1>
<p>En esta práctica vamos a cifrar ficheros utilizando cifrado asimétrico utilizando el programa gpg.</p>
<h2 id="cifrado-asimétrico-con-gpg">Cifrado Asimétrico con GPG</h2>
<ul>
<li>
<p>Tarea 1: <a href="https://github.com/CeliaGMqrz/cifrado_asimetrico_gpg_openssl/blob/main/cifrado_asim%C3%A9trico_gpg_openssl.md">Generación de claves</a></p>
</li>
<li>
<p>Tarea 2: <a href="https://github.com/CeliaGMqrz/cifrado_asimetrico_gpg_openssl/blob/main/importar_exportar_clavepub.md">Importar / exportar clave pública</a></p>
</li>
<li>
<p>Tarea 3: <a href="https://github.com/CeliaGMqrz/cifrado_asimetrico_gpg_openssl/blob/main/cifrado_asimetrico_claves_publicas.md">Cifrado asimétrico con claves públicas</a></p>
</li>
<li>
<p>Tarea 4: <a href="https://github.com/CeliaGMqrz/cifrado_asimetrico_gpg_openssl/blob/main/exportar_servidor_publico.md">Exportar clave a un servidor público de claves PGP</a></p>
</li>
</ul>
<h2 id="cifrado-asimétrico-con-openssl">Cifrado asimétrico con OPENSSL</h2>
<ul>
<li>Tarea 5: <a href="https://github.com/CeliaGMqrz/cifrado_asimetrico_gpg_openssl/blob/main/asimetrico_openssl.md">Cifrado asimétrico con openssl</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Guia de Virtual Hosting Con Apache</title>
            <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/guia-de-virtual-hosting-con-apache/</link>
            <pubDate>Wed, 21 Oct 2020 21:54:22 +0200</pubDate>
            
            <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/guia-de-virtual-hosting-con-apache/</guid>
            <description>VirtualHosting con Apache Conceptos previos ¿Qué es un sitio web? Un sitio web es un conjunto de páginas web, propiamente dicho. Las páginas están relacionadas entre sí. Y a ese sitio web se accede en una dirección ip y a través de un puerto(80). Normalmente si cambiamos la ip o el puerto serviría otro sitio web.
¿Qué es Hosting Virtual? El término Hosting Virtual se refiere a hacer funcionar más de un sitio web (tales como www.</description>
            <content type="html"><![CDATA[<h1 id="virtualhosting-con-apache">VirtualHosting con Apache</h1>
<h2 id="conceptos-previos">Conceptos previos</h2>
<h3 id="qué-es-un-sitio-web">¿Qué es un sitio web?</h3>
<p>Un sitio web es un conjunto de páginas web, propiamente dicho. Las páginas están relacionadas entre sí. Y a ese sitio web se accede en una dirección ip y a través de un puerto(80). Normalmente si cambiamos la ip o el puerto serviría otro sitio web.</p>
<h3 id="qué-es-hosting-virtual">¿Qué es Hosting Virtual?</h3>
<p>El término <strong>Hosting Virtual</strong> se refiere a hacer funcionar más de un sitio web (tales como <a href="http://www.company1.com">www.company1.com</a> y <a href="http://www.company2.com">www.company2.com</a>) en una sola máquina. Los sitios web virtuales pueden estar “basados en direcciones IP”, lo que significa que cada sitio web tiene una dirección IP diferente, o “basados en nombres diferentes”, lo que significa que con una sola dirección IP están funcionando sitios web con diferentes nombres (de dominio). Apache fue uno de los primeros servidores web en soportar hosting virtual basado en direcciones IP.</p>
<p>En definitiva:</p>
<p>Usando virtualhosting, el servidor desde una misma ip y desde el mismo puerto puede servir <strong>varios sitios web</strong>. Y cada uno podemos acceder por separado. Esto lo hace de manera que las peticiones al servidor se hacen con un <strong>nombre</strong> configurado en la <strong>cabecera host del servidor</strong>. Dependiendo del nombre con el que se acceda al servidor servirá un sitio o otro.</p>
<p>En Apache hay configurado un virtualhost por defecto. Se llama <strong>default</strong>. El server name no está indicado, es decir que podemos entrar con cualquier nombre o con la misma dirección ip. El document root donde están los ficheros es <strong>/var/www/html</strong>.</p>
<h2 id="objetivo">Objetivo</h2>
<p>El objetivo de esta práctica es la puesta en marcha de dos sitios web utilizando el mismo servidor web apache. Hay que tener en cuenta lo siguiente:</p>
<ul>
<li>
<p>Cada sitio web tendrá nombres distintos.</p>
</li>
<li>
<p>Cada sitio web compartirán la misma dirección IP y el mismo puerto (80).</p>
</li>
</ul>
<p>Queremos construir en nuestro servidor web apache dos sitios web con las siguientes características:</p>
<ul>
<li>
<p>El nombre de dominio del primero será <a href="http://www.iesgn.org">www.iesgn.org</a>, su directorio base será /var/www/iesgn y contendrá una página llamada index.html, donde sólo se verá una bienvenida a la página del Instituto Gonzalo Nazareno.</p>
</li>
<li>
<p>En el segundo sitio vamos a crear una página donde se pondrán noticias por parte de los departamento, el nombre de este sitio será <a href="http://www.departamentosgn.org">www.departamentosgn.org</a>, y su directorio base será /var/www/departamentos. En este sitio sólo tendremos una página inicial index.html, dando la bienvenida a la página de los departamentos del instituto.</p>
</li>
</ul>
<h2 id="1-crear-los-ficheros-de-configuración-para-cada-sitio-web">1. Crear los ficheros de configuración para cada sitio web</h2>
<p>Los ficheros de configuración de los sitios webs se encuentran en el directorio <strong>/etc/apache2/sites-available</strong>, por defecto hay dos ficheros, uno se llama &lsquo;000-default.conf&rsquo; que es la configuración del sitio web por defecto. Necesitamos tener dos ficheros para realizar la configuración de los dos sitios virtuales, para ello vamos a copiar el fichero 000-default.conf:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@mimaquina:/etc/apache2# cd sites-available/

root@mimaquina:/etc/apache2/sites-available# ls
000-default.conf  default-ssl.conf

root@mimaquina:/etc/apache2/sites-available# cp 000-default.conf iesgn.conf

root@mimaquina:/etc/apache2/sites-available# cp 000-default.conf departamentos.conf

root@mimaquina:/etc/apache2/sites-available# ls
000-default.conf  default-ssl.conf  departamentos.conf	iesgn.conf

</code></pre></div><p>De esta manera tendremos un fichero llamado <strong>iesgn.conf</strong> para realizar la configuración del sitio web <strong><a href="http://www.iesgn.org">www.iesgn.org</a></strong>, y otro llamado <strong>departamentos.conf</strong> para el sitio web <strong><a href="http://www.departamentosgn.org">www.departamentosgn.org</a></strong>.</p>
<h2 id="2-modificar-los-ficheros-de-configuración">2. Modificar los ficheros de configuración</h2>
<p>Modificamos los ficheros iesgn.conf y departamentos.conf, para indicar el nombre que vamos ausar para acceder al host virtual (ServerName) y el directorio de trabajo (DocumentRoot).</p>
<ul>
<li>Editamos iesgn.conf:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">        ServerName www.iesgn.org

        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/iesgn
</code></pre></div><ul>
<li>Editamos departamentos.conf:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">        ServerName www.departamentosgn.org

        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/departamentosgn
</code></pre></div><h2 id="3-crear-enlace-simbólico">3. Crear enlace simbólico</h2>
<p>No es suficiente crear los ficheros de configuración de cada sitio web, es necesario crear un enlace simbólico a estos ficheros dentro del directorio <strong>/etc/apache2/sites-enabled</strong>, para ello:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@mimaquina:~# a2ensite iesgn.conf
Enabling site iesgn.
To activate the new configuration, you need to run:
  systemctl reload apache2
root@mimaquina:~# a2ensite departamentos
Enabling site departamentos.
To activate the new configuration, you need to run:
  systemctl reload apache2


root@mimaquina:/etc/apache2/sites-enabled# ls
000-default.conf  departamentos.conf  iesgn.conf

</code></pre></div><p>La creación de los enlaces simbólicos se puede hacer con la instrucción <strong>a2ensite nombre_fichero_configuracion</strong>, para deshabilitar el sitio tenemos que borrar el enlace simbólico o usar la instrucción <strong>a2dissite nombre_fichero_configuracion</strong>.</p>
<h2 id="4-crear-indexhtml-necesario">4. Crear index.html necesario</h2>
<p>Crea los directorios y los ficheros index.html necesarios en /var/www y reiniciamos el servicio.</p>
<ul>
<li>Creamos el directorio &lsquo;iesgn&rsquo; con su index.html</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@mimaquina:/var/www# mkdir iesgn
root@mimaquina:/var/www# cd iesgn/
root@mimaquina:/var/www/iesgn# nano index.html

</code></pre></div><ul>
<li>Creamos el directorio &lsquo;departamentosgn&rsquo; con su index.html</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@mimaquina:/var/www# mkdir departamentosgn
root@mimaquina:/var/www# cd departamentosgn/
root@mimaquina:/var/www/departamentosgn# ls
root@mimaquina:/var/www/departamentosgn# cp ../iesgn/index.html index.html
root@mimaquina:/var/www/departamentosgn# ls
index.html
root@mimaquina:/var/www/departamentosgn# nano index.html 
</code></pre></div><ul>
<li>Le damos los propietarios adecuados:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@mimaquina:~# chown -R www-data:www-data /var/www/departamentosgn
root@mimaquina:~# chown -R www-data:www-data /var/www/iesgn

</code></pre></div><ul>
<li>Reiniciamos el servicio</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># systemctl reload apache2</span>
</code></pre></div><h2 id="5-modificar-fichero-hosts-de-nuestra-máquina-física">5. Modificar fichero hosts de nuestra máquina física</h2>
<p>Para terminar lo único que tendremos que hacer es cambiar el fichero hosts en los clientes y poner dos nuevas líneas donde se haga la conversión entre los dos nombre de dominio y la dirección IP del servidor.</p>
<p>Le ponemos la dirección del servidor, osea la ip de nuestra máquina virtual, que, en este caso está conectada por un puente a nuestra anfitriona.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">  GNU nano 3.2                      /etc/hosts                                

127.0.0.1       localhost
127.0.1.1       mimaquina       mimaquina

192.168.100.143      www.iesgn.org
192.168.100.143      www.departamentosgn.org
<span style="color:#75715e"># The following lines are desirable for IPv6 capable hosts</span>
::1     localhost ip6-localhost ip6-loopback
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters


</code></pre></div><ul>
<li>Hacemos ping a las urls desde nuestra máquina anfitriona</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celia@debian:~/vagrant/virtualhosting$ ping www.departamentosgn.org
PING www.departamentosgn.org <span style="color:#f92672">(</span>192.168.100.143<span style="color:#f92672">)</span> 56<span style="color:#f92672">(</span>84<span style="color:#f92672">)</span> bytes of data.
<span style="color:#ae81ff">64</span> bytes from www.iesgn.org <span style="color:#f92672">(</span>192.168.100.143<span style="color:#f92672">)</span>: icmp_seq<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span> ttl<span style="color:#f92672">=</span><span style="color:#ae81ff">64</span> time<span style="color:#f92672">=</span>0.406 ms
<span style="color:#ae81ff">64</span> bytes from www.iesgn.org <span style="color:#f92672">(</span>192.168.100.143<span style="color:#f92672">)</span>: icmp_seq<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span> ttl<span style="color:#f92672">=</span><span style="color:#ae81ff">64</span> time<span style="color:#f92672">=</span>0.374 ms
^C
--- www.departamentosgn.org ping statistics ---
<span style="color:#ae81ff">2</span> packets transmitted, <span style="color:#ae81ff">2</span> received, 0% packet loss, time 15ms
rtt min/avg/max/mdev <span style="color:#f92672">=</span> 0.374/0.390/0.406/0.016 ms


celia@debian:~/vagrant/virtualhosting$ ping www.iesgn.org
PING www.iesgn.org <span style="color:#f92672">(</span>192.168.100.143<span style="color:#f92672">)</span> 56<span style="color:#f92672">(</span>84<span style="color:#f92672">)</span> bytes of data.
<span style="color:#ae81ff">64</span> bytes from www.iesgn.org <span style="color:#f92672">(</span>192.168.100.143<span style="color:#f92672">)</span>: icmp_seq<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span> ttl<span style="color:#f92672">=</span><span style="color:#ae81ff">64</span> time<span style="color:#f92672">=</span>0.389 ms
<span style="color:#ae81ff">64</span> bytes from www.iesgn.org <span style="color:#f92672">(</span>192.168.100.143<span style="color:#f92672">)</span>: icmp_seq<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span> ttl<span style="color:#f92672">=</span><span style="color:#ae81ff">64</span> time<span style="color:#f92672">=</span>0.396 ms
^C
--- www.iesgn.org ping statistics ---
<span style="color:#ae81ff">2</span> packets transmitted, <span style="color:#ae81ff">2</span> received, 0% packet loss, time 16ms
rtt min/avg/max/mdev <span style="color:#f92672">=</span> 0.389/0.392/0.396/0.020 ms
celia@debian:~/vagrant/virtualhosting$ 

</code></pre></div><ul>
<li>Lo vemos desde nuestro navegador en la máquina anfitriona:</li>
</ul>
<p><strong><a href="http://www.iesgn.org">www.iesgn.org</a></strong>
<img src="/images/cap2.jpeg" alt="cap2.jpeg"></p>
<p><strong><a href="http://www.departamentosgn.org">www.departamentosgn.org</a></strong>
<img src="/images/cap1.jpeg" alt="cap1.jpeg"></p>
<h3 id="repite-el-ejercicio-cambiando-los-directorios-de-trabajo-a-srvwww-qué-modificación-debes-hacer-en-el-fichero-etcapache2apache2conf">Repite el ejercicio cambiando los directorios de trabajo a /srv/www. ¿Qué modificación debes hacer en el fichero /etc/apache2/apache2.conf?</h3>
<p>Sería el mismo procedimiento solo que debemos editar el fichero de configuración de apache2.conf de la siguiente forma. Comentando el directorio que coge por defecto y descomentando el nuevo directorio. En él podemos copiar las carpetas que teniamos en www y hacemos el mismo procedimiento, cambiando el documenroot a los ficheros de configuracion antes de iniciarlos.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e">#&lt;Directory /var/www/&gt;</span>
<span style="color:#75715e">#        Options Indexes FollowSymLinks</span>
<span style="color:#75715e">#        AllowOverride None</span>
<span style="color:#75715e">#        Require all granted</span>
<span style="color:#75715e">#&lt;/Directory&gt;</span>

&lt;Directory /srv/&gt;
       Options Indexes FollowSymLinks
       AllowOverride None
       Require all granted
&lt;/Directory&gt;

</code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Instalación de VisualCode en Debian Buster</title>
            <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/instalaci%C3%B3n-de-visualcode-en-debian-buster/</link>
            <pubDate>Thu, 15 Oct 2020 22:22:11 +0200</pubDate>
            
            <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/instalaci%C3%B3n-de-visualcode-en-debian-buster/</guid>
            <description>Instalar Visual Code en Debian 10 Instalar dependencias.
$ sudo apt install software-properties-common apt-transport-https Descargamos la llave GPG del repositorio.
sudo wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add - Introducimos el repositorio correspondiente
$ sudo add-apt-repository &amp;#34;deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main&amp;#34; Actualizamos los paquetes
$ sudo apt update Instalamos Visual Code.
$ sudo apt-get install code </description>
            <content type="html"><![CDATA[<h3 id="instalar-visual-code-en-debian-10">Instalar Visual Code en Debian 10</h3>
<p><img src="/images/vscode.png" alt="image"></p>
<p>Instalar dependencias.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ sudo apt install software-properties-common apt-transport-https
</code></pre></div><p>Descargamos la llave GPG del repositorio.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">sudo wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -
</code></pre></div><p>Introducimos el repositorio correspondiente</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ sudo add-apt-repository <span style="color:#e6db74">&#34;deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main&#34;</span>
</code></pre></div><p>Actualizamos los paquetes</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ sudo apt update
</code></pre></div><p>Instalamos Visual Code.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ sudo apt-get install code
</code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Instalación de Virtualbox en Debian Buster</title>
            <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/instalaci%C3%B3n-de-virtualbox-en-debian-buster/</link>
            <pubDate>Thu, 15 Oct 2020 15:50:23 +0200</pubDate>
            
            <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/instalaci%C3%B3n-de-virtualbox-en-debian-buster/</guid>
            <description>Instalar Virtualbox 6.0 en Debian Buster VirtualBox no viene en el repositorio predeterminado de Debian 10, por tanto lo instalaremos desde el repositorio oficial de Oracle. Para ello vamos a agregar el repositorio en el fichero correspondiente:
$ sudo nano /etc/apt/sources.list Añadimos el repositorio y guardamos el fichero.
deb https://download.virtualbox.org/virtualbox/debian buster contrib Descargamos e importamos la clave pública de Oracle GPG en nuestro Debian 10.
$ wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add - Actualizamos los paquetes</description>
            <content type="html"><![CDATA[<h3 id="instalar-virtualbox-60-en-debian-buster">Instalar Virtualbox 6.0 en Debian Buster</h3>
<p><img src="/images/vbox.jpg" alt="image"></p>
<p>VirtualBox no viene en el repositorio predeterminado de Debian 10, por tanto lo instalaremos desde el repositorio oficial de Oracle.
Para ello vamos a agregar el repositorio en el fichero correspondiente:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ sudo nano /etc/apt/sources.list
</code></pre></div><p>Añadimos el repositorio y guardamos el fichero.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">deb https://download.virtualbox.org/virtualbox/debian buster contrib
</code></pre></div><p>Descargamos e importamos la clave pública de Oracle GPG en nuestro Debian 10.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
</code></pre></div><p>Actualizamos los paquetes</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ sudo apt update
</code></pre></div><p>Instalamos la versión que queramos de virtualbox</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ apt search virtualbox
$ sudo apt-get install virtualbox-6.0
</code></pre></div>]]></content>
        </item>
        
    </channel>
</rss>
