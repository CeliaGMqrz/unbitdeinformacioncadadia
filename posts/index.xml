<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Un bit de informacion cada día</title>
        <link>https://unbitdeinformacioncadadia.netlify.app/posts/</link>
        <description>Recent content in Posts on Un bit de informacion cada día</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Wed, 11 Nov 2020 17:51:13 +0100</lastBuildDate>
        <atom:link href="https://unbitdeinformacioncadadia.netlify.app/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Nginx</title>
            <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/nginx/</link>
            <pubDate>Wed, 11 Nov 2020 17:51:13 +0100</pubDate>
            
            <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/nginx/</guid>
            <description>Servidor Web Nginxx NGINX es un servidor web open source de alta performance que ofrece el contenido estático de un sitio web de forma rápida y fácil de configurar. Ofrece recursos de equilibrio de carga, proxy inverso y streaming, además de gestionar miles de conexiones simultáneas. El resultado de sus aportes es una mayor velocidad y escalabilidad.
Además de otras tareas, los servidores web son los encargados de la entrega de aplicaciones web, respondiendo a peticiones HTTPS realizadas por usuarios, normalmente desde un navegador web.</description>
            <content type="html"><![CDATA[<h1 id="servidor-web-nginxx">Servidor Web Nginxx</h1>
<p><img src="/images/nginx/image.jpg" alt="image.jpg"></p>
<p><strong>NGINX</strong> es un servidor web open source de alta performance que ofrece el contenido estático de un sitio web de forma rápida y fácil de configurar. Ofrece recursos de equilibrio de carga, proxy inverso y streaming, además de gestionar miles de conexiones simultáneas. El resultado de sus aportes es una mayor velocidad y escalabilidad.</p>
<p>Además de otras tareas, los servidores web son los encargados de la entrega de aplicaciones web, respondiendo a peticiones HTTPS realizadas por usuarios, normalmente desde un navegador web.</p>
<p>El funcionamiento base de Nginx es similar al de otros servidores web, en el que un usuario realiza una petición a través del navegador al servidor, y este le envía la información solicitada al navegador.</p>
<p>Lo que hace diferente a Nginx es su arquitectura a la hora de manejar procesos, ya que otros servidores web como Apache crean un hilo por cada solicitud.</p>
<p>-&gt; <a href="https://rockcontent.com/es/blog/nginx/">Más informacion</a></p>
<h2 id="instalación-de-nginx">Instalación de Nginx</h2>
<ul>
<li>Para instalar Nginx vamos a usar el repositorio de Debian, así que lo primero será actualizar la información de paquetes.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">sudo su
apt update
apt upgrade
</code></pre></div><ul>
<li>Instalamos el paquete nginx</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">apt install nginx
</code></pre></div><ul>
<li>Modificar el html y visualizar el sitio</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@servidor-nginx:/var/www/html# nano index.html 
</code></pre></div><p><img src="/images/nginx/pruebahtml.png" alt="pruebahtml.png"></p>
<p><a href="https://github.com/CeliaGMqrz/servidor_Nginx/blob/main/t2_virtualhosting.md">Tarea 2: Crear virtualhosting</a></p>
<h2 id="virtual-hosting">Virtual Hosting</h2>
<p>Tarea 2 (2 punto)(Obligatorio): Configura la resolución estática en los clientes y muestra el acceso a cada una de las páginas.</p>
<hr>
<p>Queremos que nuestro servidor web ofrezca dos sitios web, teniendo en cuenta lo siguiente:</p>
<ol>
<li>
<p>Cada sitio web tendrá nombres distintos.</p>
</li>
<li>
<p>Cada sitio web compartirán la misma dirección IP y el mismo puerto (80).</p>
</li>
</ol>
<p>Los dos sitios web tendrán las siguientes características:</p>
<ul>
<li>
<p>El nombre de dominio del primero será <strong><a href="http://www.iesgn.org">www.iesgn.org</a></strong>, su directorio base será <strong>/srv/www/iesgn</strong> y contendrá una página llamada index.html, donde sólo se verá una bienvenida a la página del Instituto Gonzalo Nazareno.</p>
</li>
<li>
<p>En el segundo sitio vamos a crear una página donde se pondrán noticias por parte de los departamento, el nombre de este sitio será <strong>departamentos.iesgn.org</strong>, y su directorio base será <strong>/srv/www/departamentos</strong>. En este sitio sólo tendremos una página inicial index.html, dando la bienvenida a la página de los departamentos del instituto.</p>
</li>
</ul>
<hr>
<h2 id="crear-los-virtual-hosting">Crear los virtual hosting</h2>
<p>Crear el virtualhosting <strong>iesgn</strong> y el de <strong>departamentos</strong>. Para ello copiamos el archivo <em>default</em> que se encuentra en el fichero <em>/etc/nginx/sites-available</em> y le ponemos el nombre de cada virtualhost.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@servidor-nginx:/etc/nginx/sites-available# cp default iesgn
root@servidor-nginx:/etc/nginx/sites-available# ls
default  iesgn
root@servidor-nginx:/etc/nginx/sites-available# cp default departamentos
root@servidor-nginx:/etc/nginx/sites-available# ls
default  departamentos	iesgn

</code></pre></div><p>Deberemos de modificar los ficheros de forma que, eliminamos el &lsquo;default_server&rsquo; para que no haya conflictos con el fichero &lsquo;default&rsquo; que viene por defecto. Cambiamos la ruta de directorios indicando /srv/www/directorio. Cambiamos el &lsquo;server_name&rsquo; indicando el nombre con el que vamos a acceder a nuestro sitio web.</p>
<h2 id="iesgn"><strong>IESGN</strong></h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">nano /etc/nginx/sites-available/iesgn 
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Default server configuration</span>
<span style="color:#75715e">#</span>
server <span style="color:#f92672">{</span>
        listen 80;

        root /srv/www/iesgn;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name www.iesgn.org;

        location / <span style="color:#f92672">{</span>
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                try_files $uri $uri/ <span style="color:#f92672">=</span>404;
        <span style="color:#f92672">}</span>

<span style="color:#f92672">}</span>

</code></pre></div><h2 id="departamentos"><strong>DEPARTAMENTOS</strong></h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">nano /etc/nginx/sites-available/departamentos 
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Default server configuration</span>

server <span style="color:#f92672">{</span>
        listen 80;

        root /srv/www/departamentos;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name departamentos.iesgn.org;

        location / <span style="color:#f92672">{</span>
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                try_files $uri $uri/ <span style="color:#f92672">=</span>404;
        <span style="color:#f92672">}</span>

<span style="color:#f92672">}</span>

</code></pre></div><p>Creamos los enlaces simbólicos para la carpeta &lsquo;sites-enabled&rsquo; y así activar nuestros virtualhosting, en apache utilizabamos una herramienta pero aquí hay que hacerlo manual.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">ln -s /etc/nginx/sites-available/iesgn /etc/nginx/sites-enabled/iesgn
ln -s /etc/nginx/sites-available/departamentos /etc/nginx/sites-enabled/departamentos

</code></pre></div><p>Comprobamos que está bien configurado con <strong>nginx -t</strong></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@servidor-nginx:/etc/nginx/sites-available# nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful

</code></pre></div><p>Crear los <strong>directorios</strong> correspondientes, no es necesario dar permisos ya que con Nginx usa los permisos de superusuario &lsquo;root&rsquo;. Hemos creado la siguiente estructura tal y como se pide en el ejercicio:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@servidor-nginx:/srv# tree
.
└── www
    ├── departamentos
    │   └── index.html
    └── iesgn
        └── index.html

<span style="color:#ae81ff">3</span> directories, <span style="color:#ae81ff">2</span> files


</code></pre></div><h4 id="configurar-el-cliente-máquina-anfitriona">Configurar el cliente (máquina anfitriona)</h4>
<p>Configuramos nuestro fichero /etc/hosts añadiendo estas líneas</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">172.22.200.152 www.iesgn.org
172.22.200.152 departamentos.iesgn.org

</code></pre></div><p>Reiniciamos el servicio</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">systemctl restart nginx
</code></pre></div><p>Comprobamos que podemos acceder a ellas</p>
<p><strong><a href="http://www.iesgn.org">www.iesgn.org</a></strong></p>
<p><img src="/images/nginx/iesgn.png" alt="iesgn.png"></p>
<p><strong>departamentos.iesgn.org</strong></p>
<p><img src="/images/nginx/departamentos.png" alt="departamentos.png"></p>
<h1 id="mapeo-de-url">Mapeo de URL</h1>
<p>Cambia la configuración del sitio web <a href="http://www.iesgn.org">www.iesgn.org</a> para que se comporte de la siguiente forma:</p>
<ul>
<li><strong>Tarea 3 (1 punto)(Obligatorio): Cuando se entre a la dirección <a href="http://www.iesgn.org">www.iesgn.org</a> se redireccionará automáticamente a <a href="http://www.iesgn.org/principal,">www.iesgn.org/principal,</a> donde se mostrará el mensaje de bienvenida. En el directorio principal no se permite ver la lista de los ficheros, no se permite que se siga los enlaces simbólicos y no se permite negociación de contenido. Muestra al profesor el funcionamiento.</strong></li>
</ul>
<p>Para redireccionar <em><a href="http://www.iesgn.org">www.iesgn.org</a></em> a <em><a href="http://www.iesgn.org/principal">www.iesgn.org/principal</a></em> necesitamos editar el fichero de configuracion de <em>iesgn</em></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">
<span style="color:#75715e"># Default server configuration</span>
<span style="color:#75715e">#</span>
server <span style="color:#f92672">{</span>
        listen 80;

        root /srv/www/iesgn;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name www.iesgn.org;

        location <span style="color:#f92672">=</span> / <span style="color:#f92672">{</span>
                <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">301</span> $scheme://www.iesgn.org/principal;
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                try_files $uri $uri/ <span style="color:#f92672">=</span>404;   
        <span style="color:#f92672">}</span>

        location /principal/ <span style="color:#f92672">{</span>
                <span style="color:#75715e"># No se permite ver la lista de ficheros</span>
                autoindex off;
                <span style="color:#75715e"># No se permite el seguimiento de enlaces simbólicos</span>
                disable_symlinks off;
                <span style="color:#75715e"># No se permite la negociación de contenido</span>
                try_files $uri $uri/ index.html;
        <span style="color:#f92672">}</span>

<span style="color:#f92672">}</span>

</code></pre></div><p>No nos olvidemos de crear el directorio <em>principal</em> y mover el <em>index.html</em> a su interior.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">mkdir /srv/www/iesgn/principal
mv /srv/www/iesgn/index.html /srv/www/iesgn/principal/
</code></pre></div><hr>
<ul>
<li><strong>Tarea 4 (1 punto)(Obligatorio): Si accedes a la página <a href="http://www.iesgn.org/principal/documentos">www.iesgn.org/principal/documentos</a> se visualizarán los documentos que hay en /srv/doc. Por lo tanto se permitirá el listado de fichero y el seguimiento de enlaces simbólicos siempre que sean a ficheros o directorios cuyo dueño sea el usuario. Muestra al profesor el funcionamiento.</strong></li>
</ul>
<p>Creamos los directorios <em>/srv/doc</em> y <em>/srv/www/iesgn/principal/documentos</em></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">mkdir /srv/doc
mkdir /srv/www/iesgn/principal/documentos
</code></pre></div><p>Dentro de <em>/srv/doc</em> creamos los ficheros de prueba y le ponemos los permisos y propietarios adecuados para cada uno, de forma que uno sea de <strong>root</strong> y el otro sea del usuario <strong>debian</strong></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@servidor-nginx:/srv/doc# ls -l
total <span style="color:#ae81ff">8</span>
-rw-r--r-- <span style="color:#ae81ff">1</span> root   root   <span style="color:#ae81ff">32</span> Nov <span style="color:#ae81ff">10</span> 13:04 ficheroderoot.txt
-rw-r--r-- <span style="color:#ae81ff">1</span> debian debian <span style="color:#ae81ff">38</span> Nov <span style="color:#ae81ff">10</span> 13:07 ficherodeusuario.txt

</code></pre></div><p>Creamos el enlace simbólico del contendio que hay en doc hacia la carpeta documentos</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@servidor-nginx:~# ln -svf /srv/doc /srv/www/iesgn/principal/documentos
<span style="color:#e6db74">&#39;/srv/www/iesgn/principal/documentos/doc&#39;</span> -&gt; <span style="color:#e6db74">&#39;/srv/doc&#39;</span>

</code></pre></div><p><strong>Fichero de configuración</strong></p>
<p>Usamos &lsquo;<em>alias</em>&rsquo; para poder mostrar los documentos de la ruta <em>/srv/doc</em>, activamos el listado de ficheros, el seguimiento de enlaces simbólicos y le ponemos la opción <em>if_not_owner</em> para que deniegue el acceso a un archivo si no es el propietario</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Default server configuration</span>
<span style="color:#75715e">#</span>
server <span style="color:#f92672">{</span>
        listen 80;

        root /srv/www/iesgn;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name www.iesgn.org;

        location <span style="color:#f92672">=</span> / <span style="color:#f92672">{</span>
                <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">301</span> $scheme://www.iesgn.org/principal;
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                try_files $uri $uri/ <span style="color:#f92672">=</span>404;
        <span style="color:#f92672">}</span>

        location /principal <span style="color:#f92672">{</span>
                <span style="color:#75715e"># No se permite ver la lista de ficheros</span>
                autoindex off;
                <span style="color:#75715e"># No se permite el seguimiento de enlaces simbólicos</span>
                disable_symlinks off;
                <span style="color:#75715e"># No se permite la negociación de contenido</span>
                try_files $uri $uri/ index.html;
        <span style="color:#f92672">}</span>

        location /principal/documentos <span style="color:#f92672">{</span>

                <span style="color:#75715e">#alias</span>
                alias /srv/doc;
                <span style="color:#75715e"># Permitir listado de ficheros</span>
                autoindex on;
                <span style="color:#75715e"># Permitir el seguimiento de enlaces simbólicos solo al propietario</span>
                disable_symlinks if_not_owner;
        <span style="color:#f92672">}</span>

<span style="color:#f92672">}</span>


</code></pre></div><hr>
<p><img src="/images/nginx/documentos.png" alt="documentos.png"></p>
<hr>
<hr>
<ul>
<li><strong>Tarea 5 (1 punto): En todo el host virtual se debe redefinir los mensajes de error de objeto no encontrado y no permitido. Para el ello se crearan dos ficheros html dentro del directorio error. Entrega las modificaciones necesarias en la configuración y una comprobación del buen funcionamiento.</strong></li>
</ul>
<p>Creamos los dos ficheros html dentro de un directorio <em>error</em> en nuestro virtualhosting. Y modificamos el fichero de nuestro virtualhosting</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@servidor-nginx:/etc/nginx# tree /srv/www/iesgn/error/
/srv/www/iesgn/error/
├── 403.html
└── 404.html
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Default server configuration</span>
<span style="color:#75715e">#</span>
server <span style="color:#f92672">{</span>
        listen 80;

        <span style="color:#75715e">#set $root_path /var/www/iesgn;</span>
        <span style="color:#75715e">#root $root_path;</span>
        root /srv/www/iesgn;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name www.iesgn.org;
        error_page 404 <span style="color:#f92672">=</span> /error/404.html;
        error_page 403 <span style="color:#f92672">=</span> /error/403.html;
        location <span style="color:#f92672">=</span> / <span style="color:#f92672">{</span>
                <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">301</span> $scheme://www.iesgn.org/principal;
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                <span style="color:#75715e">#try_files $uri $uri/ =404;</span>

        <span style="color:#f92672">}</span>

        location /principal <span style="color:#f92672">{</span>
                <span style="color:#75715e"># No se permite ver la lista de ficheros</span>
                autoindex off;
                <span style="color:#75715e"># No se permite el seguimiento de enlaces simbólicos</span>
                disable_symlinks off;
                <span style="color:#75715e"># No se permite la negociación de contenido</span>
                try_files $uri $uri/ index.html;
        <span style="color:#f92672">}</span>

        location /principal/documentos <span style="color:#f92672">{</span>

                <span style="color:#75715e">#alias</span>
                alias /srv/doc;
                <span style="color:#75715e"># Permitir listado de ficheros</span>
                autoindex on;
                <span style="color:#75715e"># Permitir el seguimiento de enlaces simbólicos solo al propietario</span>
                disable_symlinks if_not_owner;

        <span style="color:#f92672">}</span>

<span style="color:#f92672">}</span>

</code></pre></div><p>Reiniciamos el servicio.</p>
<p>Provocamos un error en la url y vemos el <strong>error 404</strong>.</p>
<p><img src="/images/nginx/404.png" alt="404.png"></p>
<p>Cambiamos el &lsquo;autoindex on&rsquo; por &lsquo;<strong>autoindex off</strong>&rsquo; para denegar los permisos de visibilidad de ficheros y comprobamos que nos muestra la pagina de <strong>error 403</strong> que hemos creado.</p>
<p><img src="/images/nginx/403.png" alt="403.png"></p>
<h2 id="autentificación-autorización-y-control-de-acceso">Autentificación, Autorización y Control de Acceso</h2>
<ul>
<li><strong>Tarea 6 (1 punto)(Obligatorio): Añade al escenario otra máquina conectada por una red interna al servidor. A la URL departamentos.iesgn.org/intranet sólo se debe tener acceso desde el cliente de la red local, y no se pueda acceder desde la anfitriona por la red pública. A la URL departamentos.iesgn.org/internet, sin embargo, sólo se debe tener acceso desde la anfitriona por la red pública, y no desde la red local.</strong></li>
</ul>
<ol>
<li>Creamos la máquina (cliente) , cuya ip flotante es: <strong>172.22.200.148</strong></li>
</ol>
<p><img src="/images/nginx/instancias.png" alt="instancias.png"></p>
<ol start="3">
<li>Creamos los directorios internet e intranet con un index.html</li>
</ol>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">mkdir /srv/www/departamentos/intranet
mkdir /srv/www/departamentos/internet
cp /srv/www/iesgn/principal/index.html /srv/www/departamentos/intranet/
cp /srv/www/iesgn/principal/index.html /srv/www/departamentos/internet/
nano /srv/www/departamentos/internet/index.html 
nano /srv/www/departamentos/intranet/index.html 
</code></pre></div><ol start="2">
<li>Configuramos el servidor en nuestro virtualhost departamentos y el <em>/etc/hosts</em> en el cliente</li>
</ol>
<p>En el <strong>sevidor</strong>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">nano /etc/nginx/sites-available/departamentos 
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Default server configuration</span>

server <span style="color:#f92672">{</span>
        listen 80;

        root /srv/www/departamentos;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name departamentos.iesgn.org;

        location / <span style="color:#f92672">{</span>
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                try_files $uri $uri/ <span style="color:#f92672">=</span>404;
        <span style="color:#f92672">}</span>

        location /intranet <span style="color:#f92672">{</span>
                allow 10.0.0.6/24;
                deny all;
        <span style="color:#f92672">}</span>
<span style="color:#f92672">}</span>

</code></pre></div><p>En el <strong>cliente</strong>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">nano /etc/hosts
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Your system has configured &#39;manage_etc_hosts&#39; as True.</span>
<span style="color:#75715e"># As a result, if you wish for changes to this file to persist</span>
<span style="color:#75715e"># then you will need to either</span>
<span style="color:#75715e"># a.) make changes to the master file in /etc/cloud/templates/hosts.debian.tmpl</span>
<span style="color:#75715e"># b.) change or remove the value of &#39;manage_etc_hosts&#39; in</span>
<span style="color:#75715e">#     /etc/cloud/cloud.cfg or cloud-config from user-data</span>
<span style="color:#75715e">#</span>
127.0.1.1 cliente-nginx.novalocal cliente-nginx
127.0.0.1 localhost

10.0.0.5 departamentos.iesgn.org
<span style="color:#75715e"># The following lines are desirable for IPv6 capable hosts</span>
::1 ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts

</code></pre></div><ol start="3">
<li>Comprobamos que no podemos acceder desde el exterior (con nuestra máquina física) a la <strong>intranet</strong></li>
</ol>
<p><img src="/images/nginx/intranet_exterior.png" alt="intranet_exterior.png"></p>
<ol start="4">
<li>Comrprobamos que sí podemos acceder desde la red local (máquina cliente) a la <strong>intranet</strong>.</li>
</ol>
<p><img src="/images/nginx/intranet_interior.png" alt="intranet_interior.png"></p>
<ol start="5">
<li>Configuramos el servidor y el cliente para que desde la red local no se pueda acceder a <strong>internet</strong> pero sí desde el exterior.</li>
</ol>
<p>Desde el <strong>servidor</strong>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Default server configuration</span>

server <span style="color:#f92672">{</span>
        listen 80;

        root /srv/www/departamentos;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name departamentos.iesgn.org;

        location / <span style="color:#f92672">{</span>
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                try_files $uri $uri/ <span style="color:#f92672">=</span>404;
        <span style="color:#f92672">}</span>

        location /intranet <span style="color:#f92672">{</span>
                allow 10.0.0.6/24;
                deny all;
        <span style="color:#f92672">}</span>

        location /internet <span style="color:#f92672">{</span>
                allow 172.23.0.0/16;
                deny all;
        <span style="color:#f92672">}</span>

<span style="color:#f92672">}</span>


</code></pre></div><p>Desde el <strong>cliente</strong>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Your system has configured &#39;manage_etc_hosts&#39; as True.</span>
<span style="color:#75715e"># As a result, if you wish for changes to this file to persist</span>
<span style="color:#75715e"># then you will need to either</span>
<span style="color:#75715e"># a.) make changes to the master file in /etc/cloud/templates/hosts.debian.tmpl</span>
<span style="color:#75715e"># b.) change or remove the value of &#39;manage_etc_hosts&#39; in</span>
<span style="color:#75715e">#     /etc/cloud/cloud.cfg or cloud-config from user-data</span>
<span style="color:#75715e">#</span>
127.0.1.1 cliente-nginx.novalocal cliente-nginx
127.0.0.1 localhost

10.0.0.5 departamentos.iesgn.org
<span style="color:#75715e"># The following lines are desirable for IPv6 capable hosts</span>
::1 ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts

</code></pre></div><ol start="6">
<li>Comprobamos que podemos acceder desde el exterior con la red pública a &lsquo;internet&rsquo; pero no desde el interior por la red local.</li>
</ol>
<ul>
<li>Red pública:</li>
</ul>
<p><img src="/images/nginx/internet_publica.png" alt="internet_publica.png"></p>
<ul>
<li>Red local:</li>
</ul>
<p><img src="/images/nginx/internet_cliente.png" alt="internet_cliente.png"></p>
<ul>
<li><strong>Tarea 7 (1 punto): Autentificación básica. Limita el acceso a la URL departamentos.iesgn.org/secreto. Comprueba las cabeceras de los mensajes HTTP que se intercambian entre el servidor y el cliente.</strong></li>
</ul>
<p>Creamos el direcotorio secreto en departamentos y le añadimos un index.html</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@servidor-nginx:/home/debian# mkdir /srv/www/departamentos/secreto
root@servidor-nginx:/home/debian# cd /srv/www/departamentos/
root@servidor-nginx:/srv/www/departamentos# ls
index.html  internet  intranet	secreto
root@servidor-nginx:/srv/www/departamentos# cp index.html secreto/
root@servidor-nginx:/srv/www/departamentos# cd secreto/
root@servidor-nginx:/srv/www/departamentos/secreto# ls
index.html
root@servidor-nginx:/srv/www/departamentos/secreto# nano index.html 

</code></pre></div><p>Creamos el fichero .htpasswd con el paquete <strong>apache2-utils</strong> en el directorio /srv</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">htpasswd -cb .htpasswd servidor servidor1
</code></pre></div><p>Configuramos nuestro fichero de configuracion de &lsquo;departamentos&rsquo; y le añadimos la opción de autentificación básica. Apuntamos al fichero /srv/.htpasswd donde tenemos el usuario (servidor) y la contraseña (servidor1) que hemos configurado previamente.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Default server configuration</span>

server <span style="color:#f92672">{</span>
        listen 80;

        root /srv/www/departamentos;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name departamentos.iesgn.org;

        location / <span style="color:#f92672">{</span>
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                try_files $uri $uri/ <span style="color:#f92672">=</span>404;
        <span style="color:#f92672">}</span>

        location /intranet <span style="color:#f92672">{</span>
                allow 10.0.0.6/24;
                deny all;
        <span style="color:#f92672">}</span>

        location /internet <span style="color:#f92672">{</span>
                allow 172.23.0.0/16;
                deny all;
        <span style="color:#f92672">}</span>

        location /secreto <span style="color:#f92672">{</span>
                auth_basic <span style="color:#e6db74">&#34;Zona de control&#34;</span>;
                auth_basic_user_file /srv/.htpasswd;
        <span style="color:#f92672">}</span>
<span style="color:#f92672">}</span>

</code></pre></div><p>Ahora comprobamos que desde nuestra máquina física nos pide usuario y contraseña</p>
<p><img src="/images/nginx/secreto1.png" alt="secreto1.png"></p>
<p><img src="/images/nginx/secreto2.png" alt="secreto2.png"></p>
<p>Vemos las cabeceras http con el comando <strong>curl</strong></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celiagm@debian:~/github/servidor_Nginx$ curl -I departamentos.iesgn.org/secreto
HTTP/1.1 <span style="color:#ae81ff">401</span> Unauthorized
Server: nginx/1.14.2
Date: Wed, <span style="color:#ae81ff">11</span> Nov <span style="color:#ae81ff">2020</span> 13:24:34 GMT
Content-Type: text/html
Content-Length: <span style="color:#ae81ff">195</span>
Connection: keep-alive
WWW-Authenticate: Basic realm<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Zona de control&#34;</span>

</code></pre></div><p>Vemos las cabeceras http con el comando <strong>wget</strong></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celiagm@debian:~/github/servidor_Nginx$ wget -S departamentos.iesgn.org/secreto
--2020-11-11 14:26:09--  http://departamentos.iesgn.org/secreto
Resolviendo departamentos.iesgn.org <span style="color:#f92672">(</span>departamentos.iesgn.org<span style="color:#f92672">)</span>... 172.22.200.152
Conectando con departamentos.iesgn.org <span style="color:#f92672">(</span>departamentos.iesgn.org<span style="color:#f92672">)[</span>172.22.200.152<span style="color:#f92672">]</span>:80... conectado.
Petición HTTP enviada, esperando respuesta... 
  HTTP/1.1 <span style="color:#ae81ff">401</span> Unauthorized
  Server: nginx/1.14.2
  Date: Wed, <span style="color:#ae81ff">11</span> Nov <span style="color:#ae81ff">2020</span> 13:26:09 GMT
  Content-Type: text/html
  Content-Length: <span style="color:#ae81ff">195</span>
  Connection: keep-alive
  WWW-Authenticate: Basic realm<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Zona de control&#34;</span>

La autentificación usuario/contraseña falló.

</code></pre></div><ul>
<li><strong>Tarea 8 (2 punto): Vamos a combinar el control de acceso (tarea 6) y la autentificación (tarea 7), y vamos a configurar el virtual host para que se comporte de la siguiente manera: el acceso a la URL departamentos.iesgn.org/secreto se hace forma directa desde la intranet, desde la red pública te pide la autentificación. Muestra el resultado al profesor.</strong></li>
</ul>
<p>Para ello debemos modificar el fichero de configuración de departaentos en el servidor:</p>
<p>Añadimos estas dos líneas:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">
                satisfy any;
                allow 10.0.0.0/24;

</code></pre></div><p>De forma que con la directiva <strong>safisfy any</strong> se concede el acceso si un cliente cumple al menos una condición. Es decir se le permite el acceso al cliente y al resto de máquinas que estén conectadas a la red interna, pero se le pide autentificación al resto.</p>
<p>Quedaría tal que así:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">
<span style="color:#75715e"># Default server configuration</span>

server <span style="color:#f92672">{</span>
        listen 80;

        root /srv/www/departamentos;

        <span style="color:#75715e"># Add index.php to the list if you are using PHP</span>
        index index.html index.htm index.nginx-debian.html;

        server_name departamentos.iesgn.org;

        location / <span style="color:#f92672">{</span>
                <span style="color:#75715e"># First attempt to serve request as file, then</span>
                <span style="color:#75715e"># as directory, then fall back to displaying a 404.</span>
                try_files $uri $uri/ <span style="color:#f92672">=</span>404;
        <span style="color:#f92672">}</span>

        location /intranet <span style="color:#f92672">{</span>
                allow 10.0.0.6/24;
                deny all;
        <span style="color:#f92672">}</span>

        location /internet <span style="color:#f92672">{</span>
                allow 172.23.0.0/16;
                deny all;
        <span style="color:#f92672">}</span>

        location /secreto <span style="color:#f92672">{</span>
                satisfy any;
                allow 10.0.0.0/24;
                auth_basic <span style="color:#e6db74">&#34;Zona de control&#34;</span>;
                auth_basic_user_file /srv/.htpasswd;
        <span style="color:#f92672">}</span>
<span style="color:#f92672">}</span>

</code></pre></div><p>Vemos que que desde fuera nos pide autentificación.</p>
<p>Para que se pueda probar la autentificacion el usuario es <strong>servidor</strong> y la contraseña es <strong>servidor1</strong>.</p>
<p><img src="/images/nginx/secreto3.png" alt="secreto3.png"></p>
<p><img src="/images/nginx/secreto4.png" alt="secreto4.png"></p>
<p>Aquí vemos que desde fuera nos pide la autentifición y desde la intranet nos deja entrar sin autentificación.</p>
<p><img src="/images/nginx/secreto5.png" alt="secreto5.png"></p>
]]></content>
        </item>
        
        <item>
            <title>Compilar un programa en C con Makefile</title>
            <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/compilar-un-programa-en-c-con-makefile/</link>
            <pubDate>Sat, 31 Oct 2020 18:13:42 +0100</pubDate>
            
            <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/compilar-un-programa-en-c-con-makefile/</guid>
            <description>Compilación de un programa en C utilizando un Makefile Requisitos previos  Suponemos que tenemos una máquina virtual con Debian Buster, en este caso voy a usar Vagrant con qemu-kvm para crearla. Necesitaremos tener instalado los paquetes necesarios (vagrant, qemu-kvm, virt-manager&amp;hellip;).  Usaremos el siguiente fichero Vagrantfile:
Vagrant.configure(&amp;#34;2&amp;#34;) do |config| config.vm.box = &amp;#34;debian/buster64&amp;#34; config.vm.hostname = &amp;#34;buster&amp;#34; config.vm.synced_folder &amp;#34;.&amp;#34;, &amp;#34;/vagrant&amp;#34;, disabled: true config.vm.provider :libvirt do |libvirt| libvirt.uri = &amp;#39;qemu+unix:///system&amp;#39; libvirt.host = &amp;#34;debian&amp;#34; libvirt.</description>
            <content type="html"><![CDATA[<h1 id="compilación-de-un-programa-en-c-utilizando-un-makefile">Compilación de un programa en C utilizando un Makefile</h1>
<h2 id="requisitos-previos">Requisitos previos</h2>
<ul>
<li>Suponemos que tenemos una máquina virtual con Debian Buster, en este caso voy a usar <strong>Vagrant</strong> con <strong>qemu-kvm</strong> para crearla. Necesitaremos tener instalado los paquetes necesarios (vagrant, qemu-kvm, virt-manager&hellip;).</li>
</ul>
<p>Usaremos el siguiente fichero Vagrantfile:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">Vagrant.configure<span style="color:#f92672">(</span><span style="color:#e6db74">&#34;2&#34;</span><span style="color:#f92672">)</span> <span style="color:#66d9ef">do</span> |config|
    config.vm.box <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;debian/buster64&#34;</span>
    config.vm.hostname <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;buster&#34;</span>
    config.vm.synced_folder <span style="color:#e6db74">&#34;.&#34;</span>, <span style="color:#e6db74">&#34;/vagrant&#34;</span>, disabled: true
    config.vm.provider :libvirt <span style="color:#66d9ef">do</span> |libvirt|
        libvirt.uri <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;qemu+unix:///system&#39;</span>
        libvirt.host <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;debian&#34;</span>
        libvirt.cpus <span style="color:#f92672">=</span> <span style="color:#ae81ff">1</span>
        libvirt.memory <span style="color:#f92672">=</span> <span style="color:#ae81ff">512</span>
    end
end
</code></pre></div><ul>
<li>La máquina deberá estar actualizada y con los repositorios en orden</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">nano /etc/apt/souces.list
</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">deb http://deb.debian.org/debian buster main
deb-src http://deb.debian.org/debian buster main

deb http://deb.debian.org/debian-security/ buster/updates main
deb-src http://deb.debian.org/debian-security/ buster/updates main

deb http://deb.debian.org/debian buster-updates main
deb-src http://deb.debian.org/debian buster-updates main

</code></pre></div><div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">sudo apt update
sudo apt upgrade
</code></pre></div><ul>
<li>Ademas necesitaremos instalar algunos paquetes claves que nos pedirá al hacer la compilación e instalación de nuestro paquete. Uno de ellos lo vamos a descargar ya. Se trata de un paquete que contiene una lista informativa de los paquetes que se consideran esenciales para la creación de paquetes Debian, este es <strong>build-essential</strong>.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">sudo apt-get install build-essential
</code></pre></div><h2 id="programa-escrito-en-c-lynx">Programa escrito en C: Lynx</h2>
<p><strong>Lynx</strong> es un navegador web y cliente de gopher en modo texto. Este navegador es usado desde la linea de comandos, en terminales. Es muy útil para sistemas sin entorno gráfico y a la vez es fácil e intuitivo para su manejo.</p>
<p>Está escrito en C, y en las fuentes aparece un fichero Makefile para poder compilarlo.</p>
<ul>
<li>
<p><a href="https://packages.debian.org/buster/lynx">Información oficial del paquete</a></p>
</li>
<li>
<p><a href="https://sources.debian.org/src/lynx/2.8.9rel.1-3/">Contenido del paquete</a></p>
</li>
</ul>
<h3 id="descargar-las-fuentes">Descargar las fuentes</h3>
<ul>
<li>Primero vamos a ubicarnos en un sitio adecuado para descargar las fuentes. En este caso vamos a /usr/local para no interferir con otros archivos del sistema y creamos una carpeta llamada lynx.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">cd /usr/local
mkdir lynx
</code></pre></div><ul>
<li>Vamos a descargarnos el código fuente:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ sudo apt source lynx
</code></pre></div><ul>
<li>Vemos el contenido:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@buster:/usr/local/lynx# ls
lynx-2.8.9rel.1			 lynx_2.8.9rel.1-3.dsc	       lynx_2.8.9rel.1.orig.tar.bz2.asc
lynx_2.8.9rel.1-3.debian.tar.xz  lynx_2.8.9rel.1.orig.tar.bz2


</code></pre></div><ul>
<li>Descomprimimos</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ sudo tar -xjvf lynx_2.8.9rel.1.orig.tar.bz2 

</code></pre></div><ul>
<li>Vemos el contenido de nuestra carpeta descomprimida</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">vagrant@buster:/usr/local/lynx/lynx2.8.9rel.1$ ls
ABOUT-NLS       COPYING.asc      VMSPrint.com  config.guess  fixed512.com  make-msc.bat  samples
AUTHORS         INSTALLATION     WWW           config.hin    install-sh    makefile.bcb  scripts
BUILD           LYHelp.hin       aclocal.m4    config.sub    lib           makefile.in   src
CHANGES         LYMessages_en.h  bcblibs.bat   configure     lynx.cfg      makefile.msc  test
COPYHEADER      PACKAGE          build.bat     configure.in  lynx.hlp      makelynx.bat  userdefs.h
COPYHEADER.asc  PROBLEMS         build.com     descrip.mms   lynx.man      makew32.bat
COPYING         README           clean.com     docs          lynx_help     po

</code></pre></div><p>Como podemos comprobar hay un fichero llamado <em>INSTALLATION</em>, que nos va a indicar como tenemos que compilar e instalar lynx.</p>
<h3 id="autoconfigurar-debemos-utilizar-configure">Autoconfigurar. Debemos utilizar ./configure</h3>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@buster:/usr/local/lynx/lynx2.8.9rel.1# ./configure
</code></pre></div><ul>
<li>Nos encontramos con el siguiente error:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">configure: WARNING: pkg-config is not installed

</code></pre></div><p>Nos está diciendo que necesitamos un paquete esencial para la compilación, lo instalamos:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">sudo apt-get install pkg-config
</code></pre></div><ul>
<li>Volvemos a ejecutar <strong>./configure</strong> y encontramos otro error:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">configure: error: No curses header-files found
</code></pre></div><p>Buscando este error por internet, he encontrado que se debe a que necesita una biblioteca que permite escribir interfaces basadas en texto llamada Ncurses. En concreto nos hace falta una librería que es la siguiente:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">apt-get install libncurses5-dev
</code></pre></div><ul>
<li>Volvemos a ejecutar configure y vemos que ahora se ejecuta perfectamente.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">./configure
</code></pre></div><p>Haz click aquí para ver la salida -&raquo; <a href="https://github.com/CeliaGMqrz/utilidades/blob/main/salida.md">salida</a></p>
<h3 id="compilar-makefile">COMPILAR. MAKEFILE</h3>
<ul>
<li>Según la guía de <em>INSTALLATION</em> ahora tenemos que ejecutar <strong>make</strong> para crear los objetos y archivos necesarios.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">make
</code></pre></div><ul>
<li>Estas son las últimas líneas que nos han salido:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">Copying Lynx executable into top-level directory
rm -f ../lynx
cp lynx ../
Welcome to Lynx!
make<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>: Leaving directory <span style="color:#e6db74">&#39;/usr/local/lynx/lynx2.8.9rel.1/src&#39;</span>

</code></pre></div><ul>
<li>Vamos al directorio que nos ha creado y vemos donde están todos los ficheros objetos:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">cd lynx/lynx2.8.9rel.1/src/

</code></pre></div><p><img src="/images/objetos.png" alt="objetos.png"></p>
<ul>
<li>Ahora deberemos de hacer un <em>make install</em> en el directorio adecuado:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@buster:/usr/local/lynx/lynx2.8.9rel.1# make install
/bin/sh -c <span style="color:#e6db74">&#34;P=`echo lynx|sed &#39;s,x,x,&#39;`; \
</span><span style="color:#e6db74">if test -f /usr/local/bin/</span>$P<span style="color:#e6db74"> ; then \
</span><span style="color:#e6db74">      mv -f /usr/local/bin/</span>$P<span style="color:#e6db74"> /usr/local/bin/</span>$P<span style="color:#e6db74">.old; fi&#34;</span>
/usr/bin/install -c lynx /usr/local/bin/<span style="color:#e6db74">`</span>echo lynx|sed <span style="color:#e6db74">&#39;s,x,x,&#39;</span><span style="color:#e6db74">`</span>
mkdir -p /usr/local/share/man/man1
/usr/bin/install -c -m <span style="color:#ae81ff">644</span> ./lynx.man /usr/local/share/man/man1/<span style="color:#e6db74">`</span>echo lynx|sed <span style="color:#e6db74">&#39;s,x,x,&#39;</span><span style="color:#e6db74">`</span>.1
** installing ./lynx.cfg as /usr/local/etc/lynx.cfg
** installing ./samples/lynx.lss as /usr/local/etc/lynx.lss

Use make install-help to install the help-files
Use make install-doc to install extra documentation files

</code></pre></div><p>Después de todo esto ya tendriamos instalado <strong>lynx</strong>, nos muestra cómo podemos instalar la ayuda y la documentación extra.</p>
<ul>
<li>Ahora ejecutamos <strong>lynx</strong> y vemos que funciona perfectamente.</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">lynx www.google.es
</code></pre></div><p><img src="/images/googlelynx.png" alt="googlelynx.png"></p>
<h2 id="instalar-la-ayuda">Instalar la ayuda</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@buster:/usr/local/lynx/lynx2.8.9rel.1# make install-help
mkdir -p /usr/local/share/lynx_help
/bin/sh -c <span style="color:#e6db74">&#39;if cd &#34;/usr/local/share/lynx_help&#34; ; then \
</span><span style="color:#e6db74">	WD=`pwd` ; \
</span><span style="color:#e6db74">	TAIL=`basename &#34;/usr/local/share/lynx_help&#34;` ; \
</span><span style="color:#e6db74">	HEAD=`echo &#34;$WD&#34;|sed -e &#34;s,/${TAIL}$,,&#34;` ; \
</span><span style="color:#e6db74">	test &#34;x$WD&#34; != &#34;x$HEAD&#34; &amp;&amp; rm -fr * ; \
</span><span style="color:#e6db74">	fi&#39;</span>
test -d /usr/local/share/lynx_help/keystrokes <span style="color:#f92672">||</span> mkdir /usr/local/share/lynx_help/keystrokes
Translating/copying html files
/bin/sh -c <span style="color:#e6db74">&#39;sed_prog=`pwd`/help_files.sed &amp;&amp; \
</span><span style="color:#e6db74">	cd ./lynx_help &amp;&amp; \
</span><span style="color:#e6db74">	dirs=keystrokes &amp;&amp; \
</span><span style="color:#e6db74">	files=&#34;*.html */*.html&#34; &amp;&amp; \
</span><span style="color:#e6db74">	for f in $files ; do \
</span><span style="color:#e6db74">		sed -f $sed_prog $f &gt; /usr/local/share/lynx_help/$f ; \
</span><span style="color:#e6db74">	done &amp;&amp; \
</span><span style="color:#e6db74">	if test &#34;&#34; != &#34;&#34; ; then \
</span><span style="color:#e6db74">		(cd /usr/local/share/lynx_help &amp;&amp;  $files ) \
</span><span style="color:#e6db74">	fi&#39;</span>
Updating /usr/local/etc/lynx.cfg
/bin/sh -c <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span><span style="color:#e6db74">&#39;if test -f /usr/local/etc/lynx.cfg ; then \
</span><span style="color:#e6db74">	mv /usr/local/etc/lynx.cfg /usr/local/etc/lynx.tmp ; \
</span><span style="color:#e6db74">else \
</span><span style="color:#e6db74">	cp ./lynx.cfg /usr/local/etc/lynx.tmp ; \
</span><span style="color:#e6db74">fi&#39;</span>
Updating /usr/local/etc/lynx.cfg to point to installed help-files
sed	-e <span style="color:#e6db74">&#39;/^HELPFILE:http/s!^!#!&#39;</span> <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>	-e <span style="color:#e6db74">&#39;/^#HELPFILE:file/s!#!!&#39;</span> <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>	/usr/local/etc/lynx.tmp | <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>/bin/sh ./scripts/cfg_path.sh lynx_help /usr/local/share/lynx_help | <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>/bin/sh ./scripts/cfg_path.sh lynx_doc  /usr/local/share/lynx_help | <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>sed	-e <span style="color:#e6db74">&#39;/^HELPFILE:file/s!$!!&#39;</span> <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>	-e <span style="color:#e6db74">&#39;/^HELPFILE:file/s!$!!&#39;</span> <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>	&gt;/usr/local/etc/lynx.cfg
chmod <span style="color:#ae81ff">644</span> /usr/local/etc/lynx.cfg
rm -f /usr/local/etc/lynx.tmp

</code></pre></div><ul>
<li>Comprobamos que tenemos la ayuda instalada</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@buster:/usr/local/lynx/lynx2.8.9rel.1# lynx --help
USAGE: lynx <span style="color:#f92672">[</span>options<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>file<span style="color:#f92672">]</span>
Options are:
  -                 receive options and arguments from stdin
  -accept_all_cookies 
                    accept cookies without prompting <span style="color:#66d9ef">if</span> Set-Cookie handling
                    is on <span style="color:#f92672">(</span>off<span style="color:#f92672">)</span>
  -anonymous        apply restrictions <span style="color:#66d9ef">for</span> anonymous account,
                    see also -restrictions
  -assume_charset<span style="color:#f92672">=</span>MIMEname
                    charset <span style="color:#66d9ef">for</span> documents that don<span style="color:#960050;background-color:#1e0010">&#39;</span>t specify it
  -assume_local_charset<span style="color:#f92672">=</span>MIMEname
                    charset assumed <span style="color:#66d9ef">for</span> local files
  -assume_unrec_charset<span style="color:#f92672">=</span>MIMEname
                    use this instead of unrecognized charsets
  -auth<span style="color:#f92672">=</span>id:pw       authentication information <span style="color:#66d9ef">for</span> protected documents
  -base             prepend a request URL comment and BASE tag to text/html
                    outputs <span style="color:#66d9ef">for</span> -source dumps
  -bibhost<span style="color:#f92672">=</span>URL      local bibp server <span style="color:#f92672">(</span>default http://bibhost/<span style="color:#f92672">)</span>
  -book             use the bookmark page as the startfile <span style="color:#f92672">(</span>off<span style="color:#f92672">)</span>
  -buried_news      toggles scanning of news articles <span style="color:#66d9ef">for</span> buried references <span style="color:#f92672">(</span>on<span style="color:#f92672">)</span>
  -cache<span style="color:#f92672">=</span>NUMBER     NUMBER of documents cached in memory

</code></pre></div><ul>
<li>También podemos instalar la documentación</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@buster:/usr/local/lynx/lynx2.8.9rel.1# make install-doc
mkdir -p /usr/local/share/lynx_doc
Copying sample files
/bin/sh -c <span style="color:#e6db74">&#39;\
</span><span style="color:#e6db74">	( umask 022; \
</span><span style="color:#e6db74">	  cd . &amp;&amp; \
</span><span style="color:#e6db74">	  /usr/bin/tar -cf - C[HO]* PROBLEMS README docs samples test ) | \
</span><span style="color:#e6db74">	( umask 022; \
</span><span style="color:#e6db74">	  cd /usr/local/share/lynx_doc &amp;&amp; \
</span><span style="color:#e6db74">	  chmod -R u+w . &amp;&amp; /usr/bin/tar -xf - )&#39;</span>
/bin/sh -c <span style="color:#e6db74">&#39;if test &#34;&#34; != &#34;&#34; ; then \
</span><span style="color:#e6db74">	(cd /usr/local/share/lynx_doc &amp;&amp;  -f docs/CHANGES*.[0-9] docs/*.announce ) \
</span><span style="color:#e6db74">fi&#39;</span>
/bin/sh -c <span style="color:#e6db74">&#39;for name in COPYING COPYHEADER; do \
</span><span style="color:#e6db74">	cd /usr/local/share/lynx_help &amp;&amp; rm -f $name ;\
</span><span style="color:#e6db74">	r= ;\
</span><span style="color:#e6db74">	test &#34;ln -s&#34; = &#34;ln -s&#34; || r=`echo /usr/local/share/lynx_help|sed -e &#34;s%[^/]\+%..%g&#34; -e &#34;s%^.%%&#34;`; \
</span><span style="color:#e6db74">	cd /usr/local/share/lynx_help &amp;&amp; ( ln -s $r/usr/local/share/lynx_doc/$name . || cp /usr/local/share/lynx_doc/$name . );\
</span><span style="color:#e6db74">	done&#39;</span>
/bin/sh -c <span style="color:#e6db74">&#39;case `id|sed -e &#34;s/(.*//&#34;` in uid=0) chown -R root /usr/local/share/lynx_doc;; esac&#39;</span>

</code></pre></div><ul>
<li>Miramos donde está instalado el paquete</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@buster:/home/vagrant# whereis lynx
lynx: /usr/local/bin/lynx /usr/local/etc/lynx.lss /usr/local/etc/lynx.cfg /usr/local/lynx

root@buster:/home/vagrant# which lynx
/usr/local/bin/lynx
</code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Cifrado Asimétrico con GPG y OpenSSL</title>
            <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/cifrado-asim%C3%A9trico-con-gpg-y-openssl/</link>
            <pubDate>Sat, 24 Oct 2020 14:45:15 +0200</pubDate>
            
            <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/cifrado-asim%C3%A9trico-con-gpg-y-openssl/</guid>
            <description>Práctica: Cifrado asimétrico con gpg y openssl En esta práctica vamos a cifrar ficheros utilizando cifrado asimétrico utilizando el programa gpg.
Cifrado Asimétrico con GPG   Tarea 1: Generación de claves
  Tarea 2: Importar / exportar clave pública
  Tarea 3: Cifrado asimétrico con claves públicas
  Tarea 4: Exportar clave a un servidor público de claves PGP
  Cifrado asimétrico con OPENSSL  Tarea 5: Cifrado asimétrico con openssl  </description>
            <content type="html"><![CDATA[<h1 id="práctica-cifrado-asimétrico-con-gpg-y-openssl">Práctica: Cifrado asimétrico con gpg y openssl</h1>
<p>En esta práctica vamos a cifrar ficheros utilizando cifrado asimétrico utilizando el programa gpg.</p>
<h2 id="cifrado-asimétrico-con-gpg">Cifrado Asimétrico con GPG</h2>
<ul>
<li>
<p>Tarea 1: <a href="https://github.com/CeliaGMqrz/cifrado_asimetrico_gpg_openssl/blob/main/cifrado_asim%C3%A9trico_gpg_openssl.md">Generación de claves</a></p>
</li>
<li>
<p>Tarea 2: <a href="https://github.com/CeliaGMqrz/cifrado_asimetrico_gpg_openssl/blob/main/importar_exportar_clavepub.md">Importar / exportar clave pública</a></p>
</li>
<li>
<p>Tarea 3: <a href="https://github.com/CeliaGMqrz/cifrado_asimetrico_gpg_openssl/blob/main/cifrado_asimetrico_claves_publicas.md">Cifrado asimétrico con claves públicas</a></p>
</li>
<li>
<p>Tarea 4: <a href="https://github.com/CeliaGMqrz/cifrado_asimetrico_gpg_openssl/blob/main/exportar_servidor_publico.md">Exportar clave a un servidor público de claves PGP</a></p>
</li>
</ul>
<h2 id="cifrado-asimétrico-con-openssl">Cifrado asimétrico con OPENSSL</h2>
<ul>
<li>Tarea 5: <a href="https://github.com/CeliaGMqrz/cifrado_asimetrico_gpg_openssl/blob/main/asimetrico_openssl.md">Cifrado asimétrico con openssl</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Guia de Virtual Hosting Con Apache</title>
            <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/guia-de-virtual-hosting-con-apache/</link>
            <pubDate>Wed, 21 Oct 2020 21:54:22 +0200</pubDate>
            
            <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/guia-de-virtual-hosting-con-apache/</guid>
            <description>VirtualHosting con Apache Conceptos previos ¿Qué es un sitio web? Un sitio web es un conjunto de páginas web, propiamente dicho. Las páginas están relacionadas entre sí. Y a ese sitio web se accede en una dirección ip y a través de un puerto(80). Normalmente si cambiamos la ip o el puerto serviría otro sitio web.
¿Qué es Hosting Virtual? El término Hosting Virtual se refiere a hacer funcionar más de un sitio web (tales como www.</description>
            <content type="html"><![CDATA[<h1 id="virtualhosting-con-apache">VirtualHosting con Apache</h1>
<h2 id="conceptos-previos">Conceptos previos</h2>
<h3 id="qué-es-un-sitio-web">¿Qué es un sitio web?</h3>
<p>Un sitio web es un conjunto de páginas web, propiamente dicho. Las páginas están relacionadas entre sí. Y a ese sitio web se accede en una dirección ip y a través de un puerto(80). Normalmente si cambiamos la ip o el puerto serviría otro sitio web.</p>
<h3 id="qué-es-hosting-virtual">¿Qué es Hosting Virtual?</h3>
<p>El término <strong>Hosting Virtual</strong> se refiere a hacer funcionar más de un sitio web (tales como <a href="http://www.company1.com">www.company1.com</a> y <a href="http://www.company2.com">www.company2.com</a>) en una sola máquina. Los sitios web virtuales pueden estar “basados en direcciones IP”, lo que significa que cada sitio web tiene una dirección IP diferente, o “basados en nombres diferentes”, lo que significa que con una sola dirección IP están funcionando sitios web con diferentes nombres (de dominio). Apache fue uno de los primeros servidores web en soportar hosting virtual basado en direcciones IP.</p>
<p>En definitiva:</p>
<p>Usando virtualhosting, el servidor desde una misma ip y desde el mismo puerto puede servir <strong>varios sitios web</strong>. Y cada uno podemos acceder por separado. Esto lo hace de manera que las peticiones al servidor se hacen con un <strong>nombre</strong> configurado en la <strong>cabecera host del servidor</strong>. Dependiendo del nombre con el que se acceda al servidor servirá un sitio o otro.</p>
<p>En Apache hay configurado un virtualhost por defecto. Se llama <strong>default</strong>. El server name no está indicado, es decir que podemos entrar con cualquier nombre o con la misma dirección ip. El document root donde están los ficheros es <strong>/var/www/html</strong>.</p>
<h2 id="objetivo">Objetivo</h2>
<p>El objetivo de esta práctica es la puesta en marcha de dos sitios web utilizando el mismo servidor web apache. Hay que tener en cuenta lo siguiente:</p>
<ul>
<li>
<p>Cada sitio web tendrá nombres distintos.</p>
</li>
<li>
<p>Cada sitio web compartirán la misma dirección IP y el mismo puerto (80).</p>
</li>
</ul>
<p>Queremos construir en nuestro servidor web apache dos sitios web con las siguientes características:</p>
<ul>
<li>
<p>El nombre de dominio del primero será <a href="http://www.iesgn.org">www.iesgn.org</a>, su directorio base será /var/www/iesgn y contendrá una página llamada index.html, donde sólo se verá una bienvenida a la página del Instituto Gonzalo Nazareno.</p>
</li>
<li>
<p>En el segundo sitio vamos a crear una página donde se pondrán noticias por parte de los departamento, el nombre de este sitio será <a href="http://www.departamentosgn.org">www.departamentosgn.org</a>, y su directorio base será /var/www/departamentos. En este sitio sólo tendremos una página inicial index.html, dando la bienvenida a la página de los departamentos del instituto.</p>
</li>
</ul>
<h2 id="1-crear-los-ficheros-de-configuración-para-cada-sitio-web">1. Crear los ficheros de configuración para cada sitio web</h2>
<p>Los ficheros de configuración de los sitios webs se encuentran en el directorio <strong>/etc/apache2/sites-available</strong>, por defecto hay dos ficheros, uno se llama &lsquo;000-default.conf&rsquo; que es la configuración del sitio web por defecto. Necesitamos tener dos ficheros para realizar la configuración de los dos sitios virtuales, para ello vamos a copiar el fichero 000-default.conf:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@mimaquina:/etc/apache2# cd sites-available/

root@mimaquina:/etc/apache2/sites-available# ls
000-default.conf  default-ssl.conf

root@mimaquina:/etc/apache2/sites-available# cp 000-default.conf iesgn.conf

root@mimaquina:/etc/apache2/sites-available# cp 000-default.conf departamentos.conf

root@mimaquina:/etc/apache2/sites-available# ls
000-default.conf  default-ssl.conf  departamentos.conf	iesgn.conf

</code></pre></div><p>De esta manera tendremos un fichero llamado <strong>iesgn.conf</strong> para realizar la configuración del sitio web <strong><a href="http://www.iesgn.org">www.iesgn.org</a></strong>, y otro llamado <strong>departamentos.conf</strong> para el sitio web <strong><a href="http://www.departamentosgn.org">www.departamentosgn.org</a></strong>.</p>
<h2 id="2-modificar-los-ficheros-de-configuración">2. Modificar los ficheros de configuración</h2>
<p>Modificamos los ficheros iesgn.conf y departamentos.conf, para indicar el nombre que vamos ausar para acceder al host virtual (ServerName) y el directorio de trabajo (DocumentRoot).</p>
<ul>
<li>Editamos iesgn.conf:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">        ServerName www.iesgn.org

        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/iesgn
</code></pre></div><ul>
<li>Editamos departamentos.conf:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">        ServerName www.departamentosgn.org

        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/departamentosgn
</code></pre></div><h2 id="3-crear-enlace-simbólico">3. Crear enlace simbólico</h2>
<p>No es suficiente crear los ficheros de configuración de cada sitio web, es necesario crear un enlace simbólico a estos ficheros dentro del directorio <strong>/etc/apache2/sites-enabled</strong>, para ello:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@mimaquina:~# a2ensite iesgn.conf
Enabling site iesgn.
To activate the new configuration, you need to run:
  systemctl reload apache2
root@mimaquina:~# a2ensite departamentos
Enabling site departamentos.
To activate the new configuration, you need to run:
  systemctl reload apache2


root@mimaquina:/etc/apache2/sites-enabled# ls
000-default.conf  departamentos.conf  iesgn.conf

</code></pre></div><p>La creación de los enlaces simbólicos se puede hacer con la instrucción <strong>a2ensite nombre_fichero_configuracion</strong>, para deshabilitar el sitio tenemos que borrar el enlace simbólico o usar la instrucción <strong>a2dissite nombre_fichero_configuracion</strong>.</p>
<h2 id="4-crear-indexhtml-necesario">4. Crear index.html necesario</h2>
<p>Crea los directorios y los ficheros index.html necesarios en /var/www y reiniciamos el servicio.</p>
<ul>
<li>Creamos el directorio &lsquo;iesgn&rsquo; con su index.html</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@mimaquina:/var/www# mkdir iesgn
root@mimaquina:/var/www# cd iesgn/
root@mimaquina:/var/www/iesgn# nano index.html

</code></pre></div><ul>
<li>Creamos el directorio &lsquo;departamentosgn&rsquo; con su index.html</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@mimaquina:/var/www# mkdir departamentosgn
root@mimaquina:/var/www# cd departamentosgn/
root@mimaquina:/var/www/departamentosgn# ls
root@mimaquina:/var/www/departamentosgn# cp ../iesgn/index.html index.html
root@mimaquina:/var/www/departamentosgn# ls
index.html
root@mimaquina:/var/www/departamentosgn# nano index.html 
</code></pre></div><ul>
<li>Le damos los propietarios adecuados:</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">root@mimaquina:~# chown -R www-data:www-data /var/www/departamentosgn
root@mimaquina:~# chown -R www-data:www-data /var/www/iesgn

</code></pre></div><ul>
<li>Reiniciamos el servicio</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># systemctl reload apache2</span>
</code></pre></div><h2 id="5-modificar-fichero-hosts-de-nuestra-máquina-física">5. Modificar fichero hosts de nuestra máquina física</h2>
<p>Para terminar lo único que tendremos que hacer es cambiar el fichero hosts en los clientes y poner dos nuevas líneas donde se haga la conversión entre los dos nombre de dominio y la dirección IP del servidor.</p>
<p>Le ponemos la dirección del servidor, osea la ip de nuestra máquina virtual, que, en este caso está conectada por un puente a nuestra anfitriona.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">  GNU nano 3.2                      /etc/hosts                                

127.0.0.1       localhost
127.0.1.1       mimaquina       mimaquina

192.168.100.143      www.iesgn.org
192.168.100.143      www.departamentosgn.org
<span style="color:#75715e"># The following lines are desirable for IPv6 capable hosts</span>
::1     localhost ip6-localhost ip6-loopback
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters


</code></pre></div><ul>
<li>Hacemos ping a las urls desde nuestra máquina anfitriona</li>
</ul>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">celia@debian:~/vagrant/virtualhosting$ ping www.departamentosgn.org
PING www.departamentosgn.org <span style="color:#f92672">(</span>192.168.100.143<span style="color:#f92672">)</span> 56<span style="color:#f92672">(</span>84<span style="color:#f92672">)</span> bytes of data.
<span style="color:#ae81ff">64</span> bytes from www.iesgn.org <span style="color:#f92672">(</span>192.168.100.143<span style="color:#f92672">)</span>: icmp_seq<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span> ttl<span style="color:#f92672">=</span><span style="color:#ae81ff">64</span> time<span style="color:#f92672">=</span>0.406 ms
<span style="color:#ae81ff">64</span> bytes from www.iesgn.org <span style="color:#f92672">(</span>192.168.100.143<span style="color:#f92672">)</span>: icmp_seq<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span> ttl<span style="color:#f92672">=</span><span style="color:#ae81ff">64</span> time<span style="color:#f92672">=</span>0.374 ms
^C
--- www.departamentosgn.org ping statistics ---
<span style="color:#ae81ff">2</span> packets transmitted, <span style="color:#ae81ff">2</span> received, 0% packet loss, time 15ms
rtt min/avg/max/mdev <span style="color:#f92672">=</span> 0.374/0.390/0.406/0.016 ms


celia@debian:~/vagrant/virtualhosting$ ping www.iesgn.org
PING www.iesgn.org <span style="color:#f92672">(</span>192.168.100.143<span style="color:#f92672">)</span> 56<span style="color:#f92672">(</span>84<span style="color:#f92672">)</span> bytes of data.
<span style="color:#ae81ff">64</span> bytes from www.iesgn.org <span style="color:#f92672">(</span>192.168.100.143<span style="color:#f92672">)</span>: icmp_seq<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span> ttl<span style="color:#f92672">=</span><span style="color:#ae81ff">64</span> time<span style="color:#f92672">=</span>0.389 ms
<span style="color:#ae81ff">64</span> bytes from www.iesgn.org <span style="color:#f92672">(</span>192.168.100.143<span style="color:#f92672">)</span>: icmp_seq<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span> ttl<span style="color:#f92672">=</span><span style="color:#ae81ff">64</span> time<span style="color:#f92672">=</span>0.396 ms
^C
--- www.iesgn.org ping statistics ---
<span style="color:#ae81ff">2</span> packets transmitted, <span style="color:#ae81ff">2</span> received, 0% packet loss, time 16ms
rtt min/avg/max/mdev <span style="color:#f92672">=</span> 0.389/0.392/0.396/0.020 ms
celia@debian:~/vagrant/virtualhosting$ 

</code></pre></div><ul>
<li>Lo vemos desde nuestro navegador en la máquina anfitriona:</li>
</ul>
<p><strong><a href="http://www.iesgn.org">www.iesgn.org</a></strong>
<img src="/images/cap2.jpeg" alt="cap2.jpeg"></p>
<p><strong><a href="http://www.departamentosgn.org">www.departamentosgn.org</a></strong>
<img src="/images/cap1.jpeg" alt="cap1.jpeg"></p>
<h3 id="repite-el-ejercicio-cambiando-los-directorios-de-trabajo-a-srvwww-qué-modificación-debes-hacer-en-el-fichero-etcapache2apache2conf">Repite el ejercicio cambiando los directorios de trabajo a /srv/www. ¿Qué modificación debes hacer en el fichero /etc/apache2/apache2.conf?</h3>
<p>Sería el mismo procedimiento solo que debemos editar el fichero de configuración de apache2.conf de la siguiente forma. Comentando el directorio que coge por defecto y descomentando el nuevo directorio. En él podemos copiar las carpetas que teniamos en www y hacemos el mismo procedimiento, cambiando el documenroot a los ficheros de configuracion antes de iniciarlos.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e">#&lt;Directory /var/www/&gt;</span>
<span style="color:#75715e">#        Options Indexes FollowSymLinks</span>
<span style="color:#75715e">#        AllowOverride None</span>
<span style="color:#75715e">#        Require all granted</span>
<span style="color:#75715e">#&lt;/Directory&gt;</span>

&lt;Directory /srv/&gt;
       Options Indexes FollowSymLinks
       AllowOverride None
       Require all granted
&lt;/Directory&gt;

</code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Instalación de VisualCode en Debian Buster</title>
            <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/instalaci%C3%B3n-de-visualcode-en-debian-buster/</link>
            <pubDate>Thu, 15 Oct 2020 22:22:11 +0200</pubDate>
            
            <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/instalaci%C3%B3n-de-visualcode-en-debian-buster/</guid>
            <description>Instalar Visual Code en Debian 10 Instalar dependencias.
$ sudo apt install software-properties-common apt-transport-https Descargamos la llave GPG del repositorio.
sudo wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add - Introducimos el repositorio correspondiente
$ sudo add-apt-repository &amp;#34;deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main&amp;#34; Actualizamos los paquetes
$ sudo apt update Instalamos Visual Code.
$ sudo apt-get install code </description>
            <content type="html"><![CDATA[<h3 id="instalar-visual-code-en-debian-10">Instalar Visual Code en Debian 10</h3>
<p><img src="/images/vscode.png" alt="image"></p>
<p>Instalar dependencias.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ sudo apt install software-properties-common apt-transport-https
</code></pre></div><p>Descargamos la llave GPG del repositorio.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">sudo wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -
</code></pre></div><p>Introducimos el repositorio correspondiente</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ sudo add-apt-repository <span style="color:#e6db74">&#34;deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main&#34;</span>
</code></pre></div><p>Actualizamos los paquetes</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ sudo apt update
</code></pre></div><p>Instalamos Visual Code.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ sudo apt-get install code
</code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Instalación de Virtualbox en Debian Buster</title>
            <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/instalaci%C3%B3n-de-virtualbox-en-debian-buster/</link>
            <pubDate>Thu, 15 Oct 2020 15:50:23 +0200</pubDate>
            
            <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/10/instalaci%C3%B3n-de-virtualbox-en-debian-buster/</guid>
            <description>Instalar Virtualbox 6.0 en Debian Buster VirtualBox no viene en el repositorio predeterminado de Debian 10, por tanto lo instalaremos desde el repositorio oficial de Oracle. Para ello vamos a agregar el repositorio en el fichero correspondiente:
$ sudo nano /etc/apt/sources.list Añadimos el repositorio y guardamos el fichero.
deb https://download.virtualbox.org/virtualbox/debian buster contrib Descargamos e importamos la clave pública de Oracle GPG en nuestro Debian 10.
$ wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add - Actualizamos los paquetes</description>
            <content type="html"><![CDATA[<h3 id="instalar-virtualbox-60-en-debian-buster">Instalar Virtualbox 6.0 en Debian Buster</h3>
<p><img src="/images/vbox.jpg" alt="image"></p>
<p>VirtualBox no viene en el repositorio predeterminado de Debian 10, por tanto lo instalaremos desde el repositorio oficial de Oracle.
Para ello vamos a agregar el repositorio en el fichero correspondiente:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ sudo nano /etc/apt/sources.list
</code></pre></div><p>Añadimos el repositorio y guardamos el fichero.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">deb https://download.virtualbox.org/virtualbox/debian buster contrib
</code></pre></div><p>Descargamos e importamos la clave pública de Oracle GPG en nuestro Debian 10.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
</code></pre></div><p>Actualizamos los paquetes</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ sudo apt update
</code></pre></div><p>Instalamos la versión que queramos de virtualbox</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">$ apt search virtualbox
$ sudo apt-get install virtualbox-6.0
</code></pre></div>]]></content>
        </item>
        
    </channel>
</rss>
