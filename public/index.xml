<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Un bit de informacion cada día</title>
    <link>https://unbitdeinformacioncadadia.netlify.app/</link>
    <description>Recent content on Un bit de informacion cada día</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 07 Mar 2021 21:11:44 +0100</lastBuildDate><atom:link href="https://unbitdeinformacioncadadia.netlify.app/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Despliegue CMS en Java</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2021/03/despliegue-cms-en-java/</link>
      <pubDate>Sun, 07 Mar 2021 21:11:44 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2021/03/despliegue-cms-en-java/</guid>
      <description>En esta entrada vamos a tratar de desplegar una aplicación CMS escrito en Java. Para ello usaremos &amp;lsquo;Guacamole&amp;rsquo;.
Entorno de trabajo. Escenario.  Vamos a usar una máquina virtual con Vagrant y Virtualbox. Sistema operativo: Debian Buster. Necesitaremos usuario con privilegios root y la paquetería actualizada.  Vagrantfile
Una vez tengamos el entorno de trabajo nos aseguraremos que tenemos el sistema actualizado.
Guacamole como concepto. Tomcat. Apache Guacamole es una herramienta libre y Open-Source que nos permite conectarnos remotamente a un servidor mediante el navegador web sin necesidad de usar un cliente.</description>
    </item>
    
    <item>
      <title>Introducción a Docker</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2021/03/introducci%C3%B3n-a-docker/</link>
      <pubDate>Sun, 07 Mar 2021 21:11:44 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2021/03/introducci%C3%B3n-a-docker/</guid>
      <description>Contenedores y aplicaciones ¿Qué son los contendores?
Son diferentes compartimentos en el que cada aplicación visualiza un sistema operativo virtualmente sin compartirlo con nadie. Aislamos cada aplicación en un compartimento. Instalaremos una aplicacion en cada contenedor. En cada contenedor podemos tener solo un proceso.
Con los contenedores podemos utilizar distintas versiones de software.
Es un mecanismo de virtualización ligera que permite al sistema operativo dar la sensación de aislamiento a cada proceso de forma que no compartimos recursos.</description>
    </item>
    
    <item>
      <title>VPN con OpenVPN y certificados x509</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2021/02/vpn-con-openvpn-y-certificados-x509/</link>
      <pubDate>Wed, 24 Feb 2021 08:27:54 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2021/02/vpn-con-openvpn-y-certificados-x509/</guid>
      <description>Conceptos ¿Qué es una VPN?
Se trata de una Red privada virtual. Es una tecnología de red de ordenadores que perminte una extensión segura de la red de área local sobre una red pública o no controlada como Internet. Permite que el ordenador en la red envíe y reciba datos sobre redes compartidas o públicas como si fuera una red privada.
El modelo de VPN de acceso remoto es el modelo más usado actualmente.</description>
    </item>
    
    <item>
      <title>VPN con OpenVPN y certificados x509 (II)</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2021/02/vpn-con-openvpn-y-certificados-x509-ii/</link>
      <pubDate>Wed, 24 Feb 2021 08:27:54 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2021/02/vpn-con-openvpn-y-certificados-x509-ii/</guid>
      <description>Escenario:
Tenemos dos servidores, dos maquinas conectadas a las redes locales diferentes y un cliente. Los servidores están conectados a dos redes la exterior en común y una interna compartida con su respectivo cliente de forma que tenemos el siguiente direccionamiento:
  Servidor 1: vpn_server
 Red común 172.22.201.64 Red 10.0.0.8 Red1 192.168.100.2    Maquina de la red local 1: lan
 Red1 192.168.100.10    Servidor 2: vpn_server2</description>
    </item>
    
    <item>
      <title>Aumento del rendimiento de Nginx con Varnish</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2021/02/aumento-del-rendimiento-de-nginx-con-varnish/</link>
      <pubDate>Tue, 16 Feb 2021 17:15:21 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2021/02/aumento-del-rendimiento-de-nginx-con-varnish/</guid>
      <description>Para ver la introducción a este tema puedes entrar en este post:
 Gestión de peticiones y rendimiento de servidores Web
1. Concepto: Varnish Varnish es un acelerador de HTTP que funciona como proxy inverso. Se sitúa delante del servidor web, cacheando la respuesta del servidor web en memoria. De forma que cuando un cliente demanda la url por segunda vez, Varnish le da la respuesta ahorrando recursos en el backend y permitiendo más conexiones simultáneas.</description>
    </item>
    
    <item>
      <title>Gestión de peticiones y rendimiento de servidores Web</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2021/02/gesti%C3%B3n-de-peticiones-y-rendimiento-de-servidores-web/</link>
      <pubDate>Tue, 16 Feb 2021 17:15:21 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2021/02/gesti%C3%B3n-de-peticiones-y-rendimiento-de-servidores-web/</guid>
      <description>Los servidores web pueden ser configurados para manejar peticiones de diferente forma. En esta entrada vamos a hablar de los MPM (Módulos de multiprocesamiento) que nos permiten configurar el servidor web para gestionar las peticiones que llegan al servidor.
Se pueden hacer distintas configuraciones en los servidores web para que sirvan páginas PHP y Pyhton. Comprobaremos el rendimiento de las mismas dependiendo de la configuración adoptada. Se mencionarán distintas aplicaciones para mejorar este rendimiento (aceleradores PHP, varnish &amp;hellip;)</description>
    </item>
    
    <item>
      <title>Cortafuegos perimetral. Iptables</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2021/01/cortafuegos-perimetral.-iptables/</link>
      <pubDate>Mon, 25 Jan 2021 17:15:21 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2021/01/cortafuegos-perimetral.-iptables/</guid>
      <description>Introducción Vamos a construir un cortafuegos en dulcinea que nos permita controlar el tráfico de nuestra red. El cortafuegos que vamos a construir debe funcionar tras un reinicio.
La política por defecto que vamos a configurar en nuestro cortafuegos será de tipo DROP.
NAT 1.Las máquinas de nuestra red tienen que tener acceso al exterior Estas reglas de iptables ya estaban configuradas en ejercicios anteriores, son las siguientes:
up iptables -t nat -A POSTROUTING -s 10.</description>
    </item>
    
    <item>
      <title>Servidor de Correos. Postfix (III).</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2021/01/servidor-de-correos.-postfix-iii./</link>
      <pubDate>Mon, 25 Jan 2021 17:15:21 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2021/01/servidor-de-correos.-postfix-iii./</guid>
      <description>Gestión de correos desde un cliente Tarea 8: Configurar postfix con Maildir Descripción:
Configura el buzón de los usuarios de tipo Maildir. Envía un correo a tu usuario y comprueba que el correo se ha guardado en el buzón Maildir del usuario del sistema correspondiente. Recuerda que ese tipo de buzón no se puede leer con la utilidad mail.
Configuración:
 Para hacer esta tarea vamos a indicar a postfix en su configuración dónde se van a guardar los nuevos correos.</description>
    </item>
    
    <item>
      <title>Servidor de Correos. Postfix (IV). Webmail Roundcube.</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2021/01/servidor-de-correos.-postfix-iv.-webmail-roundcube./</link>
      <pubDate>Mon, 25 Jan 2021 17:15:21 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2021/01/servidor-de-correos.-postfix-iv.-webmail-roundcube./</guid>
      <description>Descripción (Tarea 10 y 12)
Vamos a instalar un webmail (Roundcube), sobre Debian Buster alojado en una máquina de OVH, para gestionar el correo del equipo mediante una interfaz web. Recibo y envío de correos.
RoundCube es un cliente de correo electrónico IMAP, de código abierto y escrito en PHP. Para instalar este webmail deberemos de tener en funcionamiento un servidor de correos.
1. Requisitos:   Tener en funcionamiento un servidor de web, en este caso usaremos Nginx</description>
    </item>
    
    <item>
      <title>Configurar LDAPs en Debian. OpenLDAP. (Freston)</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2021/01/configurar-ldaps-en-debian.-openldap.-freston/</link>
      <pubDate>Mon, 25 Jan 2021 09:27:32 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2021/01/configurar-ldaps-en-debian.-openldap.-freston/</guid>
      <description>¡! Este post está relacionado con un entrono de trabajo con openstack incluido en otras entradas de mi blog.
1. Introducción LDAP. Protocolo Ligero de Acceso a Directorio. ¿Qué es LDAP?
Es un protocolo muy utilizado por empresas que apuestan por el software libre al utilizar distribuciones de Linux para construir un **directorio activo **en el que se gestionan las credenciales de los trabajadores, los permisos y estaciones de trabajo.</description>
    </item>
    
  </channel>
</rss>
