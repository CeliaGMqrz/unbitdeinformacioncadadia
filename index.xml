<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Un bit de informacion cada día</title>
    <link>https://unbitdeinformacioncadadia.netlify.app/</link>
    <description>Recent content on Un bit de informacion cada día</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 05 Dec 2020 13:21:43 +0100</lastBuildDate><atom:link href="https://unbitdeinformacioncadadia.netlify.app/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Red DMZ. Modificacion del escenario.</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/12/red-dmz.-modificacion-del-escenario./</link>
      <pubDate>Sat, 05 Dec 2020 13:21:43 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/12/red-dmz.-modificacion-del-escenario./</guid>
      <description>Modificación del escenario Nota: Si no has visto la primera parte se encuentra: aquí
Objetivo: Vamos a modificar el escenario que tenemos actualmente en OpenStack para que se adecúe a la realización de todas las prácticas en todos los módulos de 2º, en particular para que tenga una estructura más real a la de varios equipos detrás de un cortafuegos, separando los servidores en dos redes: red interna y DMZ. Para ello vamos a reutilizar todo lo hecho hasta ahora y añadiremos una máquina más: Frestón</description>
    </item>
    
    <item>
      <title>Actualizacion de Centos7 a Centos8</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/actualizacion-de-centos7-a-centos8/</link>
      <pubDate>Mon, 30 Nov 2020 20:59:38 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/actualizacion-de-centos7-a-centos8/</guid>
      <description>Objetivo: Actualizar CentOS 7 a CentOS 8 garantizando que todos los servicios previos continúen funcionando:
 Actualmente tenemos la versión 7.9.2009 de Centos
[root@quijote centos]# cat /etc/centos-release CentOS Linux release 7.9.2009 (Core) Vamos a proceder a actualizar Centos siguiendo varios pasos.
Preparar el sistema para su actualización Habilitamos el repositorio de &amp;lsquo;epel-release&amp;rsquo;
yum install epel-release -y Necesitaremos instalar las herramientas para el gestor de paquetes YUM
yum install yum-utils -y Resolvemos los paquetes RPM, de forma que, rpmconf se encarga de buscar los archivos .</description>
    </item>
    
    <item>
      <title>Configurar HTTPS con Let&#39;s Encrypt en un servidor con Nginx</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/configurar-https-con-lets-encrypt-en-un-servidor-con-nginx/</link>
      <pubDate>Sun, 29 Nov 2020 21:09:40 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/configurar-https-con-lets-encrypt-en-un-servidor-con-nginx/</guid>
      <description>HTTPS (Seguridad) Objetivo: Vamos a configurar el protocolo HTTPS para el acceso a nuestras aplicaciones, para ello tienes que tener en cuenta los siguiente.
1. Vamos a utilizar el servicio letsencrypt para solicitar los certificados de nuestras páginas. Let&amp;rsquo;s Encrypt se trata de una autoridad de certificación, conocida como CA, libre y gratuita, que permite generar certificados SSL gratuitos y automáticos para nuestros sitios web, con el objetivo de promover que el tráfico de Internet sea seguro.</description>
    </item>
    
    <item>
      <title>Instalación/migración de aplicaciones web PHP</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/instalaci%C3%B3n/migraci%C3%B3n-de-aplicaciones-web-php/</link>
      <pubDate>Sat, 28 Nov 2020 20:44:54 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/instalaci%C3%B3n/migraci%C3%B3n-de-aplicaciones-web-php/</guid>
      <description>OBJETIVO:
Realizar la migración de la aplicación drupal que tienes instalada en el entorno de desarrollo a nuestro entorno de producción, para ello ten en cuenta lo siguiente:
 1. La aplicación se tendrá que migrar a un nuevo virtualhost al que se accederá con el nombre portal.iesgnXX.es.  Crear el nuevo virtualhost portal.iesgn05.es  cp /etc/nginx/sites-available/iesgn05 /etc/nginx/sites-available/portal.iesgn05.es nano /etc/nginx/sites-available/portal.iesgn05.es # Default server configuration # server { listen 80; listen [::]:80; root /var/www/portal.</description>
    </item>
    
    <item>
      <title>Instalar Openstackclient y deshabilitar la seguridad de puertos</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/instalar-openstackclient-y-deshabilitar-la-seguridad-de-puertos/</link>
      <pubDate>Thu, 19 Nov 2020 19:31:53 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/instalar-openstackclient-y-deshabilitar-la-seguridad-de-puertos/</guid>
      <description>Necesitamos instalar Openstackclient, para ello lo vamos hacer desde un entorno virtual para no comprometer la paquetería de nuestro sistema, ya que no es necesario para nuestro sistema actualmente.
 Recordamos como creamos un entorno virtual con venv
 Instalamos el paquete necesario para instalar módulos:  apt-get install python3-venv  Desde el usuario sin privilegios podemos crear un entorno virtual con python3:  python3 -m venv entorno  Activar y desactivar el entorno  source entorno/bin/activate (entorno)$ deactivate  Usando el entorno virtual creado previamente, vamos a instalar el paquete Openstackclient (necesitaremos la libreria de python3).</description>
    </item>
    
    <item>
      <title>Crear Autoridad Certificadora y Certificado autofirmado</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/crear-autoridad-certificadora-y-certificado-autofirmado/</link>
      <pubDate>Thu, 19 Nov 2020 18:51:45 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/crear-autoridad-certificadora-y-certificado-autofirmado/</guid>
      <description>HTTPS / SSL Tarea 1: Certificado autofirmado PARTE 1 OBJETIVO:
Crear su autoridad certificadora (generar el certificado digital de la CA). Mostrar el fichero de configuración de la AC.
Conocimientos previos:
OpenSSL permite con una serie de comandos crear una autoridad de certificación o CA en la que los servidores y clientes internos confien. Las funciones de la CA incluyen crear certificados a partir de las solicitudes de los certificados para los servidores y también la revocación y renovación de certificados.</description>
    </item>
    
    <item>
      <title>Instalación y configuración inicial de los servidores</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/instalaci%C3%B3n-y-configuraci%C3%B3n-inicial-de-los-servidores/</link>
      <pubDate>Wed, 18 Nov 2020 18:22:12 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/instalaci%C3%B3n-y-configuraci%C3%B3n-inicial-de-los-servidores/</guid>
      <description>En esta tarea se va a crear el escenario de trabajo que se va a usar durante todo el curso, que va a constar inicialmente de 3 instancias con nombres relacionados con el libro &amp;ldquo;Don Quijote de la Mancha&amp;rdquo;.
Pasos a realizar:
1. Creación de la red interna:  Nombre red interna de  10.0.1.0/24  2. Creación de las instancias   Dulcinea:
 Debian Buster sobre volumen de 10GB con sabor m1.</description>
    </item>
    
    <item>
      <title>Compilación de un kernel linux a medida</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/compilaci%C3%B3n-de-un-kernel-linux-a-medida/</link>
      <pubDate>Sun, 15 Nov 2020 20:07:29 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/compilaci%C3%B3n-de-un-kernel-linux-a-medida/</guid>
      <description>Ejercicio planteado:
Al ser linux un kérnel libre, es posible descargar el código fuente, configurarlo y comprimirlo. Además, esta tarea a priori compleja, es más sencilla de lo que parece gracias a las herramientas disponibles.
En esta tarea debes tratar de compilar un kérnel completamente funcional que reconozca todo el hardware básico de tu equipo y que sea a la vez lo más pequeño posible, es decir que incluya un vmlinuz lo más pequeño posible y que incorpore sólo los módulos imprescindibles.</description>
    </item>
    
    <item>
      <title>Instalación de un entorno LAMP</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/instalaci%C3%B3n-de-un-entorno-lamp/</link>
      <pubDate>Wed, 11 Nov 2020 19:21:43 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/instalaci%C3%B3n-de-un-entorno-lamp/</guid>
      <description>Instalación de un servidor LAMP Crea una instancia de vagrant basado en un box de debian o ubuntu  Primero creamos el fichero Vagrantfile  nano Vagrantfile  Le añadimos estas lineas para configurar nuestra máquina debian  # -*- mode: ruby -*- # vi: set ft=ruby : Vagrant.configure(&amp;#34;2&amp;#34;) do |config| config.vm.box = &amp;#34;debian/buster64&amp;#34; config.vm.hostname = &amp;#34;debian-cms&amp;#34; config.vm.network :public_network, :bridge=&amp;gt;&amp;#34;enp5s0&amp;#34; end  Levantamos la máquina  vagrant up  Cuando esté lista entramos en la máquina por ssh  vagrant ssh  Una vez dentro le añadimos los repositorios esenciales y actualizamos la máquina  sudo su nano /etc/apt/sources.</description>
    </item>
    
    <item>
      <title>Servidor Nginx</title>
      <link>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/servidor-nginx/</link>
      <pubDate>Wed, 11 Nov 2020 17:51:13 +0100</pubDate>
      
      <guid>https://unbitdeinformacioncadadia.netlify.app/posts/2020/11/servidor-nginx/</guid>
      <description>Servidor Web Nginxx NGINX es un servidor web open source de alta performance que ofrece el contenido estático de un sitio web de forma rápida y fácil de configurar. Ofrece recursos de equilibrio de carga, proxy inverso y streaming, además de gestionar miles de conexiones simultáneas. El resultado de sus aportes es una mayor velocidad y escalabilidad.
Además de otras tareas, los servidores web son los encargados de la entrega de aplicaciones web, respondiendo a peticiones HTTPS realizadas por usuarios, normalmente desde un navegador web.</description>
    </item>
    
  </channel>
</rss>
